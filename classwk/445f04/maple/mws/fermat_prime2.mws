{VERSION 5 0 "IBM INTEL NT" "5.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 
2 2 1 1 1 1 }1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Warning" -1 7 1 
{CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 2 2 2 2 2 1 1 1 3 1 }1 1 0 
0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Maple Output" -1 12 1 {CSTYLE "" -1 
-1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }1 3 0 0 0 0 1 0 1 0 2 2 
0 1 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 31 "with(numtheory); # 1
,2,3,18,24," }}{PARA 7 "" 1 "" {TEXT -1 69 "Warning, the protected nam
e order has been redefined and unprotected\n" }}{PARA 12 "" 1 "" 
{XPPMATH 20 "6#7P%&GIgcdG%)bigomegaG%&cfracG%)cfracpolG%+cyclotomicG%)
divisorsG%)factorEQG%*factorsetG%'fermatG%)imagunitG%&indexG%/integral
_basisG%)invcfracG%'invphiG%*issqrfreeG%'jacobiG%*kroneckerG%'lambdaG%
)legendreG%)mcombineG%)mersenneG%*minkowskiG%(mipolysG%%mlogG%'mobiusG
%&mrootG%&msqrtG%)nearestpG%*nthconverG%)nthdenomG%)nthnumerG%'nthpowG
%&orderG%)pdexpandG%$phiG%#piG%*pprimrootG%)primrootG%(quadresG%+roots
unityG%*safeprimeG%&sigmaG%*sq2factorG%(sum2sqrG%$tauG%%thueG" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 95 "The Lucas-Lehmer test can decide w
hether or not a Mersenne number M=2^N-1 is prime. It requires" }}
{PARA 0 "" 0 "" {TEXT -1 96 "that you compute A_\{N-1\}, where A_1=4 a
nd A_\{i+1\}=(A_i)^2-2. Below, since the first \"T\" computed" }}
{PARA 0 "" 0 "" {TEXT -1 100 "is A_2, we stop the loop at N-2. If the \+
number \"S\", that the program reports after the loop, is \"0\"," }}
{PARA 0 "" 0 "" {TEXT -1 101 "then M is prime. If not, then M is not p
rime. So far, M has been found to be prime for only 41 of the" }}
{PARA 0 "" 0 "" {TEXT -1 59 "approximately 500,000 prime exponents les
s than 7,000,000 ." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 326 "printlevel:=
0: stt:=1: stp:=100: print(`Fermat primes 2^n-1: in the range `,ithpri
me(stt),ithprime(stp)); for j from stt to stp do N:=ithprime(j); A:=2^
N-1; S:=4: for i from 1 to N-2 do T:=S^2-2 mod A: S:=T: end do; S; if \+
(S=0) then print(A,`from n=`,ithprime(j),` is prime!`) end if; end do;
 print(`The rest are not prime.`);" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
0 "" }}}}{MARK "1 4 0" 37 }{VIEWOPTS 1 1 0 1 1 1803 1 1 1 1 }
{PAGENUMBERS 0 1 2 33 1 1 }
