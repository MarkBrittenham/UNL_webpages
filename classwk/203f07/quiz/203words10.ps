%!PS-Adobe-2.0
%%Creator: dvips(k) 5.94b Copyright 2004 Radical Eye Software
%%Title: words10.dvi
%%CreationDate: Thu Nov 29 22:22:37 2007
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMTI10 CMSY10 CMMI10 Helvetica CMR7 CMMI7
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips words10
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2007.11.29:2222
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 107 /k put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC0C51802EA1E0C63E6DE20980D3DD206F05360F78906FF0132D5F4EB
8B2384EBF991DF6A99488477067F4A8C0FCE0CDE8FDEDE80EE0E087271DCB088
9A0B2ED6FCA29399FF34CAAD2F4ADE9979E7B1F46EBCF7EAAA9C1BD7D5A7C901
C4F56769AB3279B88B453CAD4F980D5776CBAFA7A5E45EA940A80018FF8A1060
649DBA8BECEB5FB18938F7E69FDCC37A64DA9FE7336ED1BBE2609B8752409617
6D0C56A0CA33A91D7D34AC34703DD12E031D0EEDDC326DB3C7D69E2EEEF2103E
0207D54FCA89E72DF619FDA6021550754A0D030D6EA8189C61F52EEC6B6EDA5B
DA415701B497D23192AA5B82BC7A1EADAB178F3EDFEB2B490331D572DE24924B
DABD78F473C9BC80F9882807A24826CBD81F25FD8854805E12AF244A105F40ED
CE873CC28F1F57461711785B02EE4A9B42DBB41E724A8DC4C45230D7BD267C10
A9710EAF98C68F10C82AFF885B8CC57C6FB9DCDE3457F036B369C08A8C807551
9CA6A0FBDDC5B002564F2C3E996D1814350F1D8A506D8C095DDBC5B570E91DBF
A94B36AFFEA34B2E775964B025374D93EC4C3F619AC2993280C9DA9965BD3AF6
EA4F78274841F53552C978ADF6A4645CE9BA6549C3A9F288537E1E8956A7E0D3
DE61135AB074D7C7A5CA22BF17D87E4483FD9FFB459598E8360BE4547089213C
856628E332621B12E00AA9B1DBF258070938F9553E3D0CA56C6208E175A668F3
BCEF2175D86D1AD26B5954E8466DAF8EEB33974E47DD843ABD14E4C3A4E23A0D
7E42A1925EB5B1CB5C38E9C13231E810BE9CCD3C5639F456F8193D35589D169F
93E763293CC09B22C8DF6F88A9EE2C2C6A22605426A07A7347E4B2A26C5F0315
47
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4CD5C7347D2E
1D0D6630F446F3708FCB29A85F40B4DAB4D60AA8F5B2DBD67F2E45D80C7A7E86
144669F75F8FA14609F8E4246FEC475ED262E03D30393C78C7828206842B565A
DBE20EA52EE9C4C3862B2F5F12CF89D935B89B84A45CEFCEAEE8EC8806339364
56FF1FE2E5112803E3E40162D5188D2210A54816AA9960611721C23A292AE80A
8F8C0FB114D71C111700B0FEA8804F37C5D31ECD7006603C53F4BDF7208286AF
3A25CEE58E88BF81A4800B68C2A19EBDADF9B1074702E779A7DD915EFE09D35E
BD176D7346D859D0944520171C4E97696AE0502C43C391FCE5E8FB1789065E18
BE3AF62200D57912360411CE848B4550D1B0A3BA576F9B41CED3A23E753631A7
25375ABE8A4B55BC65AE2EAFAE452766961965093084D218637FB447795CC991
EB1EF26BF82B7A81FA847ABD3B559D35828AD7DDC5FC7B43C6C14E6ADEDD7663
F272AA9A121630C5263D58773BCB1437EC2FC54C4AF90E677A8E7D1738D003D4
18998C03CC9AE182E7758767FEB5E1B03C6CC32AD30D0ABAE6552290771E2CB1
A23F469A8447C1868C6DEC2C3C2BCFC691867E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 100 /d put
dup 112 /p put
dup 120 /x put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
95601766758B4BB6C93DDBF4C7D28729C5FE8E8BB90DEC2084C4BF1363888DC6
8DD7459A5565BC79D65D113312768FFFB4996320C453716B8215D7E4C712D8A7
1355D457BD131A7C775C5DCEAE1A09813BE76F5707EA29D80CDA66F0658D2C8E
9EE7C473A129C487154B7A34879102AAAC6896E88005874F2D0F7DB55349DCA3
8A509FF755C4A78F93310A9FF3D06E850106A82945F3E3279CAC39C0BBB8B3CA
B3ECDC6F0408B939131614CCBE9FFFF1F3DA6557C6324FFFA5B1251EBC9DBC9A
3AA8E0B9793A8E0F0A72176696A3572DACA79B7FDBBB0924BA04284F915BB378
B7E297232064C913DD52B5CAB75265BBE72206522562A3949B44AC8F2C55443E
3E00C5C867F90510991F0511C3C6655FD14D48F4A564B92AF1D7A064508A7BD6
EC575CBC570E79415F41ABFC4F76ECE19E37A0C825C957B468FF9BE73E5CC7F0
765DDC2D8F3ADDCB6F85686617F618AE8B9CA22DE359C9FB460902CFE471EDC3
1BE02FDD912DF23B6BCFEDBB7D9BD2A484C8FBE1032ADFA97B787CE3608B52D3
A5D4323E9CE2271B11C24BDD8A30772F0B043E783D8B26DB36DF55160DD768DE
75B02860E47FBBB3681EB01794BAEFFD565A1CD6AFABE0917975C8B4632BD3C7
AF6D996827DD58D9A9D02B93347955894E389F4C9590DA9C23F2C0BFDAFB5018
6D5A3CEE6E16533A8B24BF413FF7D6AF1A7717F911B1B40546EF5B5DDE2322C6
9629EFB75767B67326D5585B38173F96D1F4691BF1CB7439C5EBA858AA73FA3C
6B1548E10F23839DE6FC3F04459AB10BCB5255961D61225AD93B3B0D96964B5E
6509F5C7338A25D32642C020AFDEBC58CBCC40062391F5DDF177AC586F12AD40
1EF4F47FE7F85537D25A7B3E7D5BEC1EA2A7C76398C348E672631683DA6177F2
066BE8B14C038F91D865C16C2AD2557268C874D8192F7D8243A5EA018CF48671
8A470C966233769711CC9CC6FFA418D20DFC385DE24698F3D75B6C44E678C8E9
05E64289B764A054AA8A3281438E40A0E439BEC9CF83D8048219572A9D35609A
D3086288A8E6766499B0E6ACBDA0EFFD83FDDF9EFAEDB9FCA5F2D6A04324556C
4DB3347F7A614A09FDD25B75F17079D6E12015DCF09997C2EC7F99C435CA1730
D0A39F88590A79F614C2E2B991DE27E43E129228A33FAEDAABF2F4BF78206E26
A2982C59D8BF4B1C5A0B7039B53BCE71CF6875D40F8A4B512A6BF4545F21FB57
B44F0875CE6271B356A2ED2C662CFFF7E7F6B6B876599ACED17CB0B5D8967CB7
1648E5352BEF639E742882CB17BCFDFE247FBC127CC9862C353E0D5F97259B44
0CD97C0A68AF793B0296C3A30B84AC2D042E577A6B2D1C7183C29217145E0BD8
83233CE516719A608C848DA5EE55EEB0A8B7271D7317BB5E115DE2B76F2BC9B0
B77BA2F02A36F3F10038438030F48A922EB7C77AFA44B6153D0A231B80647D58
A217F81410B0FDD8BAC3292F3C69693D9F56795000B32431387A114D649C840A
A09A10A5761A754328099FA483D43A8EC5116FC320ED4482C15252A30AB2BC93
540305EAF469C727BB525EB5C3A9A5AE8140A7F6FB44C4D08FDA54A81A37A315
4422051035B6A2CCCEBDAE3BF328E39EDE2E319D6E8AA6710A69D34048B6AD84
5C2694685C32AE7BAC3CD0141C6DF86D49CE96AB1D19DAFE35F7FF410A6E3D52
20891861445EB2A2A36747BC65C64A7189E3D53E0DE81208ED4F5F84BEA95E50
DEF12E27CA0BBEFE7078DE34A815585A7D2A0C3049E6ED29F5A25AE01888B933
C261E125A6788111A15FA520EA41724A92CF1DE166F9A41AA99DC6D07B2581D2
5B8AD892634852D366DC6BCCBDC2617E9FBDB4D5E412BE339A9FDDA1885CFCB7
9CEFE7C5CA7E29118329444D02F080B0103C8BBDFA074E85501D7BCED96C0503
5BBE2E81D7EE5056002429B0A132272881D515009D6F50CDD58862866C3D00DC
1E712549E40ADB568B0DD80FE51CC00EB0737DD3ED8183B856042A378BF08930
E1160A505407C4BE5780BDFC6C4B53DD89847B0A9CF6581EFCEAD7359FA56D33
93786873937222CEF1681ABA57F7A49C085AAA338915ADFC9EA9FF5A2391372E
0F43824FC2D951781BE9D5EDA847F397B246AC0411488538741633B8E9C847EB
0A02DFC76E6E79736D3DAD593611C01D101D2B6488405CAE902E6482C0E58A88
0DD51D0A4F8D47B5496FB62ACA06A5DB884DE663D45999D2E3E8C653AA5E5534
E19CA745EF1B6602EE57E4F73BF1F98C4E7BC01F6424528688F5917613F62509
7ED5B9D41CBA100A40A28E6E988AC5C984E14DF1FD214C54BBD0AA3911F24FB3
E9C3295A87AAEA5B6597F3701083D78D7959FFE55840C8D8D6DF94767A78EC75
56C49D9E7E6E03584BBB0A8FEA71E36C03DB4FBF54CA38F4000ECA2F29BC21D3
74299AFCBF20D97936570A7FB63E8DD9D722349C68DAF32ACDB173D423DB89AF
F6D258E5B5F9CD3E4EC3F29C2287A470790699EFDF4EA1795794AE162E65AF61
ED699993EE1E7E8251E394563EACF792AE5F8BD73B21BE862EFB442B5BA7D9D2
28CBDE9227DB9F1E1B3DD7DDB4CACCB37ABF36B4830B01663918C0C1BC61E2CF
69F40FEB80434CA2E337AE880A9022A004629F3292B6910D2496DDD9E9B605CF
9F430F3A8F4FFF9E4F9CBF3959B5E31664672776929DEFCF7128438DF383C2C8
9322D1F29600EF882BF041AA9A34430D47212D1657ED55E6D552AE762A588D60
EDD09E7F6FF607B3BFA2E97037AAB3E6288A43BC0297FA7CB1AAFB28D6567305
9AA60A94EB37A011611581F8156517286E002D8754F4CE1E5953604B4D7235D7
B5C1B382D984C8FC1058AAE74564584F41254EB4FC846C49C74C263E44C4EFCF
E826571B84912D0175EC738DDFA3088707976866ADF30F746FABB35BE3716E24
9A654B55F5AF9A6438EA0E28BC00D8C92C5A5FC07C11A0C308E17DC96274AF63
1EAE28E33D2C757360D1C9DE560557CC40D6BC9A7057CFAFADC39506948B6BA4
0D7F179FFCF01C25EC537C198ADC89C428965B4F15D127EA8F5E28A898E3AD54
20A26EA7F81327BA7158345E6178B315C0CA33B1AF029F1282B3F2E73D622074
E25537172C578196D2FBE7ABA3EB2279E89907429AE15632DA3DBF847EA2F64C
2CA9CFA739CF08BB647E569F2BCD26ACB756F404FBF9DD2797E6572B87491FB5
A880584494E412D17B8631410BB7A9089017E7F8BF64D5DFEE5A5AA22AE1CE3A
1AEE78B68F3F043F1C809A1DFAAF71410134B7C5CB4E6D0634A5F9786FE1A838
BCBC8301714347667369274C01FE62D41102E1DDF7AA11E196976148E2C6DCF8
31E90D9A190122A027A74A22CCDAA299206EBFA15F619B15070B98A758398AD9
4B7DFC9EFAEB0ED713FE0132786BE1A77C474ACF4BFB4BA0BB35876A585492F7
651A525200DDACAC2722816FDD2D9B44FD93640D987CC0133323171D0C54092B
C85619C05ACA010713B9B43D4DB5941B5D2D53BC7F26BCAF9FE9E28DFA194FF2
33F0432A23369A73800874BC3B31FCDDDE45EB22C15CFD5149058740061EA402
C3D8F842B6691E7AD8ED638B162DABF151675DC94D62660C4A71F8E9B413E8D8
779EDC5B70F373850E8AB832A3F220C0DC93ED2CBD8A234681769B545238E44C
F4300AB32B6BBBE2270647E9D36EF6E59D799E5CCC095053F6813E0D7F1DFFD3
6F6EBCC14CB2CCC26FE2AC2AF6E9BD20A08282534E57A693284BDC6ABA4A7C27
8557F8394058B4139030D6467AF35E729411652D047A0B1E6834F9F8D32020DB
632F0DB0C758EA676ECAAB7F8B1A0E7F6B7EC52556E100AD0603BD1A8579B449
A371BD8C1B1098C941EEF29D310564E8FEA9BF5F256B1E15DA4852FD0F8CA473
40E42D9F5002147D713DA04CF588E1F53B945F6001E133871BAAB0B33182DD19
05EA82D460AE350D2BA720709F07B7C9FDF0DE7B954285F16433FEA0FA22D883
BE7CB07A875277B8F422420FADC974798FAE8337940F179FC09E0E43E0831F22
9CC80F82C3313339D484A464DA671B837D7635382FDA509F21DA88C51425C703
322CC8C5E8EDD91C42379C021CCEA8B1364467062479DF914A5B18F33DEFA8C0
24B6C8892A7837C8CC2DFBD53926E42229F591C25071F3FF2E75DA62D620D019
D1FB9E1BF73EC2EFE53C1731FFA79378B84BCD602BC75C6591E91D1EA037B931
001B8F6D60378B72EEC8F85DF9DF4C581E861A89D96819864C648BE9BA5F4DB9
B5B2150A232A6D240E72ED09C45C9AEEEC1BED531D204A61AF061C99B056E405
A979D2262553C7F0F3DCFA62A630205176DEA33EA5B353C87EE9FED8E2C3F31D
0A73A043433C7D0BB72D7CEB9489B58E61ABF37C84D1796FB63D5FE318695B9D
9E58D077ABF02481CB664983F34AF2F9FAED0FBD34A99851ED87EA0461B66103
0CD78AE5216DB15022CAB91CA8254740B3BCB8C7A8557AB7B39970BAEB8126E0
04E539CDCDEBF65B668BAA654B0AEFB4DE5B3836046F6E287A0FB64A2431A8F3
D7EAD395921ED292394EAD1853136AAD314DB33F3863CF6AB87E1451A0FB0ABF
07527ED5C3A3F6EFEADA2AB0E05D42F43B0BE181AEC88A57C471D7A1FEF74397
F5D5B836DA5206D77063FB2A56838E837E56B7B0E4EB4AF9DB857E69B3960A77
08A1673D675E2C04429E669BF9CA52A22FA61F3D30452468133167345A9C37AA
1F2C1DD8916C04F8CAEC4BB2C4E0E4F32945C07A0EC1AC0C751A3FA7A9982C17
B678BE87291E103EBA6923CE6318BF59E8908BBF5D808D3D537DD71AC8A8D38F
92D7C95B2C31499FD0051763CBB434C29176A87E4E4C3596082A6C37F191AF8F
65552B2B2DE0A2A3EC07FB1C3A9298FE11160202
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 20 /lessequal put
dup 91 /union put
dup 92 /intersection put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703C1951831CFD3569BF1CC312382F4A
9021A39FE4F3E8146034DB384C29524BF88E4BE6048C63A48BA6C80B9ADEA258
203123AB85F27C3548508980376E50637473AD666499BD57B178429DE1DCAC99
01E521BBCFF56D203E27998E7F38E869C7A4958D98F91F63F000179C41EDE1D5
BAE28DBCB956FEF62126142D778EC5721D619C4E2C6615F9A3ED005684C44174
4E9BFCDD204595382F900271C4E1C49BEA4CEA1DFC6D2FF63145E041BDDE1C2D
1749B0D0E23BA2485C07CE4D0CFD85FA688EE35E4C353E1E77008AD66D45771D
D5C5E9C1D93C36425340113238B5B2E65B46A66306E9BA6A4C5F9DEBAA1935E9
87CBD027B6569E410C2310924B06D1758F0D5D05BB3728BA1BFF1719640E4B84
38A731FC8970E4A9B503AC247319A67FFEFFF783C79E8B63D453687095D5B386
1B5554C77118BC995A410EC6967080B3D7A0C9217E92406F8469A3CE1C131DE0
DE3F964305C098ED43DFE74112358F3D0104663F5BBCC8303E4B1843A313569B
4F531EAAABB37938FE320A8FE7FAD2546FD998C9CA8650D7475D91A04310319B
B30032CB4839A47879821ED2CECA26506B74B3F98B9B6AD271E3410CF665FB23
EB62BD4C6191CFB0488D5EC423FF00D5656EF871DED0230FA3C8634DCFF1C26F
E57A68B04B1B7C9DA7387798412467060E28A985AF5308E87EA33BF0D5A43858
92563444A9CF9CC2D30D99702DBD3A4B1B929E8009B02A03EA0A7D10AE106A7A
1E5F1710CE606E0000BD7408E91D07013241126E93E4AE4851175691E9C27549
767599D5CFC67901429D951CE090DC152F9295F8C9F230A506C28D692A797447
34AB136E0A61328315FCE33DA61A1615F84B8A0F183001027637E21865D2B2C0
FC79B94F9E1B3C1C4DC4E27B8D6928104926BD3CE051C9FF1F1E3A3EEB6E4E17
86350C9289EC20958D6976829A88FB38EE1902FBB92DD2DC91D6B057095D7782
57A6F60CB56D9D7E003B9C0BD64036632F433092246EAC7414951ED42BEFEB19
A1F29746DB2E0A7D9584628B5861878063300CEEFD622F67793A50EC36DD0223
1FC49E31617A5B9DA9634D9AC4960AEFC02A31A7F6933B1D7B67CC4D9E4B2401
03314DFC8C0AAE5A0184395CA41F25FFAEF9C4A2A408BB09B167FFF786023437
FC69CF88128A06032A4FB5598E20B2C93E6C0022B24F753365EE25FDA8A37464
37B99770CBA92B5B83D90BC49C8B87A8C133D509769DE5C10FF8B6778061B697
7D08A1A76F6FB299644C8F97F824E88AEB7332B72AEC0CEA4CB06650E79C8CB6
0216EA748660FAE4C9918181354BE810FEBD7A48E0F9CA1461A66A6385259160
FB1A1DE9010980091872F45C4D1988D306D51235A5619A6D8E97A8002C0B165A
A78AA2D4F0F6F0E0A9CB39A2E6AB5A3EFFB1C1A9533B278B1FB3E6A5E4086043
5CAAB25F1E322933FCC7EA0B3D6DE6A39374A1C34DE6D32C4049C62F2DA4E6EA
AF49B8C37DA075963D7E2233BE57D8484679CC141F7C8E2F0CFEA1FD7EDB4994
D5F660B132D84EEB7865DA0824FFAB9D4D2C32EAA1B5364F7E405C100E41DE38
3A81AAB60C4E3F70EB8F3D46BF27
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueID 5000828 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2D80B2772B05DA60F3DC15A815A6BAFEDC399C7956E75
3851CB3588E22936FBFB63A58300298B11C45D82385C083D07AF133BB1BC941A
FDD9F34D5E0B8087EF2A58C54D8AB7580EE3ED58AEB83B72CB9028F472ADBF11
05A77651F118824F6CD00209EFB60C1D32D46A78E8C8DCB8B0E742828E3B7D17
DF5200D68189C91FB8489CDEE8BC223C4281DDCA5F7DA80BD5C2D66A14695EA1
5F05E03500579ADD440ED2C57F535807560C6FE3873143D792734FEAB93AE8DD
633BA6FC5683083402BF086D23594AAC84A4868AFAA32AFBDF86142B350F8F62
E2531321E4CCF34293024EF8AB617BAB11A3A5EDA03CAC5AC431C893607DF8E5
C3DC8646027A7554625A16FD184A70DB5FE6DCEA366B64430A147144CC9839F5
72829FFA42BC3A8406D680E44A0305C9C9E265E91AE82EDF30F73730DCD4AA23
3628F1A50CA58BFCB4BA1DF56C1EB66200EE715EEF84513A94BEA7F236CF47E1
26A76B8BD94B7E15BF1F27858AB084A9D0C71994083A3ABD8E467B90985FE399
E5758768346C973757132076943E16DED846412E620528DB45566AFBFBF78E46
4E50A515CADAB0A406977258ACC80D387FE8E93ADB8D1ECB1D589B86C324616F
9A2EA082EBFE8B5F862698F71F5EBB2D7F6ACA63C54E9701B8CDF5FDC8652F59
017D169E27A9018E63C02C9D6183B108B518653F4907064C1B75A51E80617178
46E0EC2805175C0315161696CCA14F0DBB9FA0787ACF3DC4BAEC2FAA4AA6B9B2
1E7E84B102AD2ACBBD8F429DF0B8691A9122752BC3FB0DE7CF84875E13060FF2
FD1104C265145C51B5A115ACBD24894DDB8BF124C5F01A28AB99756A8D164459
A4682C0636EE2BFD2F8D9B10FD4FDAA16A2D2ACAC5A9F6E75549AC0BAEF556F2
8A31C119E342B4A48915C8C1C593614089443D03AE173F2F839C803BA5BBD61E
1B4D28C79985CAA361765847411B882733993A0DD1E9784DA68396CFD96B1E26
D5BA3EA27ECCDFFBFB43574FB0950FEE3FCADE2109F355957B2D45685BB46933
B024D18D81F6DE996158FD647C023F77DE57782342E168816C083B7C761CC945
BE8980F7ED94266AED8E4E750FB39F562A3998B18BA5634A56C74C9BF2FF9EE2
F47557941909C2F3542840F9B75542566C4C013FF2D79282D550DEB3AB1998CE
671467D83543DD72C4680867BB645F31B596517EA53304A32189BB86D032A9CE
B949B702B612D9CDA1E02976405138784F56A88738C02B3A955DEBE5E9249938
CE1595BE7FC36CCF97D8C12BCA467EF2796EDCF9D2B66700C76AEFCCA7CAE15B
F7FCE54F9A362FC63473D9D63C585F0B3D76D9227735539CF0BCB2AE64477148
C5084A589F882A0BB96C368881D392E2E6C8734EF6016D3434A7C0F22032B2A8
609ECDA1A422044E88AEA3F3C91BECADD82C5FCC95B56FB7FC8BE7F1CDD7928B
AE43193F4549B12297D12C59ED046868FB8D96D39174226DF8EF88C7121B06BD
0E7F95B41ADFC613C5D05C8BD6E4887B03A0473288B06FC9D71D73D95EEB7F2B
64E20B3A3055C47B7399F63B369F2CF544D2F4FC959416091502D1A7528CEA69
28E7E1BF04193028E55862F6D6C88B356E29BE2294AB7993BDE0CA7DE03FB577
25F499E72D16409C4925636D2BA1D951E15FA4155AAC610841B35A4971F91C38
2E68CD84E6F22858750FDB23C66D2E9E4F0E619E0ABCCE72478A0699C99B401E
F35F5C8B794EF9A60052656B5B7BF01C197802550BB6E4FD4DF0896FC4CE950E
BAEDEC767935043DAC90BFEA9C5E2D050F6C78E6BF90A5B342F8CE160FBFD686
D9531D93EF4EEDDA32AF9A9A0C96BA597640556BCC3F0138B8E9666F1EE7AB92
0701A7CB41FB1DE35F860460F29375D0FAB36565F64D40C4504EB5C617ADDAD7
BAE7FF06CBEE9B259A87D5CA4E6CA0FDBB9A4F8450ABA47BBA9700E66F0021EE
789AA311B4847812648DAA8813C889125F2FFF5EB4F924A5B31DA9708C15A021
AA8890FE9CB7A0749412D10FAF363A9B67311D41BFE96ED29A992F13790BF4AD
A33BD55CAF4DAA0B6297DB0CCDA9A7859223C6975373B155B07957126FB4CC2A
CB7A130597198C2259971E3232DBFD3BF17A37F45E2B0DB0BC59302070478BEF
B372852E3E4D1A51BD6EB53E5854B701FC9B05030CBECF3E1776C4B25F65E047
4BE56CE95D507C97BE35C8568D79186D6981314554241CD207C2B49D54A52EF5
1534DFB1AB639C6091FA78FE3B96D77710A8F3EBF32D5675949237DA89A9F595
8A1EF44F56C2DC4342BCA63639013251EDF02367AD8986B3CA497A9242E6285C
4E38BBC95072CEB3EC8706BB2574C3ED857E222A74789465002F1935FDC4463D
5170FBBE10BB3144AC53A6C975A68E8225A050A44095940BAFCB355FD76A3F27
1912C04D613C9F417DB0C5BBA9C91E5060A2976CDFEE9B25C5DC261A350F3C14
E2732680AEE54D1D1F2114D61E5353A15D18DD45A890D20DCD3D31046A79F9E4
3AF47FC47F8E6A7321CA877556565A3E205EDC49D2246EE480C77ED2FFD117AF
127DDE07D3A27389C8B843F6339D85AB53674D5E0C160528BAE2F385BE4EC3E3
4BAC5ACF1C4F0208F1F219C15294AC39CEC2469001DFDC9E199CEBC894E3408E
B0748866B5FB089FDA772F0058E25B64B8B7561CA9004A9D0E7584C015F5A014
E1DCFDFF411C2EAC982D2E52034D3C99533A836DF049A5BE6485EE8AE317F6D3
447EC21A409EF0B84F4154DA4F53470C652B6AD98973636551A40E7760C972FC
12CFAEDE512DDFFEC1387C43E476FE69EA66C2089B12D136F9F43D6183379C95
CD8A971CA4C50BAF4BFDF903752377473A76360B0A64402C751250879B8D25D3
10E7FC00FC7895675AEE437AB793C90E403162FBDDA3F49029DEB3B4573AA794
77242482AA2CBB8F69894F976508E740259A680DC256C714EEE393F44539AEC6
7ABC43031AC2E99DA02ECEA28DCB03E4AF6BB0C3B62EA55D6032927C673FCBA3
956243889B0CA00DDE50EC9A08E0DC8BD3DC02704DEEB2FF7F9B7BAA6BE8DD0A
3DC42E9EA55249FE3DE68F398FFAA7BEC6AA436BCAFBA81A3D2FEE29FB91908D
C29A87AC86D95F7A8C9593436F2B34705E1D27C05583B157901007E1405287CA
EBCD00586F70F01C486BC62002AD5D0D983238ACDF9E857AF36D8E4C4019FD39
613C9ADA0D11457A98A30A63D25F87EC1DD54D353A3DBADA1023FBBD3016AFD7
B886F0D26845E16A0AF6CB0C88EA08845C0F31D2C1297F63F69C13FE9E3CC6FD
DEC0A1698928C3C60E804885A75F30EDA5C47FB18681FEEF9176926490B4755A
DB345E94C83DBFD6D5DD5D950E8421571F1ECB9F4FBF4AD67F7D892F31591623
22684F8186DA33E198582612C8DC53ECE93A601EF7B7FC5F49A1257B053862F7
FF84B87AFCDC29C6314F2E3E36915682D817A65BE6FCA118E6B2806E1D0797D7
B0C98A83977D646C78FBA83B02C102DC79969A7AD58DCDAAF89C5B67327E8541
F9604F5F7264C2F8EE91B74922B1EFF2726B126035C50532F8D31098611A8CC8
3B8FB1EBA352266BD1263D312BCFD8C50B718F60079AA7E5B196658EBB6FEE17
282B3288634B0203946C22486559F7CD12D22CE2489D51EB13CA61FACAEE6CF7
6F1CAC9117D06AC450AF2142AFCDD68997955F77225169096BCE45D765668ECE
D8B2D17B9FC03228F66BFE15DD9DDA20A423E67ED8E2039A2C13D922AC321BD3
E6252E8CA26ED0F097243E40978368704F3E4E8D51B19913CE9C1EBD630D4747
C0F6200C86C10C6A1AAC7D63B8A52B13A326DF5A6106EC211AA206E9A3C506AD
D138048EB0408D96CBDA298918AFCC06FF4915099091B1D3E14D0533C6C6EDBD
2263B162855B38BDBF034CA64B6962880D2C3995F6874E74AE5B6BD8EEE4AD09
54E8440415753976D6C44AC230CC5C6B827CF52BF4B80A42D7FBAD7293007351
93CDC77C4AE49263D106AE8EF609919A6E27AEB8D0CB8E554B09E9E9CB8F67F1
4AFA464A313A717C6A580ADE2EA338A6249B7A6160F99D2A3EF04214393E32CB
1148E08E6D9A7D34CE14850E6D675F2D42272C5D071D1C9AFC899A66745F868F
2D3D0D25D65729620ABAEBDB472F504807648B6DF60B469B8EB0140C34A13808
ABE64DC5B5C34ADDCCE8EEB803F299898DE2A4E9C0DA881830AE0042C6781102
C1C59267C331A3928DDF88AB27105B1A1A74F27983B1DFBE9D5593010268190B
EF22C2ED03DF1AAC3EE4A3C7CACC372155B14E3C6C885BADCCFDE228201018A1
7B2CCB229E5DD406F953435F1FC4CAD65D4E332CC6B173E74EB5570585BA9E1F
F9242088EA3F2341352A88D9A45F67B7E350BD3E1FF75752650DF494B607444A
CCAD62A882F9B6F24042A1E3DB888AA4D0B9868DDABDB81D9933865049314110
E55F799A5EF913007ADF56A2E6781B5E26DF3F6BABF703798E194482279DD0C5
1175A95822C84C2644ED9A2B21AFE6DAC27DC13BE1CE85DE4D9FD32B50A11E6E
9C33282EAD5BA92076BCCA1A216C7EE89320A394DE726DE00B1A1C06E3183CC5
C3EB13C7F72320D92D5DCD6F16F674BC62E387B27FEC5C6299400DD7DD7CCB1C
9AA60F00759DE286549977D32550196A0E1FC82F55DAA036F6013B1A99DFD015
8D1761105CD9D5C1A4491F26E665CE79B0FF10752D15BEB724B19C23E09A21E6
9244711E7C76F42B9898FCE99D76B5046AE80B33C4DE340B1F80102C78AB33C1
33C71F373BB1476E4B240813B6029B04C230E2EFB03ECEDA53C0E18922899CB1
89CE8AF2E4906500B3D0933DB46FB45EEE3D0CB80634E2C9B913F43A3B7369C3
246CEFF65557045B48FF4A022A8F72677FA14E1FDB2DB5F2E73D2E1BCA690F39
97C3040238AF2AA3CAE773FA8969E761A54BCBCA8D69E37A5CF1EEC6F30EAA00
B68EF9D6ED9FA0E20B2FAA5EB14D1C349ADBB1D8D573CAE263C266C94F9EE55D
82E1BC575B6221DAB37727F3689CC5001EEA02B7363CD09B7A3180E7CEB31584
CD2E3CE780F68B6894DE4E6D50497FCA84B544401EAEAC74D4A13191AD4BEB83
10E0A1D80F8F45D6E4D9BFA0A5810383AC8DE2F6A7260BB6F03468241B90CDD0
EE97525C660ABF518452649BBA5912292429A9AF8CF5959142DC8E80804195DD
2318BDE02CCA4421BBAB077C6E3B6E4B058FD4759B92ACE763E72A344574F0BD
CECB66E8D33A37CE72492391A58C66E131A03272D902FE7CFB982D475A1E7595
BEE15381CDE97204BAF6EF84E03C17A795EA460F995F511B83E05A7C686F9CA0
292674A5319BF63A1C8EDB843E67AE5D24F9BA047B40D678CC59CC102E1E772F
D9617AB3F9629DAA0A6B29E6D2FB6BFFDC1BD2AC8ABC2D582353510E87189238
6D548F686A5DAB33F984EA18635231103C3F6F7B05CF4C1E03B7D6B40C584C60
B83BAC28D9656888D7C6900A68331E522EC53D8A2B3E2D103F2ACDF81512BE75
03EE24960FA14AFF0EAD54F68A11606C67A633B3A0A3C2644F3DAB03F074F269
929A80C299BB60832DC89E6CC46F85D4284A45868EE1958BDB16951D8F61F9D4
56701D196714652A4FBE0B945D6919CAACF2C8FF1AC26EE3AB843C97441180D8
B67277690938BDEA470F92BF536E7064A0B6512E6B8AC97ACE6A87A4ADB71D23
3B260F2069F5A655ADE212D79C30513C4202119E2B9AF65D8E3FD6790D4E8845
6F60CFBE2F548B7B7D78F398995088E9FC8D47825E21593649CE519FF0FF72A2
0DACCCEA9000E210A5AC0FBF512C8E77FFAA35966233415DF11489202515A102
CE94103AC304E90799E9F97C72D4DEFA1539A1996B8F327B5B504A1ADCF2573A
847994DC2D50BC6A7A72D70E0E6516D7F66B7F1DE44FD3773E0AA8A76E9EC37F
2B124E8208F10D0228306BE98826E59224858A4CFB62EDCD73A961DAAC736B52
699F5E2BD25D53AD96CB93DE2D5E98EBCABF1AA41EC3149EFBBA98AD036FEE31
386A1951F2A61FEC66A527F6FD95C56A29D808EC0971D11ACE1F79113CB5645B
A35B4EA42A74862454EFBAB1A30EF96D5756B2FED120C61CAD4C7696B6D21E0A
9033D63D0A74604CB8863984DBC8A392A3143346DB113FC9B033FF30B1077A6C
946909325B10C752406E9AEEA590B74A1B64D439C4E9C6A89AB4401066C25319
28900940223D918AD6C906BAF63092A7F2C0106D16E810CB2F4CDB3922BB5DA1
449D68C9A50EF8E318FF91E079A8CBDBA46C5BAD216C80A1C3CB7D3B97133E02
4B38F6125D4279A5704EB95AF49354C359ABBD9D1FB07B564BD399A294FB1708
20AABACE91A7AFC87E755BED9CD4C6EE6CAD5B2D37A1FD9C24C7C8A82A67D832
EE4DE26F58B59701AEEA71CEC8FCACB530F1F9E898D4A75F0992C0BD8072E116
14A64923534142BE7232C8A9FC9F0DF9490E04E6A7F1A349023C5356FEE895A9
58614498C7C2360ECB1B01E557DBAED6A78F016EBAA4C2D102217C04CF8DD708
5C53EA55851D85CE27022E1D5525894EEA5522DCB01234C29EADE65A48349629
CB4F284BEED7B00A620301BD52D02A048791E70B7CA4875C8DEBDA953A8A6F30
7A3F31D75476BB93CE65822ADA678A7279BB24DF4572EA7295C5594A8D43DB6D
2E2422595D702762B87ACE2D0A57B2F30499359BBD519A1F06604B97F61BC513
25F8F625BB215FC3FBA57B7966EFD5E98A1392825C5D79D0EB4EAB1D7BBB1298
0DB8490DA9E7DCD78F9C5273E3FFE6917047676CB1CA87ED52A4CA6CEF57231C
F6A48E8536DA20040F20DBF1F9B41C5B90FA39D5CDAAE6B887A490381B82E32F
1251B1453AA403C3E079AF543B9B08C05CDA2F006EE942A04F89612C043FDB34
FA45D33DB772092C3A2D48246E3DBF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 21 /breve put
dup 33 /exclam put
dup 34 /quotedblright put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E366C4D6E1518CA79D0F8BAC9E
8E96C013C5983D132995F24CBAA56D109CDC788C8290329263E27D61167108BE
F6F7E34D9763B8488961B06606C887EBD661360490D1C27000A57DDBEF704857
0E8F5EF47A6BC9FE32D665F96B1BD1053C2B9B13978232C5BAA292BFB5002ECB
270123C4328F876AF7B3D5608AF8DE787840AA36F761E1D3039E5884ADE4D847
748C9A06E3A59A3A501BABCA7B001FD0E905C3AA4F2C5C322A2EE36FB2990635
BD9E564481BC260120FDEABAD5B6492CF06B198DC662742EB735619779C22D65
AF2E30C0607862ACE3FAECD6767F1F3004976BA3516C0F46748DF6D2537228D4
262931785C56FD63F5F32713B6EC173DE79A0DADBA75077D02979206D6558AC9
3EE38F05514FC2240E7DF391D5B24A168FE1E21335D3CD85C8342D30A798FFA9
B26D912799D11555CED849422395DCEBAA7D01D4CD352FF15B42BE9AE6B0AE63
0F1501B44C42131F2778926C837B57EC105EBF7CD5C69266084ADE5D996FC784
2404AEC20DE77682832C41BB87F744ACAC587C24213162AF50CE2E6C405ACF46
CD728FC4A480218EBDF7B90241CFD5332BEC52B478206ED9F8FAF6B0A70F4687
7976C1281007F5F2500114965A4237B3F37311BED3639D1CF8BEB7235C149C3F
0E64F9C8F22D6D684F7DDB26D77984A9B49AEE52F4027972574FDEDCF5235CFA
E0AF7AA82423A111C3A074EA06D4C8C61AEF51A2B9EEBAEBBA3DD62090B95A15
F778D7DBD152E7B607F5F4CE212D6DE8EEBC5C5DEB73DE2B29971137259BA0D0
151DCB3F28A5715F3F3498ECCDAE022006A7C3B4079564EC5632E048725DC0D9
07B9380B7080DC7C4B1328C68A904459941A8D17FA5DD6C4777B520AFEE57642
7F6B13FF54C6D266EE14ED87790762CC7D2F2B08DD0FC63194C7B9CA640CA5A2
8D26B72327026B8A576AEBD7A54C505D074D2065023457C4ACC9B93C575C363F
AC48A27F4D61952D46485B3DF343D4AB3AFC0D7ABDEF19C9B26604335C908DF2
CFA784EB1F4AABA1DAE61A400BB104D5D34C2D4221AA35771D9306677F94DC88
46F81ADA2BEADA7EAA453D4659B5098A68987377D430A89595FCA3116F4E5C6A
4075044AAA0CEE3E362A590C353518A1041AFF25E4F0660D6E5AC0E35DD65779
01BE677E2917BFFFCBF29FF6A1AD2FCC31D6B57CF98AD4585187CDFC445E4E9E
24D4E4B9F24A12DB2AB7BA85DA2EC81B1F6D129E9A56BD2A7AE96A6B9A3DDE30
F01CD0131156ED027FE76128417A2112870505FC6C04F57CBD35E30731E416CA
D37E388BE5EBBDFD2E68B4ECB09CCA0B08AB28B30395D25D517C8075B64387E1
92FDF6640F41DB7A70799FDB98850AC561AE28567EC9E2DCD6620BC96F8858F1
54E100ACF541E61906F164F4774ECC50AB47A61070655EC00B09F542F3807DD5
5213B264CCAA933FB344B73CBE4DFD99A6FF7677429ED30A4EF558994E5CEA0D
1AA4C75C8CAE2D48EDC7D872A6A441A66C0892F6835375ED69A243E9410B50E7
35B9AB8B51E06213C92D16DD5CC18731A5329ABB909498E286C222224F450980
06AA8CCA9FB998EBC15293A3B1609E36B2EE5437598F3A7B560133FA11F975A7
FE4FBF26E26BB9FBAE90A07EE51B54A803BFA393CE884EE8B6916FD15F772769
16F461D6CA73CA42E79FB5AD7BFCE25CCC15E7299E45B520F6BB1863FF210749
3E9B61F669F71D64EC0BA2FD9CF957CD62BD3DB0A4DE2ED16FF36398FC09320D
9A39ADCAEAF54E0EEF7B8530BE1CD999933EAE1544CB4720ABEA27C25B0D5C76
B30E873B5943A22DAC50AAD7A66CD482238B1DCB10974AD59D29FEC076FCE8D5
20434357BB290F29B0D4B6667345859D969416CB1D285089D44587CC4C4860A4
22286AF8CA27DB89371D272CAFC81A1D5A2F37F0BAF8FAAAE9CCDDE453FC5D70
E76675A3B16697770B6631EAC83791EE95B809766EA12DF8B08646001B8F0FBA
0E460B7942FE105DA07193AB12D8BDF0DA7631EEB17504E9433BE7F0D6F39E3E
54A6FAA2EC55560B20E9002730A6F64F8939A5596CFD1DD24E4E17672788C22D
C08B67660DFD9F9D4126DB2B7090124DB16FFA04DA11EBD318D88905277C546C
25EC24DB2B93F678463F9EE17707CA0A8FCE81B59CE22AD91548AD4DFE75F0F2
4B4CB699A3A4A60B3F74DBED0575085B6571CF91D3F1BA4DF28E439D40A60C9F
7B526E38060F84CB7FDDB6FEEEE45660420AECE00CD14507746E0263885D7C46
8B322CC43AA316CD7E3DA4E943F07EF9B05C2662D4D5FF46F1033C7F52D0804E
A986CA4F1AB7F86A273C14C5FF6745D88813661EBC74B9C3581B4D3FC70DB17D
FCCF8D5A9CEE73C44B1FD6FB981C4104AFE1768D292D0576512DD731DDA2D1A3
DE327988ED0606BF663B24D7AE8BD3D29D08CB66F3556B327A2A876F40330BD5
009CB2E1FDFBAD3A02C13DD9DEC7CC0FD9A4D3FDE0DEE36F0FEBB424E6D43D27
1924C6E63263B3092D2AA462645D5234048204C7A8DC681C2DDD6ECD05F2D829
9D89BB23527C0C22F1737E7D7EDECF8D3BFEABB39D188E9D299591DFFF41797E
DC00939CB0FB1B856E9243A84BAC45A63E6BAF3461108E34AF41E88D292E5769
01933428061EF6820C684D712773F75D5216472DBA847454CB5973C37EBA8D36
4F70E7CF5EEE126AFA4DF1518B119923F055545D67716C47A6840EDAF323750D
6037D4740D702367503C063611F68415E38FFF0F89690A581ADE7445982F2307
C00A9F84E390DC79A1F8D798CD9794B7FCCE19A17E72E4272EF588D20BC0EF84
FDB4889046DD958351F11AEEC5C46428F819E7532B926F4A1B2DC278EEFC438E
45D1DE048AE027D0D55B14F4CE53C319AF29E1AD2929B9F9BF320B1867E7491B
F1CC6054107E4DD630407F1175B45E484F05AEBB34AC0D24DB89DF4FCF53C956
BF5661DDDB408873AA4AD6BE95218549236B1D603B5D177ADD72F5DFE9C41CD0
CABEFED987043786F4128C6E19D1E603B4C2CCADA867D0C642BC63A8A30EC142
0624E75595E939284500C34A495BF118D1AB90611E3EBC006CFACB8530D0C9C3
376118D4A54395C04CB2B67978904DB9B88113298ABB08348E2775E907E9F159
2536D1CDA4276E56C4DE79A42C67D5C1E7A1DC0D7CD947C5E230CED0E518051B
BEC4351F619C1FF1DCD2F6AD11EAFD4B9DAC7CA170396D85F642AB761912F973
8F069C292DA0462D452AE3F4E450EDC9151D0F6B3BED3D51180D1A098BCCDE59
6BB202602083E8CB078757C1A7C88B18042712B0ECD5E43E28E912F7B2C425BE
1DF1C6EF7AC5199E854F77367E6177745929827FFB522E7C44D3B1BBC1157C7A
B601F84047B8FEE737FB59EFECA7BB12FF51C4B4F1E6D38EC74BC580E6FB984C
9444F9A195BA7082035520DDDBF8FBCB2BB87797D5B46C6A668FA3FA5F84CFB3
8F5148CA2C20FD4707128B31713D0941112E60BB729200A6867E0D4CC6A89B74
8828D0AE196DCBC12EAE871115623C22DF80B268AE9EB92391F8E6E8FE91047A
B1C89FB2092F7B95BC63756739B9F9F5C391D3CEB5DB5E4CF4CB2AE44E477A86
4C58DE6B43F5F35791A7B7DA5C981E83F62C412B5A721822029D557019B5F7FE
1A3C4CD33AF31AB71EEF835D6D787B37755C78892A40EF205E85C4FB37850760
971FED5F46046A61B96EEA3B4DA4E55031A9CADA8CB64EFA82A4E0F569D97962
046AB43CECB7B3E200465B7731381D4692A0189D982F34922B71D4A001363D37
53ADB48035E58373B5DF66C09509F2039A937D2613E16A096E174701C362A476
8DE5FB1ABEB588DA13306A2311D658834AC21C02DAEE4B928D68604A84169712
8C2078F7C710943D42FB9FBF45C09AA202BC6B3C620CD32A4C51EA0FE00FE355
85DD57039A1F49F57CD37F6DE299AD9EF635867290A9AF747162C598862D2A1A
E0D4DDBDB11DBCED2FFB543230B03F9E5617567CC7B9A2C0EDDFA12FFDF82665
559F0665D72753B97CE09CD13C228E9D99AF1714D0DBAD2C5E503D82F02A8DCB
F4CFC1A329A046F9C8E1F5CABA790E4F21E476AB155606C4D4813E3857B2B81D
354288DC6DEDB54772A839607EB8C4C94CD04A1F6ABAB9AF8C72C891EC6A497E
E6E032F453ECD272CB54ADBA48C647660C15651FE08A4B8348F843CB847B0687
28885B46C8FDB5BB47B755385BB774290C163495BA956EB69C21DA4F14BFEE4B
EB6E023E49E92EBA364149313983C3536EDA7962ECF0F31D42DA0B8270ECBCB5
7E6BEF3592B5245633FB7A1EEF7F7A1A1272AA8104B61DE6D4C3028CB9D2D10B
007CE9F3FE4754B1D7AC9E89DBC51C484F9391064C0B812DAD3D3EF2A5E4061D
39EDBEB738668221C3F4355F3BF66D08B4A727DE23955F5814660D43DDA898DD
B2E6A52D2FE30AFFD951919B1894BF1EB58159341AB1A990A89C1A4D17490F60
4EBE5639B42E0C9830467295C495E6FE85A6EECB2696F55AD5BB62FCB9313481
2A74B224DB7754BAE2E4012B33DC4E63FED260B15331E690A8D6D57774F8A423
27B585A7284DAF30A7ED339BC4E00B815D992363855E20AAE65AABCB6CE80D71
CA533E8DFB5615A032EDE7A32CE41C5ED1493B6F15BA00F240D4E6D85BB277BB
D5A0EA5907A2BF0BC6FFB316D40C237663DEBC2DB59742B2E909D1328E869D32
A2CD7AE14C9A3462EDFB39518D4EE04D4AF3780790797B6DCF833BBCF760EEF8
939B047FBE0B229FB274657FF8CAC233C78BA124183304F1CD8DA0572377BB85
E3800EF775EB1550E3C625C01B423C471AC4B739F75C3EE3CC29F99A538F3233
D244E9DEF154D7EB91BA7A09B554C231F779EE7FC1899DF583AA6CC3FF54AEFB
BDDABC3ABE70074F8577C244408987E7619826DD95116600396D57AC4E30E65B
D182A4621CF550FCCB9079DC664FE139C5C7E563640CB040159C083412AB6B78
7105A39F5EADF2740DA4B7B1CF0F646FE2C3F0629A6779D100D0EB0986270658
3C9986C8380FC72D4735C9C5E64C471AA4647356C7A57FCC938845C602DAE83B
A7734B1F0A031C1CE9CBF29889A72959925C97D7E0B93F49AE5B6E95FF423AF2
6B06DAEA7EB93B6759F48F42DC0959E441821A40B14CEE49EED3783F6C31A879
ACAA0A86D06E3DA89291C54D1BF85C7FA0C078B0A49DD96D39DE2941B22278BA
1414838061D904EF9A5F696F0FCF535A1D5B0F4C5D8175FE287305AF639B28C2
0702166C2150C14E11ADADEBA5C02137ACBD06500BF3BEAF223E9D6C2B64FC95
DD27716B66CF3B3A34B5D94CFB479BB80BA3E68AD01380AEE86F6DD8498BD629
AAB9B0DEA211B84FEC4BCD3EC0027001AE29E9E71E1396F304379AAA09476C6F
6F0D18D8FC12E8DF648A23A52AC38457D98583B4F138E871AE23A246050F62F8
EE7EC9CF821BCE7134962BDEF7D03102E94E3929C003B1DF1FE5CE23B592FA99
1B6864147051B32B899F57D460949F279DB9EFED025D90820B8EE9AFB71275DD
B6FDB0BEF449113FB8982442B3B06CFF2D510746B01E3F2B7F9ECC0AE79806E7
A1592E3457BC220221A45C2AE618E284C8E66A2284EA18A66B1DAA3876618016
046ABC7384142F918D6AC4B13C3666C00E2CC7D73F70B266F5AE7CFB7DE8E28A
2BC3CDDF13DB21E5A1B5E0165BA2A6B83456810B6BD57D1F828BC3893010AED5
2CA96A284DC4524DB13294BF707472D318CFF6A2399D97030EE3E15C6A48612F
A7CA3B11B4B417CF75ECCB3D793CDD1CA35EF7146DE8CC462FEDD0FEB21D1CDA
E40B909472F291F187349BF72729E6C428C5DEFFA5D7DC605448820202B4B62F
3877B95651E675E8026E67E10F4972A2B35514B3C4B93C86D6C6A77DFB06824B
F57F46E8FC7FB03BD2FE58A757AFD7D8C8D019523B52672F78EF1B047D6BA6D5
11DDF9CF0981F4428CDE9F919236070F8DEAEAA43D0189A64FEE08F2B8F96ED0
2B87B2B4EA8B1DE5DB7B1303FEDAFF7CD7AECE8C65E53533BE577C673DFF35B2
8230A6EFF669A81B8B8CDB41CA92C5B525F9B205E090E009CACD6539D23D5FB3
102E8508B5006AFB0C1DA3E26C43E16ED075008D328D8606FB48C367B49616C9
0070EF99E6F31E0D1FD7CEE445EBA226983FB91BC347C12634BF429424528C59
2E0BFC5C48AD871B5EC31CCCE3DBB276A3CB0BF1200B9E51DC6BC72827F55EA4
50AC822680FD9D5224D59D3A766D59868BCC4BE663FBD3BFF6F978269E42143F
F2AA64C176AF5FFDC95552CAE8B073FE89C7A90479F3BCEA53AA6B52110A3B90
5667D98F1F461D45DEB20DB445A17DF3456986F21148AAE21016105DAFD86FF6
C4410904519B2705F5B72C6EA7349AFFDED97DC0E0F9E663CEB0ADADAF44B2A9
151E8636AE4241F733F7B039A8563A926EA1695C53B9C59BAAB51F1ECA44809E
CA0FF8A1DB55101FE4BFF33D1BC1A767644313F599649642245FC88FE80E59B0
72D737D27557D07835F0E39571B29703DCAE68EB8CF8C29E4595A68FB981D632
193CCCA71E19584B3DF981DB21C7011E0F0665B859ECB09DFF6EB3C826379416
2167E37642A8078B91294B1861AAC36A01ED2D0F0BAEE04FA3C2046750C2573A
10096581C209D01C7DD15173DEDE31EC49976D83A178C495C8407D4794C6F077
4B9C63E399A29435607FA70B3B938A78F86AD9D498A090944241A3BB35B8D1B0
A6988BE8A1D9753E6631E68207097BBB12D8319C136EC6126E9F0EA9306A5C8A
D6E422623FFEB96D1C12B83A557689464B53CA70106FF2341D04BDFA0D10F0BF
0E74846718FCD5D2B7C1A61B6ECCC510B65D6E9933DF34B44730D6C664F8A0FF
33463AFBD782D04F77A106EFDBF95B19C0CBF7985D55E8F03BF11FFAAF5E498F
6ECA1CCF3D9DED66A91E052F7842EC50898BA6134747DF969295B97BC56CA228
CCFB301759FC24905F8C579607FF468C7FAAB2AF65FA3AA14CD15B75AB13D56B
27C110DB0C767E08876637BD5092828F01DB93B906DB99AABC031680B858EEBB
0D12E6DD9AED408891E43BA7362768E4ED9E331C564BBD6BDCE0808EF68D2127
423A35034F6F502345D2976296507261F474CF66D8AAE9EBE077FDD265EDD52C
2038F29822D9F2FCD936A74A2B549CE3617E5CF77913089A177AC0000E7DD9A2
84D32BED4E659C85AA469EB9A22AA1702A81106CCB049D7FEBB4031C848AFC73
5F85703EDBA5D3F8A1FCDB96622F3C9F467876411FD63437C9AF6259092AF59D
DABB84CED851933CD8C3C8A9350B97CD7B5D569BA716A9AA5740231BE1798E6D
C43C26F9DD9FFB518160684E3EB1A4E32673CF024B63645AEAA341074B01A9F8
1BE037C0CC897C86814371B2103697D1CEEABCD1083CBDFF65297AEF5E577D08
FFDB0CBBDEC8B92279C8C7873F96EAF881848164D65E9AA3ECC917EF83E8876F
8480F34ABE7E88FCDF2781444C09D46DDCA603A65C707100E1FE91F5F999541D
7C2E40C49E02F67C482A0F1F378971042655873D784900DB1481187B87197F18
8F5A02BDA3A401357991C7CD37A14B9E2D1BCC17F527467FBEEE4FD5485A5E50
70536C7A583259BA6BEE18F280AB897DC9287BD49A23C6785E98826072A2FED7
63A8E5CECE06580E3F93569915C618BAA341ECCDB7D070963CB9B288B9D09910
2C2486324929F6B9C138D63A905C81D71931289A047A394D62F9A7D1CE88945E
E50C2BF80F3E4B438A7CFE62DAA7DFDA0D6F7CF89A8578405A2ACC5A63B663C6
CCBCA2B496FB897F12C21AB15AA5F39BE1F5F6C4779DAE2CDAA04821A605D0B8
7D1DB6EDD9BB79574CF23E36E7F8322577C613632875E69B96562619F81E8F25
EA7B65C84083A1A10BFCD3AA6598EDD87184E9764E2242EC00B433BCADCA7428
F719E61841F47C69E405DCE100227C26B9D793EFA0F46335F7A3F76695BC9483
D69095990A22CFBC6780EDD1DF481FA9796658C91FEA60E75B720EC928795BCF
1EE02D93FE7A114B6FECC843FA0044B354CC2F105732710CAA79B6ADDBE074D2
4E1B21E4EC4D863287DCBF0C10DE697BEC07B64EB92C5452D66E69A501B8BAFE
93620EC9A72238D9950CAE32A776288D3969FA79D4859A2E2396B5E0D865DFED
F785634DA362BCB0B21B38580C502276E1E43D786890A85D384EDAD0586AA0BB
EE98D25D3A6A9FC55C9A70017D99D6C6E7C231F0535B9F2B19B0E5767BAE4E8A
FDD93ECBEEE6073A26BC5E00B626D71371FAFC82D1B9628FC20CB98B7BC58F2B
ADF17CA710A77F42121B456F6435EF8275F3F9645F1FC5A7BFD07008E84BD41F
937CBB1F19B372D645601F9DF5D4F229FC5C70A23704B93C71A90B85029B4740
F7BEA983B8464FF6D2995CA0B29E3E929A2891EE39BBFA6644F153AD0E7D6ADC
60F8C592C96F78C243A1967C0F4B9A170C583558AEBCDB703F4E3631394F04B5
1DA853263538F3AF06D2AF1ECAB672914B41D8765B5F751D2328FB8DCCF4530B
5B64D812F17EB5C6B4BC0BB5730B9C4B7188AC32556F230E5726AE5E0967D737
71A7CDBDFF36AD7F771B5913F17C2B64783026C314C37A7D67CC660D379287B8
4C59C8FCA09422E99964E9B3BEB9EAA53184087CDFDA7B91154F75F90E9CE89D
2941EA5C401A6119ACDA602B4B7AE5903953D3367E37BF4856C9C64D3802E7A3
BD9CAE89D669084FF09B96391F86AC29AFAB017D9A314FF546C7AE04D992F993
3CCC383E47CDFF343C15329F9F91FC179A27D6B850D81F45096F519896E29DB3
CC4F239C5BBD5E57ABE699CDF7748138AF0904EDEDBBA2318EA09E1E6B6E1573
2D7EB23D732C0597FA0E97E37E948E83BE371F73550E66ED3E5C698AC8D4D436
87A380C3DC6D04C3A0A7CED6160B1B2878FF72D41471721A356391B232E71573
5087B2B40A4C81B88F9359328DF90B12D64D608D50A0A7DC05913C63036D89E5
5B884EE563D8B95142703D7AFE12A71CD80497AAEC7273D5AA2DDF3F79A626DD
6C2421FD0F14503A2229A8C6506C78E232F86DC3FAED3C3F4912F6A2549F294D
287F4868C2855B4F26DC9D1654B81BBEEB01F7C05182972FF468FF2A96D3DB22
BD0C304ECDAE468B35B7D578E95B8C6FACBA158AD37ED8B972246F97DB3CAAB3
54D3396646BB543811B51D4C5E507EEB07F9853EAD904EB367C6C7ED4D7F0F6D
B2DE24A3C6DEE039BB86F2CA7B6417F7AC63E54339E47D3A117314B3BE3B25B2
252BEFBB5AFBFD8A516CCA838E1E8BBDA140666AD463E29959D2B850D45A7B35
004BF233B37649D98FA58401E44F6AC83F32A56370FBD6F74803D3743E6083A9
07B33BE53E6B912D65A44218F6A21F7070F87DD0534E98AA7408019131865EC4
022F5309D9E72290C5DB932E4AB471D4914E699842A047E2458868671AA6AF02
9307D0B73376D2D5F2D14A4300243923B8E7901D26CCC6D14E95A775572B6A17
B2153CD3F5873CCFE568351C9C75E5B9F0288D40D711EB4B0C6ECA9D66464BFD
002257AD91ABE285D102A33D47E60AB8F2B78C4F6595E9B571A41BE632A627BE
75889D3CDCD2E1DE75BDFE16C0589C79B0A089E5DB30876FE247B20372798E19
19D07FF1FB4B4B236F0C6FEF07FF52F2A06A73DE0E3DE0994C03EE2CB5DBE8E2
83E033248F5FF7A63E5F6214CF3AF0EB1C4DA5D428052DBC6454C338F6F6FAE3
5BD0CED24C1FE41752845B90A2AC49FB1D42BE1C47B83065319252D8C4604CBB
92A0407B6A42FBE00C0A25670DACDCE2F4AA56AD20A8E13C00A96AD8BE2EE1C3
79142BDBF2698C2F3C40CF605C6B49DD9ECF5A123DEFD9BF37749F3ED99E29DA
BAF6025ED91DBFA63D7EC6EF218C9D5440EF9C6495F1EF43F66D75083E2BC628
5C9659930DBD1D78CA776B34412BFE841CBD31E40A45789B936657935ABE59B2
62930BD273646C0D74A36C0D5A75D74BCBBF95405BB6DCE9200EDB3A78C76B67
451BD0A49B72BEC852F8B37A9902409C49A79906015B109DFEF013301D37FAE5
42E269A037C973D29C6FCF913036149C475ADB6AA67F440BE0FDFAD6113D96D5
8FCCEE715807472F6E93149F0E1D963A0409D9C2A1EE8AFBB779434902073457
7AC102DB023210AC8552807E902E9BEDE64DE0986E1AA3AD924872BEE05ABA3E
FAEDB9B122728369BCB4DAA4B3A4A83D120EF878220355847C3477544A3E0E1D
10E1662F96E882D10357CA8AD46B9EFFD7B720C6B29BBB900BA270E60062A9FB
DFE8B2084A9AA69675B367651CDA85B73E687AEFEBBD2424491B26D6D64AE7B9
04AA7C1AE023043B12CA8387CF0432155F6371BFAB7A581CB5A667B8EF2A0BEA
F200E6B2603BD309AD1853EB4D72B2298EAE763CEE5B991130594CC60C581392
4C51AB989546EEBBE76696D1CCF0B49A996ABC38DF97534A9E57C7850ADAE5FE
38E00F773248C3737497A75E8A58E91085231AA78F1C5BABD4AE1E8CA29D3FB1
D1849718F22A2C5F92F461DBAA19968ECC5D1D89C05ABC3EA218E6907AEEA9E8
DAE2D884DD8C66AB1395587C315ED99B1651EE14AA3EC48875D74A25869C9D13
72BE3D7DE111D6C4E25BC6931B708FD75200F846A445D2D95AEAE48F89C45D05
516A42CE8C12D22B4711F889A069DFF915073F2453A543FF28F9184F1C576719
7AB0E664052122E8B49D082794023838D010732D3DF34EA378ABAACD648396A8
A8B6D9ABF8219BED5B5AAB7F1CCB46AFBAF1D9FB45E665260A5163B0CFC4BB2E
CCD8951903586B9881E036EDD5D6A8EE7FFA9C2855EC0C70253E64C65E6B3344
4A668307C359AAE0DA69B74D0D50686E38186AFD64018696075E05CD136A0297
07E6A02CEBB013C901AA9F0F48D357C91BC1F3A201C469FC5281B5C1846EDAD8
9D5E3D4635C838C656B7DB1B7A492EDB2B13A53735594A54E13DE250C35CAAB8
347D861FF7AFD76E6B62A4C1437EDD6B889E6306EFD165C4D89CA17064E483AD
E75B67CC4D5554949C9CEE626CC4CB7836E457897ABF0AD92D5EC26FCA8F4C73
B27DF932F95DBA94D4CFACDC7CCFA10AEB6F0D8160B94D29A3B13F723C061884
912ACC07A5918DF2224ACD72A3FE68A46332EC3FD487027F3311D4B920C8CD38
C4DB8ACE4721635512ADB43A395687817BE3010F7E94B60AAF320910F8089B89
267265C3875CD99C55AE49F071EA78F9B617507C2A90921846F0CC89C8B23CE3
B387E1C0FDA6467C6A9AFB358B74EEB3B2E59E64DD809F1226373086EEF0C75D
79A6A633BD59E161F3B615A4789F2B25C79C05C8BEDE25F25F51660A61780E76
DC9395482F99F44266B4EA3F86EBA7D808C585D6C1C0B044A031DDA14B20FB0F
3D8C5D253442F15214DF05D335E2BF83D292FC8F348F0385F064C48460A7EB03
CFC6252668419AD33B342173F66937A0F7E690E3C97D0843B3486C3DAEEE5794
09C6EEB367CFFF037502B925F370CAD5324B6978E1B556BB4DB4EE2DE5E4A50C
D9AC41452DF428D6BF621406106CE05965A08F6B103D02922F902DA169D5932E
ACCDAAE8C0D882573014A4EA709C0A7E1FD2B17BE9F7A4987CA32C16A5A63335
01DD949C745B68F4773F56315AA0E286AC936033B802295B62D2D865B5AA0434
F4ADFF5C444CD345B1D15E94DB5437310E27CCBD13677346E674ABE60F2AF59A
4E30FF105785022C42B9A254B96F8662D986E5E7713C6401D7983A5C7C230BEF
FDA3DD02433CBEF5C410B32A7C1DBDBA85111EA9F71509A704C445E8751613CA
A48D2F7004BCDFE43CAFF60F6426E9E2E1F18AF140C89B0435DAD0186B9EEBB9
55DBFBF63C19B474AE2A1395E74B92DCDB6E7234F91C7290210A92DCD2A865A6
4CDD307B6920AEE093E0589F0E3A1E9AD467D2788DA46899495D81E4B5B75185
12D8CF9A974F046B4B78559FE2A6A6595B0241956F41F7D06144C8A22DF3936A
1D03481C7B1669C859FBE1192780C9FF129591009783A2AEE2A657EDF2155FC4
DF503F9140E55E11E3BAA39BCCCD152EFDCEE8BF91CE10A7D1DC0074F138A7D8
35AADF2F0FFDBAA22FAD85CA0A6F61F73666F84F88D4593B75F4CCBE8C3CFF97
E5A065DBDB0D49F25014DC78B405DC7F4E9291CED48FDF31A01734D714550F77
6867EF94A7529013FC29F44AA4B006E03E7B68D49CDF6076B9300DF3CAF1DEF0
78ADB201D804D637F902B5FDF8951E74D525248BF6E6DFE4B1640F3F0C21F282
7630D6383B61AE9DB27F04166B6FBD0464F55A7D5101A19E54F464D66E074890
A58475B66CF59FA8C8AFE7372F1D7ABDB842A83A166BEC57C1E5724DF8F9B7BB
B287C3AE4A3EF1BE4A6E460EE55514502C45F0572C3B0D6A98BA3FB2EA1119F2
77E00CEC9E2AC0C3D0B498CFA8E8DB1CF28990A317A283735C46E57BC3C8D664
E487A83DAD660BA981FABAA5C99467499A21894DD0F93D6BE4A1ABEAFB4FF87F
44D42464076E47D472DA3F89AB232896AAE3FFCC47E80C1B4526118A623369F1
6719AA8F8C757293BBA8445163E92FB951755DA2A53F71E7D4AED22E1F393256
C96E2A514AF40E22FD587EDB67A93F567DDE79650BC227F0680971AF864ED75A
9F98A92D3DE0FEAC8320718C32522AC3F36488F0D3CA147D05C93813FCA98562
5DBF3C1CD168FBEF29BF5BAB4871FF54685872D573CB0FE4D839F9B10A23FC7F
5FE1A1E1768EBDDA6B25CBCF0A8AD085E58E9D1F286E1D269ADFC1799EE64F58
73F3B3D02097C0FC5CD01E1B50ACF5C11F1562AEE5C07060440E6428EABF4CF0
15A121483634C8EB7A1DC6C627FD09904E7C48E03BEA95BD3307E74B41D5FCF3
280666DC1112BB64705E279182DDD0F11AAAC9926A1AB215675E1EF4F4652896
7F7C1E0FAAEBECCE9A93A2348FD74A3F1346E04A62B2492C3A6375BAB010D526
FE80ACFBEB01020195237B63DBC25633BA69C9AB6EB14E9380AB838D2ECF9EF2
B8871D66F3BF13C06BDA95C78256DD1BE65EBB0A61074E3630A4E789AD2D4B11
67FD6E96B5244499D9A65394789CFF7610E76F0F657C3D43D62024EF9B116FAF
D936F01BD5499BBC0609B4F36A60B910070F275827208630957890DB1682EAEA
8FA0490221683F393F5A7DDA07B47749F6EDE26C18FEE6DCE4C367FF0C5A1C2F
2F3A163E9B7DD0ACE6FD040DBE00E457D2A595A0C175DE34B9C47A2A1A0DB7F0
E16AA73CD70EB627BE57D1AFAFAD97755F24C273BDFF56E253A94941152C9E09
51C5725FA42A70484773F75CB81A089D1F9EDBB3EB32707AED8F1E23492B124F
EC03B052BDA813A206A7F0927680C329258FAFFBE18B86F143D305B1D401BED9
53C08071511BA56B549C6BFDC668C1256FDA3C28A8B657353593D4CFE2B36BA3
5DB6675F732B118CC3F674D4AF8D957595C51F491208F8BE4DD5B32DC77BFD44
37B77B2F7C6EB25838AA969E63B3B78C6C86C7B13A67B8595532E72A3E0E1118
9787F01F60E6933AA9DD1D472D6BC2E2C9E1BC0A9D893479C4BA20F65AAE26C2
B54B57D46321261A373325395C6119CBCB44ED7802A7A2C4F44BEB83AAFFC8FC
472B40AC0CBD17B24758E82229E7A7DC3391DCDBA6F63CD4A7F65540B045C9D2
4538B39259614D24A266CDCDB07F0F50E444A991B7D8ADBA46C3BBC35A9632F4
0E2DC3E4D10CAB81CD99DBCAA2A1E36800C2DB0E4AEA13A0663C2834479434AB
5C1CAF906F038314730985BCE497F28946E95899133B7392CDC40FC809A789CA
EB7561AC31202802540FE698282524F60A2FD90BB323B9B75B2DCAC13A1DD94B
3333360B84DE60AECA0A6C56E746E45D78296A422E147750B42C5E60DE6B9262
A007D728FD6D7F232450341D42BDFC51A4C7FC8F78E2BA28FDAA5FF44625B1C6
8E4DD60B5255D3F01180833D75FDF6658D210F9B9E497BF7323C9801B3C120D0
43400CBF343B5B4B9CF0503A4A75B2DC24B9960ADA3257CB26BC1E04C6A14A9A
0311ED494FEFAAAC6AB075559852C2214E7435BDA3D7D67E6DBBCDEF9C098108
6171FD443E0EF71E86D225726EDBCAD7755FB99EE4E50334705064C8FBA4B327
B6E2FBD75EDCFF29BCF063F64CA0656B6CCA31EC289252A99AC3C514F93EB13C
54CAC331AF27878779B6C8B8A241F59EA5F44B7A1D6C2E1B72C3AB0CA2872FA1
A072F6435038C3D0B8534C9162BB47663A49804CE689E5EA957F98B194BA8F92
C5E735F0454777E3642E452D1FB02385AC3ED8B8F335E8A322F5AE9A513AEF76
9D78C61740FEAF1057F202F25D8C403F47EC4FF2DECBC407A4A1C1514CF2B082
1092F8AA67213FB3673AD47E08D1DB84EE0F00999CDC8179F3BA407D7807E016
1ABBD7B5481B857576A573E7B58B461C56286F8AFEA9ACC608A677F478C4F052
8E6977AF9C424A768D6026227D2F0F69F70616A2A2E948E6CC1CEF6510AC6016
CA1867C7D7379D62D28DECE4C2C6A5DE6D8A9C5AA8D72D4A340B8AFBF41423EC
6D4E53BF0700EA3CA8C5E831B7532E87757B9CBF2FFD0FCF02F51E1060E885FE
701A0189B16D3AB9417756CAFD630025230C1913EA89FC4BE3659B8BF2554CDD
22D961302F8978891E1148769A7BCEC9F9DF85483D800D98691ED368F3425CA6
94B2CD72E0821F6F3E6E08B3E923ACF1AC9BB4B62A9F64B8CB2173E724B5D746
00E2F98F670674643A695CCA57B01D67111C7D58FAF4E7D689D653DE08F3B0EB
2671261216D37739D4C6FEB626361E616581AD98592595B88BA9BD52B4B8259C
DF75759154F7DF8870FBF95CE501BA309CEA4D6C47F8C4DCD3F04C947B374C90
613BAA67C9F333584B499352F24AF6CA714E2257B8E8931209581210D5014A06
5DE0ABBA5BCD99AC3313370612EBD8B7B2160A1CD6D28A75833FB4DC1E544ACC
D8148FE9F7B008EF83D2DF912097B13729D4A4450EDF19418F2FC6A803CD1DE2
AA0C857DFC0DD3B9F45EB22D989A4F16D63C9EE8EF8ADBF60B27F0D1D1665542
D4E621EFC4527D1F012A3DFAB6B8A8E5E9722BB21584740B5FD8C72E3AEC1748
282A69C140F708D60C29AB33C5786477A39B38956A590AB77589B35804C9ED8E
F80F7102B2DE87E1D50EAF1C110692171D6BB23360EDFE18A8C8AD11451649C6
9878AABECEBB60698B037305F4E5F1F73941CB2988177C2748BEFF54603269EB
1E2B295F653E5FCACDABE1D8D149B15FCC81B3A6786EA6D821388E30941F0901
952CE1548692D5DCD0D3030488BEF2F9C768485B3E4CAA0926BE2EE0D9866B71
3E123048952B20E372BDBB89463B43F3B03460DDB952FCE5FB461CE30063C894
874BA03C30EB3F60E0CFD114FEFE4DD2955CC3EB31EFD0135AB6A6E2BD5DAA55
E8B68178A5B51AB7382CAC3F2C85A86EEB9FF25918A9CF050E8AA95B11F2A72E
516AC181145B64980F98B2F43CBD3633A55E2CE98C9DB2DB60F338C49F1DF703
48DAEF59FF78C7EA9EFF4CD0C737830937920E67EFF945A103D5D0CAD3F40821
D18772CDE5A6BC04791BCE7CEAFF437B57019E108628D1375BA4CBB0E923F58F
39A0810A2241FCBAF864B305665F2962E1DD051D79F2F274C2B4DB1BE6E1B80B
64A939C0D12472D3AEA65E1387F13556AB2A709FD74589B6DED9A49379686026
7B0CFF64836D904508CD49F4BE8C607B71D488C2F7CD52842FF508669C3FA1BA
C8E3DC1A1BA4C7F8C5070C0F6C85DF2E5F833CB0A2FD6DFA2E7EFA0D0F3FB39E
C04513713DEFA6EB1B81A0F0D225EC78CC7F0F8019CD683B30E021DE994145E4
9C1A3BB14D3BC61B5A5E889A924A080E20A4D418BFB52142BDA4AAB0F9A5B5AC
9148A2337ABE11C20B96909D78E39EDBB8ACEBED1E5CF953CE6126D9EDF6D4AD
AD0EFEC53475975EC57DC18DDA428416B88472BEB05A22770BCB0E8552050D8F
DE2317B477037D80A0270E5A28A7A2A02AAA2260E978D8252E05FF97F4F9B4EB
E45C0370AF19BCF35E47FD7ECFB6DE930ED8E122F1D610544AE8CF7775FA460C
FBB34DFA31B57DAFFE8A1651ED599D5C5852AB1B436DDEBE000EE868C7465E03
E4A04FD20F7E278480A45D09722761EA9DA4821CD4D69EE93F73DB84BEADC58F
52E27171378608E58D19133B54CF399588D420CAC1B41571CC5EBDAEFF1EC0B3
2808B5706B61FF0E672BB52A8F5A0002CFFB8FB30B41442A7954364EEF322BF1
A8063C9E00B4E9243B617ED19E395503685DACCAD853B6679D1E1EF0E973E7F2
538B5E19521E48B9D55C0CC8E49E7222B3D33A9212A918EF41E5C59BE7F477EA
5331BF4DBE33ED225D53D7FC301B9B20242EB72D814E72623BA525CB1C59EAE0
054D8824F97821123111EBDC8C2D387D01E485A65E6B525441069F3F841ABCC5
900D175E76E797E615AF3D6C444AA22D75B7F68F3F6216D99EC0F69A889A22D5
4CF0B7926DDB03547492DF856D625373CBE3A2A6175A261BF047AA8EB2860336
5EC96FB48FC00AD779F6B250B7C49F6F83EC84BF2E3B09BD2100F85FE517F3ED
858B6E5E645444CBC22F6E452C211AE891B977B7221F7D9AAF96BC345A619160
B1CF1194FB890F0A1B148D5115F5AD46DA9CF6F0491EC8135B32B4E2BB101D7C
7F313F5FDA74F1D9B567786B52837B8978B417407AA5AF2CC3849554B1BD5A37
16145EA73C492507125F1593290C4DCDFD706D1FDE511772F4FB9CCFAE956F91
730FEFEEC523158E594E29317EA01EB7B341CA178648A813AD755C9966ED0CEA
CDD06F9BAAA8DEBE3136FF4059B75ACB3EC16E334E27888884EF52344BAF34E2
7C1E2DCF2B4E4D60DEB5B74D88FD3968912445AFECF21FC56AF6CDEEDEDCC4E4
8CD83FDF3365FFD34FE83044EE1460C0A0699414A8A2C5564418E2753562EC77
85F9F3CF34ACD9AC4680662DAB938CBA02CD977B289D35EFF3D4357B5D9F13DA
320DB011C80FA1DD036D8154F4C51E5DEA4442CCB6ECE170CCE5CA1230504E6D
9705B7D7D88B00F0DB7D3325924069AD480844F40F2C789AF9B2A779B8B4AD06
7286C2C30271C4DAD7FBBB5A021983E786019AB985F8DF6EC6BC121BFF97B79B
FF086D7C4DA6C6206A046EAA4C4F29E66A481D16D47337F12320BF68EEB50305
C4897D2C4E647AA4ACA495ED4ABF29A5C5B46C5A29569ED4D8CBCDCE85D66EF4
A68A4065657F341B7972B77D417A4B2A2F178DEFE5FFCD1FB3A4FC8B27AC4B5F
86D88A7FA9BA82FB25E5904A0C28E3519D2E164686176A91D8E155804042260E
D7DB2B92A2D7487EDFA8A209AD4405F74667BDD83E850C069A4B41E2310C129A
443EBE3645844A54039966E68C328925D8645172070576B5EADB940B52972BC5
450E352947042068C268B1B068E71F612C5E9F97B011BBB8EE811BB8E327D24E
38EDDDB676007D4F96BB7BDCE3BC8EF236FF5B03D0C2DA7658B5776612F20FFC
73DBE8C8649A7802D31568359AC48EEE70A04B1E2F4E6091586CE2E039FAD67C
B37EDF6BC38C60B350AE109ED452E51F2D3966B26C2212BED4786A5ABD1FEF38
8F0E43D43AAFA936DC509273C056AB0BC1D940ED88F7A6125B1627794F699D22
E70E200C231310B77E97E0062DC80687DEE2C14CC730ACFA2BADA859DD621514
FA6D3FA37D5B37D2744FE07C8F8842DE9B6A95BC38F2C1BF22EA1ACAA603FA46
213836255282A14A795B25D970C6876435228CCAD9868533784335AC9E8D61F3
DDA04E66B8AA9748C2784980FCEBE423C717EDC9E17EE1D5DDA28D0047DF73BD
B48E4C13575568A9D28A9677D04A751D98455AD3F85FBFFF363EB0DB5B6DCFA4
E8307E97624180A4EF6E1C149DE4A5657B94162362848B0BB3409D664E3EAF65
00EEDEEF058EE48E6F87AA21E2ED8D7AD0BED45F2406331D6B89784982D4E50F
E2664CF5AD1763B43A2457CAB9EADA6E95155D935BC457736725D11747C64AB9
3E35F2CACF2AAB0D134431CEC10D6D3E057E09E3F5974292C77A4308DBDCE111
06C898B1D75E610DCF6659DCA106FA62F9B008A0C867D56F46C980EB28624F99
540D1FFE07C96BD79C81E337DA4ACDBA54570D1EB42BF177C44E134D479F86A7
56296934DF61260065C9133E1A2AF05A9A1949A0F1458D27CD7F56B4C3376E66
422E49F8B4FD8AE00CEE5BD71A562F59155D1BE744771C51DF14A718CD65493E
66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE0677BDACF7600C3D48CF22FFA08EE54E20F8C1BEC6795
729C8D6F0483F604EE345E522AFD19F8C75DFF6660A4443CF494BC17A9C644FC
C9C738204778CC4F7CC1656BE602CAAF7D89959658835F6DD1A7B8E69FC30618
363E875234D5138D9726E4C107DB8AFA13A035F6BDE5658657BD0E7974FD3185
D22CF2EC2939D3712A88590E36B304030ADA0D2ACD2B57ABD9E3E2CDC35CDCF5
E1051B086485C19DD2726CDF0825B1C50C95ABE06EABA218F187BF982E9EBC37
847A2850B82485F057D907D1507B66FF9306695E82235E68C270AB5F0CE03B04
0BCB2AED22CCB8816769E8F117C9767B7B363871112BB857A128D43EC7119525
5DB36DCC13A89DC8124DED0467A56E8A64AA622058F010B926F982AF1A00CB58
E8F7FC04E488E6B4249DBE13D597A4FF1AD2CA413D4870304840399088267C64
87F4758C2D94B00BDFB55E3CCF85BE37F51026CB60CBD73D1E1B9865CC74CBB7
DB9EC1FB4ACAD4308965ACB7D6E942A2B1B7022B681A74F7E5086B2752E50ED0
DE91985A236F4EF019FA4D1BBAA961E8FF7CE464CCEE78B64AC93EAFD1A88D40
65B039830C456AF0A6E0F662104C8DADFDBED8EE7952C3AEA8A2B456F16B9B7B
BF953F232B2F51333136B78744FBC7A82133C90FBDB6BB104712253A545AA3BF
50C8401F57B8476ADC3692D685CB245BCEC447B5B00E4A4A59E40C0A270CE02F
15E45F1353E73C2F76FA7AED2689F411AF035278A3C16794BA1708EC2B92B4C5
4569A550A5A4AA70289F6626E86A4F6A047A230D44CE6210E275C4AAC7931329
F0B92F2E8840F8D2AEC81319FFECEFF0B5C6F445770FE1A887A2B515DA86C1D9
47E52D9D0A1B4B5ED2B40F0CC6A3B58AB66306D211FC43E8F01C7F8542871DA6
880CFCE42DA983E9D185A4FC2318566F90920DACA2FD148BF73B060076CDD489
2A544430AC0D1872851478ADD828678F9F4246AA5CAF8426CC972BA71D614073
786224EDBBE2E69A6DE47FD59BF4A29FC4ECA53CF6CED04F5F199368EAFEC002
296524A984B31773B85F726129AC1B93B1365BD3F76AA92124A189ECB428439F
DC8F2B538E760BAB89088C5492B7E18A86461D6E727A6BB1DD6F27D321F6F924
3FEE14DAB411A70C434338C0EC997962523CD9CED917EE1BAC7AE75B4A1B7CA0
542072584660655281829CC50BD4CF55BB35E16ADE208D9D2008F843CE982D04
34A9B86956516933A22213ECC865942D2B8F9B6CF249EA5F6ADBAD0099A1C27C
C2C1EEE0DAB6A0995FF3DEB38D6D0DF8F2755AC71C52A8E89A9EB6A5487DE8CA
927E9A9CBA8F3890ACCBBC9A00B947B3FB7B1BAED8DFB1A9892340A47EB61F49
9C508F6C1B4033959CAB36CBCDE9D0324C8EC7A8F5F024648E59F0E8DB94AFDA
836254897F58421ACAE9075A02F45D93D779F4172B1848833716A547418FAD8C
BEB304888F2E4A096E856D2199B4B1C3FBA97D537C25EE00D2C3E0F5FB27C271
A30FD61EE5A8416D60F3E4C2066C87788D79193AA8696C0727C5E8E9A20DB26B
98CA36421C04F437468783ACB0519DBB4D3B99284A50EB123D1CAE29D70F5135
745B5BCAE8202BFAFFE6DDA2196050251C796C3CB3CF6E34F19823671866D25F
C391613849BB0F44A6F0AE1806BE032CC203A1FCCC63130D969BFCD2BA65B672
63EA3B1FBFAF0BFABAED6FD21336C17E9F571E762C67823B67BBF6B40E54D8AF
F96714A33EF17035AE500814F375C7AFA59EEBD4E7861DF70553B188DC19EB5C
DF20084EE3ED6F6DBCBC77445113A399CFE90D7876C21EE49A5FC9279A4F8930
62603D54C2E048584CA8E29910221C2ED2E5E39EF914924D6775CD1A60CF25FC
F870CC651022FB5658D5D03CC8C07DC673ADC73B84CFCDDCFA903378273E41CC
E85A0AA8EB70F2645FC603C07E9AD954D14C010014011D80742592F9B6129FEE
2AD32E046E42FD504092E64C87920EB0824CECD2919B98CADBFF6DCA71AF3B00
EFB4203DC9E840728883A98AE9A48A060F2318C0CC1C86CA949F81E6766DDF37
AA038CE7A769958BF6E88C3A2448E769C2E8089F1E53E06BA77A475E2FBC6845
45AC439ECDD36B2DA418BDCB3185A6721B72FAE7906387FF67537F2C02E806CE
058D09B77E4116CFDF2AE64DB174B3F35FA5C638AF246F0FEC1148943E58E959
B6264BD094A9C20EE05A47533FADAC73F6A0FAA2141377E51FA7CD0F57F2436B
49990B3D009399C2BB73FBBCB5F6F26FBB76DA03A871283238C6468E0F22C0D2
12A9C62A7C6F9F7BB80FBE7D8B5158C37799994601E7CD6CA9DA079593918B85
5CA7B7FC159E27B318DF77FB8C96751E05D839DD637C4383F5425A19CCF377B6
CDAC4C3218EB6B66F387BBBBBEC6F8277F10586601D1CDCDFF7999EAF89D5357
A8DE4F805618DE5F835DC33D00062C91896755C012FF39509C6056178AA593FF
E7FAC1D423066C7DC5FF79BB59A89AD51B0AB79ACA35C2FE39993E84823DB0C9
B012882AFCC6081093C8DAD976870BA12774BB3BC03433ADB174DE68B5E64E1D
8287B77C2190CB2E801B493FF3D6C94DB1248E18581B1BD191D6B473BFC19D09
650A951275EB808B420E10657DB8D7BA0DF348FB8F93FDA99CA8FE77D339D62D
90AF16D9968BFAB172B9D091758D8A6A43C18B45B994CB227A1288E5D0FCCBFC
7763D47A17D5B8BF7CDE4372F3AB725334955A4B578527EEB8D372B375A8EDAA
2002AE3F7E3242E7C9D4681CD2FE7ACE2B9C57E03AF403C53790960F1749A6EB
C49602371B018853B6003A2DA4CD133873D8778E3AABB8CFD26B2EA3A67DD987
1341B21C3AFE9487391F9F7DEA73F66AE4ABC28EDFDE0EFFE2780F73422F7E8E
4393ACC7ADDDE528750EDA2B0DB5327927167EE7F935B2A7F4B1ED823FA7ECAD
E9A98C34873518DA080268305201361D10405C7B31EFABFE34CD6921A8FAB106
EF3902BD0BC281C1EBDD0B4A935296C726F12E5F4CF8A12F81B854284AB4B30C
47860CFDCD051EB8638570BC30D923A62761A7C88046421A79E07E85DEF26196
0B1AF1B1C78744614CA5044B72AC6407167B25B295156F38869DF2C2F41874BC
94CE1BC284205CF447A245594CDB8800C154E9FB7DAF26C277D2F9D6E53DD478
FBB28ADADA2BE475BC22C06F4FD012A1D912526EE9D5DFE82055A3129E4CA4E4
0D6DA9C79125C5901148A09B09324DDDD29F674EAC94C8AF21A16EA44C27CE75
AA7DC6415D6A7B3EAC8D63ECF62BA4E00939913AE8CCCB249EFA84F3D1D8E02B
6CC8466EBE513AB34E0013C4A6E2EB0A70B88DFFAB16CA131DCF8BB36A36EE21
80AECE5C4FDC834F9DC89CF6127BD0BCE8C79A86DFA8283D98449E8725E92E38
D175BFB76C48265DE3123C5C4253A88261B7CF3A222A3805A2E75C612C20D8D4
A18BBA810760C3D5870A1CF45F6A19DCCFF711979751AE007750201DD3198E72
2848241657397BC5E1FB1C7B69B6ED00C51A3C8FFC5F86C9DA83053353CEC450
A0C15B52754E644C048818AA6B3333C9206E13299B542DDE35B0EEAA102650AE
1D87D82F69ADDBE9429077CF64F2B5C51D530463A1ABDF52B3EC293FB7EFD545
665B90E92CC08C4C4AF49C0B3943AEE485BE3C01D61F88FC5992826774826197
D697AD036AB6F6E9542DB98AF2E939DB5B7DAC999D729F95802FE3E0AE781849
D27F5CBE0728BCBD70ADBF1F9B07959C0CB5EE6F159D0497DC42C7819CA3D818
6908FFC2A812EB12E8F7D16ECD1C8DF7ECA50DC88B10C81A37AC63E19FECDBAD
67CA5D8641CFCCD748984DCF807F0F0DFC5B5E2E9C3546F5964DEA1AED46AB9B
701CF325A7F7E5D0F016E3A8ECA8C68A989AD95DE9F6D646B144FEFDE6B3392D
6A181C3023BE42BD0A75E77A06CE3BD9C4DF3A082164F011E4BBEDB36B8E9F5A
6DCFE6FA921E72BF3EFF0B8AB9EC64AACD73ABA1CF70092E5E99083B5D353627
F7BBBFC77633F97805198A4D4DF682EA3484208D365D77DB1DD8473DC5E2BC98
04F68D8D41A7C543531CD29BEE3C5C380AF54F659EB43AA566CDA15932782014
3573AE074631271D6558D38C7006600EE531E55AB4311D8101585DBBF750D14A
DF933EF3F29643DA04B60679EFD7DCB95D3A56EBADF3ABD76B6AB65D7D7F14A7
2E4A746FDC7E0A5DC91A5901D1B1EAFB080488D7C8BBE440CC7EB68C2C50C288
EFC9173EFB0A61A4ABCD365E648A7043CDD3A74C7FAEC7B013905A72B04960C9
CD6520CEB790705BC2C830A1AF063B149C91BF5A9FB85B3DA9375C9B1AB60CDE
D34FC6CA64F1B5B73579EB3FC7BA164C2831133F1F661A3F2E01E53D8CDBDA3E
72ADA80F4874BB11A9746FCFEB7A9485EE9081E87DB99EBB743FCA66B7DACB6C
3B6F9C85A6E1B68DC80B083CEE6D793E222649A0677C0B5E63D85A73DEAA46C5
0959808E6A565D4982A9F527F9DD708E539FE02DBAD0C28A850E57B0A95770DE
FB9577395B902CE3CCD484E18D43720322A30305EBB9FC1DFF2C8046A998D93A
6DBEC62C3DDE253906EFA1DE82EAFD2F84DD4E9E76A30F8D8011EAB1A574BB1D
2AFA859C62FB461F49DF92685A19CB4C6866F107544BFBC5C66C10D89D4731C5
C72809086BA56F0B88ED94EB68DEA51E1F72DD1F98CC74620D907716A92E6E22
EC15CC1E3D560CA4EA5B53A2FB5C81461F9FDA9FCEDAA23A5D1D438ACF1FB5ED
B500E03C804F6F9C06E24346EE82EB22F0C2DC0465E1F1125352A5B6831FF5AF
94312CC1875835BE32044157E64D9D248E6A8CD5D1D2E61B4CC9B904CF4A241D
35442AAFF525F4C1ED5FC0244889C929A4B92D91F64C949A515BA7C4C86D0228
BD7320CA8F15EED1523B4B9CE6BB7A778109F6EB774CCCBFC5AE26CC74824774
ECD28A4DCB419E8E240AA87B7E57F84581FA899FD42F87D9583AF6F58906D465
ECE6521CCC5182451A20607E31CB0D893EB2C028FB2D69A89AB6D8D4D706ACB0
90097100B482AFD49CEFE05EE090F94A3462E1CC570AD4E8AA9FFC0B5AC90A7B
F667334F2869CD11D203F1F439B8F299C9E94E33869A476E6BF109548EF3BAAF
B054F8EF20EBF90A8C189D6FA2109B41B8AA905D14BCEF8145A13E4A7E38CFBC
3CBA48046FE590E4E22A008991EB05754E70607BE3B8D8EFFDC882E018675C2E
02B74F9A246E02C4B1E209DAA955EB3F198AF167A7371E3C58508A0BCD6434FF
DD5381C764B10C66665B9196833BD5A71FF08E964F643BE28C1B30DB45760953
FD436081FBFB5043940EA273E8A6436C914D1733625A5D858FDF2046F3C74E3C
2A70917E4A8A4A95291EA406318EC49FF2CA8192F1623A70612C7F60AD0E60CA
12F911795BAA056D0AD064460BC43708601CD095A25708C3E9CC775AD00A6F21
68B6EBD4D9140E966B661BD8BC1E95427E27D87BD7FC0FDA48FE59A464FB1220
B5D2DBF58E923CC2D7691CA2892A8298AC493A035F25592C57E253476911BB8E
D4EF798CA3250EE3A69E85076544733157E6D736EAA8F14916B29B2038D572ED
6756143F1FF9A1180B1EC5D699143B0C6A86D6BA17FC84DB5D2827E6C39781E0
54BAF350C7CC221C15989AFBC31D1B9886A22F779945E666EA5D47A5ED5D8346
BD1090CD7A2BC0ADE94995B8B46EE2BDE17A8A59D75D651914E880776CEB6EBC
FEE7DFF4EB0B1C9EDB34AE3191B332CBBFBA628948CBC6D6178976E7E269C5B3
51E5AAC40D05FB447F2B3AD778CC1E01DCF640DFA39C5B27FC89DFAB421AD1BB
95457BE13FA0F8A92DD1434AE9334FD8A7FC9DCB560F754CF8663EABE28F39AB
37FEEE1ACA258A21E36EEB1055FE27D79EAC40B2C11ECB31F05869BC474F70CE
5DC1B0EE8A27D726F14BE581DA3A6105E7ED20C112533F9F4AECBEB1D3D5A58A
B011EC4FAC88153B4552720C08E8F6E9220C0484638B538DE81F3CA8B26F3774
F075E4713B5316FA5C15FBECF0A957E4D66FAAFC04A38E1B781D09FC30D6F6F1
AAABDBFFD7835DD7A58497D9A575F1A2A9B50BEAB04D6DDFB34FE1B50D807B42
5262FC66C039522FFBEBB9BAC1A936D5BFA1757CD6BEDCC88431210CA57C4D02
A4491202EF74CAC9F3AF2659A5591879E0E9BAA8D82E799E49194F11F6EE8A04
C31A9FDD1653FBBDE73F6B8B23E421DAB690B120E9678D042F2E6F5DDF1E3D85
684ADC602D2ADA89E645E12E5F46FB4ABCE1B5378D31929A89344DE16F8411A6
13F20494830CC2ED756F1AF2514D23BC83F6CA027541E3A6D1D8CFADC75BD053
58ECED1314D604BACDF1E350A7DC60AC2E76089988A71D40A6566A98E2F2E39F
E47104C25CB7A845C9BF146B54B6DAE171B2AD211F20B48404750BE3D6EA4736
2B20CDC02623F6C597773E6454C63E7D13B9A1B16E6B7AD020805F955A6ED9CC
1861904290E0BB6172B38CAD676E6523A624652AFCAC7195E4700DA69C0712C9
42661136631519409B3DDF007A1258A4653E28A9613C0C50B3C2338EB24D382F
34B035CCAD10CF812043A967C8F8526DDB6202B54402334E32A5699B4985DED3
214301070FA54A7F3FA13B0D999CF5B604E09BBB64E6FF92A3D54D9257B96E7D
35A2D7B4FA77E5212DFCB787F8F36059146D8D569E3591705E0873F3C92FD020
4B78C0501906E9C7D82B4BB2C46A108A81E650675A89E1D23B7D11A1C25276CF
2BD1891EC901AD17AFC962E0DA0B95729050B4FEAE7E1C2B01D76608E3B77C32
11C3B69E5875C37804FF4169499E2CA97AC331720FEEEFD250475E504D107569
A48B5D7A89D77FBBBE3B5C1E837400294A375A6ADDF6B8016C9FB14BD4E801FF
6A645B8FDF85F58CAEB52B7DB0592ACEBD8B98E0599641B4CE870D317D4478E5
641B18E28428D9F140A9E4FB4F1B202C331F538A860944771A03DE73F44A07C3
48C00D37817B74E448003F184BC20D79E8C4BE35D5D859F62003CC976AA59553
1BC13CD40CA9D264856066686E19D55BDD6A3139FDCE17B1E397E82F13EEFC55
1E97BB7875F21FF5BC6E97F1C4F9C7973E41EA8DFF712947906D55B8692E2C6D
063719606B0560C6ABFCCC9B4E71EDC486A647E43F3235F5CFB1D520E3846266
3D8B5AE4A40B1A9B4E7D6A03FAE4072B155DBFDEB89D05DB6600C1E4D77667E3
2402DAC28F3783B630B818284FA7570D96C67B970FEA861F33F65FA81E6E427F
C760709008DD4EB6240497AEB2004484DBF02AD75D3C6010AE331D0C7315B2A9
3A5EE85DE03DB086EE3A035725FAE57090CE6B4E018FFE83BECFC497F5F2D217
ED62458546C1DABF4AAEA0F8B810712125BEA0FCCA5827E89BC9E981B66092C1
847B283011CBF9620CA9D031179AF97761183AD6AFF1CC32334E79F552DA88E2
A2D9E79ECAC47A3D0514A9ABCC81B6CA70685E3CE6524C963472D1BC9ED66242
96118D15F7BE1172DDEE2EEDE5153BE5059342E897BFB91B998EB180658435DF
24D76C864EC4BA6ABE829D9B0B8112B214C1B6557A981268DD8CB6670C512E85
E855BD929C72A5D0B6AB78E0A5FC8B28C99B97B77A226EDCDCC5C5B401EA2574
23ABF66F2E203FF5E61BDD086DC57FC098727A1F0510E0BA1D3D871997695918
87166ED93B63419F3DC98E1D1D72B64256D021F26CB740F87A2D944636211D94
F89515AF66F3C7AA5DF63618BABBB1C6343F73E593A5B1C3C4B48FC79751F861
09CD0E98C76E71FF9CA139789B9E43C35DB46BF31F5D7885D6D27A616EA00CBF
EC4D82A5762E0685E92FFA984A9E10EDCD52839CBD2E84378A51D10C1C8AE7EB
DA75A944E288F526ED9CD4C1AF8D0959868FE62583C28665FB59E700ADF53729
3620A65E913CF797C16ABAB9C82E71992F42B4E07F9DAA7BA15EF316B131F6B6
61DDDB306D7C0850E21D41E358534A56756C2A4567D0C44AFD0FB00AAF991248
E3B497CFCE19CD4E863E9BE47CFED342303C59047902040B3C8771FAE9295697
829501C35CCB573EB875245BDB8A5DD97B6CDF44DCB8F0E3125E7E3108715407
7696ED8EEFDF3175F6737891C555BFC6F0ACCE7A6322D529E598E71C299F6FE8
319FA6DCFCF450D6CF1243601ABFAA25FBEB35F230C8E52D15A90DB68B66916A
9CFDD880702EA6A0E1CF2B32CD91830125EAC498BC49EAFB8F22F44360F2A07B
5AE0B08A5DF6FA153B66A8D82CDFD423906E61C836688741F12B8EA4E75C2D75
D86247F1B4168BB1DD2B54304195C742567B1F0801AEA1251F16835406B4F458
57941F110F5696ACC882C1811420AE19C4E3BE749EC101E06B673EC10A1F4D52
66AB56C4A828C7AB8C71F3F292B74979F39CA445D7E04F19627E70753F6F15F4
603C9BF0109954520793FFA72DE11FA719C7DD22775A753F5B6B9791E2B03FFB
F888CABDB40F1E48AD9E1D50A0E908534846C50BF7AD4ECDB7276B9A76E22345
1BD9D3E9ABA40203F2C4D4720EDEDFFB276F80517C189CF93BBCB333CB203CC9
525694D694A5EA5C64AF7CC02B2ECAE6FD97480934CDA733927F9F82E7C99DE1
468FF4535E6D146951A20727F762005C936356F05500EFFAE91A49D5A5617903
965826C47B787096EFCB157A35F951A6917BA7DCF9D4E7487AD39AA3F6D2AE97
9B99A007FD1EE1E7EF66CE5D6223DDF3CAB8792051544B0461267BEF8CEC34C1
5D0FCA592DEC7990EF61C005632C9F6290672531DA5081611116CE1EE5F0E596
FB26854CFFBE78119D9E27A6C99E24C1A9DC6D2ACFC924442369A13BC41391F2
65DF6CAE2B628D1251E733AB686FA2E3A7B76525730D2F38050DEB2BCD891792
CEBD0C06AA65B2B51A774FF3CDA365E81E02EB2F843C8D4A98761F270FED6601
A5540FA5EF7566B68B941401AAF273D71FDB8964CD9096014B7E63AA0C5B19F0
641F40FEFC2057D3E11994109A3B85F9A36E96E7C2D4BB2BA4B82C2C0E15146A
DDE26DBD15B0C88567D1050B38E02BCAE76C4349DDF93B2B88BB91D73830C61B
21F8F36B2128FEFACBFC5C02CEECA0B1191EC3DBFFB00BC0AC204B0222EAEA20
D5FEB0744371D89B7E7B22876944D25CC895402A40AA63F6F20AB7ADAFF43EE2

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1200 600 600 (words10.dvi)
@start /Fa 148[42 1[28 105[{}2 69.7385 /CMMI7 rf /Fb
205[40 40 49[{}2 69.7385 /CMR7 rf /Fc 135[57 7[50 11[52
12[94 2[58 61 2[64 1[80 5[83 2[74 82 1[76 75 3[50 1[28
28 58[{}16 99.6264 /CMMI10 rf /Fd 149[28 2[50 50 9[66
66 70[77 18[28 77{}8 99.6264 /CMSY10 rf /Fe 134[48 46
1[46 53 33 41 42 46 51 51 56 81 25 46 1[31 51 46 1[46
51 46 46 51 97[{}22 99.6264 /CMTI10 rf /Ff 133[44 53
53 72 53 55 39 39 39 53 55 50 55 83 28 53 30 28 55 50
30 44 55 44 55 50 3[28 50 28 3[102 2[72 55 73 1[68 77
1[91 2[51 36 75 1[65 68 76 72 71 75 1[47 1[77 1[28 28
50 50 50 50 50 50 50 50 50 50 50 28 33 28 77 1[39 39
28 1[83 2[50 28 11[50 7[55 55 58 11[{}74 99.6264 /CMR10
rf /Fg 133[51 60 60 2[64 45 45 47 60 64 57 64 95 32 2[32
64 57 35 53 64 51 64 56 10[87 1[80 1[86 1[78 2[109 7[75
1[83 1[87 6[32 6[57 57 57 57 48[{}35 99.6264 /CMBX10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 1709 -116 a Fg(Math)36 b(203)1163
15 y(T)-10 b(opics)39 b(for)f(the)f(Chapter)f(10)j(quiz:)1668
115 y(Probabilit)m(y)0 280 y Ff(T)-8 b(o)33 b(do:)0 446
y(Describ)s(e)h(the)g(probabilit)m(y)e(mo)s(del)h(for)h(a)f(trial:)43
b(sample)33 b(space,)h(oucomes,)g(probabilities.)0 579
y(Compute)g(probablilities)e(of)i(ev)m(en)m(ts)g(for)f(a)g(trial)g
(with)g(equally)f(lik)m(ely)g(outcomes.)0 713 y(Construct)j(a)f(w)m
(eigh)m(ted)i(ro)s(oted)e(tree)h(diagram)f(for)h(a)f(m)m(ultistage)h
(trial,)e(compute)i(probabilities)g(of)0 812 y(ev)m(en)m(ts.)0
946 y(Compute)f(the)f(conditional)g(probabilit)m(y)g(of)g(an)g(ev)m(en)
m(t.)0 1079 y(Compute)h(the)f(exp)s(ected)h(v)-6 b(alue)34
b(of)f(a)g(probabilit)m(y)g(mo)s(del.)0 1309 y(Probabilit)m(y)g(is)h
(the)g(study)h(of)f(the)g(long-term)g(b)s(eha)m(vior)g(of)g(random)h
(phenomena,)g(where)g Fe(r)-5 b(andom)p Ff(,)0 1408 y(basically)d(,)47
b(means)g(that)e(kno)m(wledge)h(of)g(what)f(the)h(phenomenon)i(has)e
(done)h(b)s(efore)f(will)f(not)g(let)0 1508 y(y)m(ou)36
b(decide)h(what)e(it)g(will)g(do)k(\025)-53 b(next.)51
b(Suc)m(h)38 b(phenomena)f(include)g(\015ipping)f(coins,)g(rolling)f
(dice,)i(the)0 1608 y(Do)m(w)i(Jones)g(Industrial)g(Av)m(erage,)g(etc.)
61 b(The)39 b(basic)g(idea)g(is)f(that)h(while)f(the)h(ob)6
b(ject's)39 b(short)g(term)0 1707 y(b)s(eha)m(vior)d(is)g(imp)s
(ossible)g(to)f(predict,)i(its)f(long)f(term)h(\(a)m(v)m(erage\))g(b)s
(eha)m(vior)f(can)i(b)s(e)f(predicted)h(with)0 1807 y(great)c
(accuracy!)0 1908 y(Eac)m(h)e(observ)-6 b(ation)30 b(of)h(the)g(ob)6
b(ject)31 b(is)f(a)g Fe(trial)g Ff(\(e.g.,)g(the)h(\015ip)g(of)f(a)h
(coin;)g(and)g(eac)m(h)g(p)s(ossible)g(outcome)0 2008
y(of)37 b(the)f(trial)f(is)i(an)f Fe(event)p Ff(.)53
b(The)37 b Fe(pr)-5 b(ob)g(ability)35 b Ff(of)i(eac)m(h)g(ev)m(en)m(t)g
(predicts)g(ho)m(w)g(man)m(y)f(times)h(the)f(ev)m(en)m(t)0
2108 y(will)c(o)s(ccur,)i(in)f(a)g(large)g(n)m(um)m(b)s(er)h(of)g
(trials.)0 2209 y(W)-8 b(e)34 b(can)f(express)i(these)f(things)f(in)g
(a)g Fe(pr)-5 b(ob)g(ability)35 b(mo)-5 b(del)p Ff(.)45
b(It)33 b(consists)h(of)f(t)m(w)m(o)g(things:)0 2343
y(1.)44 b(A)33 b Fe(sample)j(sp)-5 b(ac)g(e)32 b Ff(S)h(=)h(the)g
(collection)f(of)g(all)f(p)s(ossible)i(outcomes)g(for)f(our)h(trial)0
2445 y(2.)44 b(A)33 b Fe(pr)-5 b(ob)g(ability)32 b Ff(\()h(=)h(a)f(n)m
(um)m(b)s(er)i(b)s(et)m(w)m(een)f(0)f(and)h(1\))f(for)g(eac)m(h)h
(outcome.)0 2546 y(The)24 b(idea)f(is)g(that)g(the)g(probabilit)m(y)f
(describ)s(es)j(the)e(fraction)h(of)f(times)g(w)m(e)h(w)m(ould)c(\025)
-47 b(exp)s(ect)23 b(our)h(outcome)0 2646 y(to)33 b(o)s(ccur)g(in)h(a)f
(v)m(ery)g(large)f(n)m(um)m(b)s(er)j(of)f(trials.)0 2747
y(The)g(individual)f(probablilities)g(m)m(ust)i(add)f(up)g(to)f(one,)h
(b)s(ecause:)46 b(If)34 b(w)m(e)h(let)e(an)h Fe(event)f
Ff(mean,)h(more)0 2847 y(generally)-8 b(,)28 b(some)g(collection)g(of)g
(outcomes,)h(then)g(the)f(probabilit)m(y)g(of)g(the)g(ev)m(en)m(t)h
(should)g(b)s(e)f(the)g(sum)0 2947 y(of)38 b(the)h(individual)e
(probabilities)h(of)g(eac)m(h)h(ev)m(en)m(t.)59 b(Consequen)m(tly)-8
b(,)39 b(the)g(sum)f(o)s(d)g(all)f(the)i(probabil-)0
3046 y(ities)j(should)h(b)s(e)g(the)f(probabilit)m(y)g(that)g(some)h
(one)f(of)h(the)f(outcomes)h(o)s(ccurs)g(in)g(eac)m(h)g(trial,)g(i.e.,)
0 3146 y(the)d(fraction)g(of)g(the)g(time)f(that)g(something)h(happ)s
(ens!)65 b(Since)35 b(\025)-45 b(something)40 b(alw)m(a)m(ys)f(happ)s
(ens,)k(this)0 3246 y(probabilit)m(y)32 b(is)i(one.)0
3379 y(Ex:)42 b(\015ipping)32 b(a)g(\(fair!\))42 b(coin;)32
b(the)g(sample)g(space)g(is)g Fd(f)p Ff(heads,tails)p
Fd(g)p Ff(,)f(and)h(eac)m(h)g(has)g(a)f(probabilit)m(y)g(of)0
3479 y(.5)i(.)0 3580 y(Ex:)43 b(rolling)33 b(a)g(pair)g(of)g(dice:)45
b(there)34 b(are)f(36)g(p)s(ossible)h(outcomes)g(\(if)f(w)m(e)h(k)m
(eep)g(trac)m(k)f(of)g(whic)m(h)h(die)g(is)0 3680 y(whic)m(h\),)f(eac)m
(h)i(ha)m(ving)e(a)g(probabilit)m(y)f(of)i(1/36)e(.)0
3782 y(These)47 b(probabilit)m(y)f(mo)s(dels)g(describ)s(e)i
Fe(e)-5 b(qual)5 b(ly)48 b(likely)g(outc)-5 b(omes)p
Ff(;)53 b(eac)m(h)47 b(outcome)f(has)h(the)g(same)0 3881
y(probabilit)m(y)-8 b(,)32 b(whic)m(h)i(add)g(up)g(to)f(1;)f(so)i(eac)m
(h)g(outcome)f(has)h(probabilit)m(y)f(1/\(the)g(size)g(of)h(the)g
(sample)0 3981 y(space\).)0 4146 y(Basic)f(prop)s(erties)h(of)f
(probabilit)m(y)g(mo)s(dels:)0 4266 y Fc(A;)17 b(B)45
b Ff(=)c(ev)m(en)m(ts)h(=)g(collections)f(of)g(p)s(ossible)g(outcomes;)
p 2258 4186 75 4 v 45 w Fc(A)g Ff(=)h(complemen)m(t)g(of)f
Fc(A)g Ff(=)g(all)f(p)s(ossible)0 4365 y(outcomes)31
b(not)f(in)h Fc(A)p Ff(.)43 b Fc(P)14 b Ff(\()p Fc(A)p
Ff(\))29 b(=)i(probabilit)m(y)f(of)h(ev)m(en)m(t)g Fc(A)p
Ff(.)43 b Fc(A)16 b Fd([)h Fc(B)35 b Ff(\(=)c(union\))f(=)h(the)g
(outcomes)g(that)0 4465 y(are)36 b(in)g Fc(A)f Ff(or)p
398 4481 89 4 v 36 w Fc(B)40 b Ff(\(or)c(b)s(oth\).)51
b Fc(A)24 b Fd(\\)g Fc(B)41 b Ff(\(=)36 b(in)m(tersection\))g(=)g(the)g
(outcomes)h(that)e(are)h(in)g(b)s(oth)g Fc(A)f Ff(and)p
3739 4481 161 4 v 0 4565 a Fc(B)5 b Ff(.)44 b(Then:)0
4698 y(0)27 b Fd(\024)i Fc(P)14 b Ff(\()p Fc(A)p Ff(\))26
b Fd(\024)i Ff(1)0 4800 y Fc(P)14 b Ff(\()p Fc(A)21 b
Fd([)i Fc(B)5 b Ff(\))27 b(=)h Fc(P)14 b Ff(\()p Fc(A)p
Ff(\))21 b(+)i Fc(P)14 b Ff(\()p Fc(B)5 b Ff(\))21 b
Fd(\000)h Fc(P)14 b Ff(\()p Fc(A)22 b Fd(\\)g Fc(B)5
b Ff(\))0 4925 y Fc(P)14 b Ff(\()p 117 4845 75 4 v Fc(A)o
Ff(\))28 b(=)g(1)22 b Fd(\000)g Fc(P)14 b Ff(\()p Fc(A)p
Ff(\))0 5026 y Fc(P)g Ff(\()p Fc(S)6 b Ff(\))27 b(=)h(1)33
b(\(in)g(a)g(trial,)f(something)p 920 5042 444 4 v 33
w(happ)s(ens...\))0 5160 y(Tw)m(o)25 b(ev)m(en)m(ts)h(are)f
Fe(mutual)5 b(ly)31 b(exclusive)25 b Ff(if)g Fc(A)6 b
Fd(\\)g Fc(B)29 b Ff(is)c(empt)m(y)-8 b(,)26 b(i.e.,)g(they)f(share)h
(no)f(outcome)g(in)g(common.)0 5259 y(F)-8 b(or)31 b(m)m(utually)h
(exclusiv)m(e)g(ev)m(en)m(ts,)g(w)m(e)h(ha)m(v)m(e)f
Fc(P)14 b Ff(\()p Fc(A)19 b Fd([)g Fc(B)5 b Ff(\))27
b(=)h Fc(P)14 b Ff(\()p Fc(A)p Ff(\))19 b(+)h Fc(P)14
b Ff(\()p Fc(B)5 b Ff(\).)42 b(Di\013eren)m(t)32 b(outcomes)h(are)0
5359 y(m)m(utually)k(exclusiv)m(e,)h(so)f(the)h(probabilit)m(y)e(of)i
(an)f(ev)m(en)m(t)h(=)g(the)g(sum)f(of)h(the)g(probabilities)f(of)g
(eac)m(h)0 5459 y(individual)c(outcome)g(in)g(the)h(ev)m(en)m(t.)0
5688 y Fg(T)-10 b(ree)38 b(diagrams:)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 -116 a Ff(T)-8 b(rees)28 b(can)g(help)g(us)h(k)
m(eep)f(trac)m(k)f(of)h(the)g(relationships)g(among)f(outcomes,)i(and)f
(compute)h(the)e(proba-)0 -17 y(bilities)k(of)g(ev)m(en)m(ts,)h(esp)s
(ecially)f(for)h Fe(multistage)i(trials)p Ff(:)43 b(A)31
b(trial)f(whic)m(h)i(is)f(a)g(com)m(bination)g(of)h(simpler)0
83 y(\(to)42 b(compute)i(the)f(probabilit)m(y)f(of)8
b(!\))72 b(trials)42 b(o)s(ccuring)h(one)g(after)g(the)g(other.)73
b(This)43 b(includes)h(the)0 183 y(p)s(ossiblit)m(y)33
b(that)g(what)g(is)g(done)h(in)f(a)g(later)g(stage)g(dep)s(ends)i(on)e
(the)h(outcome)g(of)f(an)g(earlier)g(stage.)0 284 y(Examples:)52
b(\(a\))36 b(dra)m(w)h(three)h(balls)f(from)g(a)g(jar)h(\(without)e
(replacing)i(them)f(b)s(et)m(w)m(een)i(eac)m(h)f(stage\);)0
383 y(\(b\))32 b(\015ip)g(a)g(coin,)g(if)h(heads,)g(roll)e(a)h(die,)g
(if)h(tails)e(spin)i(a)f(wheel;)g(\(c\))g(roll)f(a)h(4-sided)h(die)g
(and)f(then)h(spin)0 483 y(a)g(wheel)g(with)g(n)m(um)m(b)s(ers)i(1)d
(through)i(4,)e(if)h(the)h(die)f(is)g(smaller)g(than)g(the)g(wheel,)g
(roll)f(the)i(die)f(again,)0 582 y(then)h(tak)m(e)f(the)g(sum)h(of)g
(the)f(die)h(and)g(the)f(wheel)h(as)f(outcome.)0 746
y(The)41 b(tree)h(describ)s(es)g(all)e(of)h(the)h(p)s(ossible)f
(outcomes)g(at)g(eac)m(h)h(stage)f(of)g(the)g(trial.)66
b(F)-8 b(or)40 b(example,)0 846 y(\015ipping)34 b(a)f(coin)g(three)h
(times:)0 2276 y @beginspecial 126 @llx 211 @lly 409
@urx 435 @ury 1728 @rwi @setspecial
%%BeginDocument: w10f1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 8
%%For: (Chris Dobson) ( )
%%Title: (w10f1.eps)
%%CreationDate: (11/29/2007) (12:17 PM)
%%BoundingBox: 126 211 409 435
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 12 600 780
%AI3_DocumentPreview: Header
%%PageOrigin:12 12
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 R
0 0 0 1 K
0 i
0 J 0 j 3 w 4 M []0 d
%AI3_Note:
0 D
143.9995 216 m
161.9995 288 l
179.9995 216 l
S
216 216 m
234 288 l
252 216 l
S
288 216 m
306 288 l
324 216 l
S
360 216 m
378 288 l
396 216 l
S
162 288 m
198 360 l
234 288 l
S
306.0005 288 m
342 360 l
378 288 l
S
197.9995 360 m
269.9995 432 l
342 360 l
S
0 To
1 0 0 1 126 216 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
/_Helvetica 21 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 180 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 144 288 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 171 360 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 234 288 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 198 216 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 252 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 270 216 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 324 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 342 216 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 378 288 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 288 288 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 351 360 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1905 1121 a(The)49 b(top)g(v)m(ertex)f(is)g(the)h
Fe(r)-5 b(o)g(ot)p Ff(,)52 b(the)d(start)f(of)1905 1220
y(the)37 b(trial.)52 b(for)37 b(eac)m(h)h(successiv)m(e)g(stage)e(of)h
(the)1905 1320 y(trial,)29 b(w)m(e)h(send)g(out)g Fe(br)-5
b(anches)28 b Ff(for)i(eac)m(h)g(of)g(the)1905 1420 y(p)s(ossible)j
(outcomes)f(of)h(the)f(stage,)g(from)g(eac)m(h)1905 1519
y(of)c(the)f(outcomes)h(of)f(the)h(previous)f(stage)h(that)1905
1619 y(the)36 b(next)f(stage)h(acts)f(up)s(on.)51 b(A)m(t)35
b(the)h(b)s(ottom)1905 1719 y(are)27 b(the)g Fe(le)-5
b(aves)p Ff(,)28 b(whic)m(h)f(represen)m(t)i(the)e(p)s(osible)1905
1818 y(outcomes)33 b(of)f(the)h(m)m(ulti-stage)e(trial.)43
b(F)-8 b(or)32 b(a)f(3)1905 1918 y(coin)46 b(\015ip,)j(there)e(are)f(8)
g(p)s(ossible)g(outcomes.)1905 2017 y(What)e(eac)m(h)g(one)f(is)g(can)h
(b)s(e)g(determined)g(b)m(y)1905 2117 y(reading)34 b(outcomes)g(for)g
(eac)m(h)h(stage)e(from)h(the)1905 2217 y(ro)s(ot)i(to)g(the)h(leaf.)55
b(F)-8 b(or)36 b(example,)h(the)g(fourth)1905 2316 y(leaf)d(from)f(the)
h(left)f(is)g(the)h(outcome)f(HTT.)0 2465 y(The)h(tree)f(diagram)g(for)
h(example)f(\(c\))g(is:)0 3543 y @beginspecial -135 @llx
283 @lly 524 @urx 507 @ury 2880 @rwi @setspecial
%%BeginDocument: w10f2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 8
%%For: (Chris Dobson) ( )
%%Title: (w10f2.eps)
%%CreationDate: (11/29/2007) (12:28 PM)
%%BoundingBox: -135 283 524 507
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 12 600 780
%AI3_DocumentPreview: Header
%%PageOrigin:12 12
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 R
0 0 0 1 K
0 i
0 J 0 j 3 w 4 M []0 d
%AI3_Note:
0 D
251.9995 431.9995 m
269.9995 503.9995 l
287.9995 431.9995 l
S
216 432 m
270 504 l
324 432 l
S
153 360 m
216 432 l
126 360 l
S
99 360 m
216 432 l
63 360 l
S
261 360 m
252 431.9995 l
234 360 l
S
207 360 m
252 432 l
180 360 l
S
279 360 m
288 432 l
306 360 l
S
333 360 m
288 432 l
360 360 l
S
387 360 m
324 432 l
414 360 l
S
441 360 m
324 432 l
477 360 l
S
0 To
1 0 0 1 315 360 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
/_Helvetica 18 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 324 432 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 387 360 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 288 360 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 207 432 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 234 432 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 270 432 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 342 360 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 270 360 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 414 360 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 441 360 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 54 360 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 90 360 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 117 360 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 198 360 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 477 360 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 225 360 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 144.0005 360 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 171 360 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 252 360 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 R
0 0 0 1 K
3 w
-36 288 m
99 360 l
-63 288 l
S
-90 288 m
99 360 l
-126 288 l
S
0 To
1 0 0 1 -135 288 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 -99 288 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 -72 288 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 -45 288 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 R
0 0 0 1 K
3 w
72 288 m
126 359.999 l
45 288 l
S
18 288 m
126 360 l
-9 288 l
S
0 To
1 0 0 1 9 288 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 36 288 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 -18 288 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 63 288 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 R
0 0 0 1 K
3 w
90 288 m
153 360 l
117 288 l
S
144 288 m
153 360 l
171 288 l
S
0 To
1 0 0 1 126 288 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 99 288 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 153 288 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 81 288 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 R
0 0 0 1 K
3 w
423 288 m
360 360 l
450 288 l
S
477 288 m
360 360 l
513 288 l
S
0 To
1 0 0 1 423 288 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 450 288 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 477 288 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 513 288 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 R
0 0 0 1 K
3 w
306 288 m
261 360 l
333 288 l
S
360 288 m
261 360 l
396 288 l
S
0 To
1 0 0 1 306 288 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 333 288 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 360 288 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396 288 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 R
0 0 0 1 K
3 w
198 288 m
234 360 l
225 288 l
S
252 288 m
234 360 l
279 288 l
S
0 To
1 0 0 1 234 288 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 207 288 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 261 288 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 189 288 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
 @endspecial 164 x(The)h(v)m(ertices)f(on)h(the)f(second)i(ro)m(w)e
(with)g(no)g(branc)m(hes)j(out)d(of)g(them)h(are)f(also)g(lea)m(v)m
(es.)0 3871 y(The)39 b(tree)f(diagram)g(allo)m(ws)g(us)h(to)f(see)h
(what)f(the)h(p)s(ossible)f(outcomes)h(of)g(a)f(m)m(ulti-stage)g(trial)
f(are,)0 3970 y(but)31 b(more)g(than)g(that,)g(it)f(allo)m(ws)h(us)g
(to)g(compute)g(the)h(probabilities)e(of)h(those)h(outcomes.)43
b(The)32 b(idea)0 4070 y(is)38 b(that)f(eac)m(h)i(stage)e(consists)i
(of)f(a)f(\\simpler")h(trial,)f(whose)i(probabilities)e(w)m(e)h(can)g
(compute.)59 b(W)-8 b(e)0 4169 y(can)32 b(lab)s(el)f(eac)m(h)i(branc)m
(h)g(with)f(the)g(probabilit)m(y)f(that,)g(at)g(that)h(stage,)f(the)i
(outcome)f(at)f(its)g(end)i(will)0 4269 y(o)s(ccur.)44
b(F)-8 b(or)33 b(example,)g(with)g(the)h(3)f(coin)g(\015ip)h(of)f(a)g
(\(fair\))g(coin:)0 5662 y @beginspecial 125 @llx 211
@lly 417 @urx 435 @ury 1728 @rwi @setspecial
%%BeginDocument: w10f3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 8
%%For: (Chris Dobson) ( )
%%Title: (w10f3.eps)
%%CreationDate: (11/29/2007) (1:04 PM)
%%BoundingBox: 125 211 417 435
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 12 12 600 780
%AI3_DocumentPreview: Header
%%PageOrigin:12 12
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 R
0 0 0 1 K
0 i
0 J 0 j 3 w 4 M []0 d
%AI3_Note:
0 D
143.9995 216 m
161.9995 288 l
179.9995 216 l
S
216 216 m
234 288 l
252 216 l
S
288 216 m
306 288 l
324 216 l
S
360 216 m
378 288 l
396 216 l
S
162 288 m
198 360 l
234 288 l
S
306.0005 288 m
342 360 l
378 288 l
S
197.9995 360 m
269.9995 432 l
342 360 l
S
0 To
1 0 0 1 126 216 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
/_Helvetica 21 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 180 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 144 288 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 171 360 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 234 288 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 198 216 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 252 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 270 216 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 324 216 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 342 216 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 378 288 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 288 288 0 Tp
TP
0 Tr
(H) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 351 360 0 Tp
TP
0 Tr
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 200.5 259.5 0 Tp
TP
0 Tr
/_Helvetica 18 Tf
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 362.4902 322.1455 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 243.9951 241.3232 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 315.9854 243.9688 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 125.5 250.5 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 296.4902 327.1455 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 172.9951 243.3232 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 271.9854 257.9688 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 216.2471 324.4111 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 309.2373 395.0566 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 151.7422 325.2344 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 205.7324 398.8799 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 391.374 245.9561 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 342.374 263.9561 0 Tp
TP
0 Tr
(1/2) Tx 1 0 Tk
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1905 4513 a(Eac)m(h)44 b(lab)s(el)g(is)f(1/2,)j(since)e
(eac)m(h)h(\015ip)f(is)g(fair.)1905 4613 y(Then)32 b(the)g(probabilit)m
(y)f(of)g(eac)m(h)h(leaf)g(\(that)f(is,)1905 4712 y(of)49
b(the)h(m)m(ulti-stage)f(trial)e(ending)j(with)f(the)1905
4812 y(outcome)42 b(represen)m(ted)h(b)m(y)e(that)g(leaf)8
b(\))41 b(is)g(the)1905 4911 y(pro)s(duct)p 1905 4927
341 4 v 23 w(of)22 b(the)h(probabilities)f(on)g(the)h(branc)m(hes)1905
5011 y(leading)33 b(to)e(that)i(leaf.)43 b(This)33 b(is)f(b)s(ecause)i
(if)f(w)m(e)1905 5111 y(think)h(in)g(terms)g(of)g(a)f(large)h(n)m(um)m
(b)s(er)h(of)f(these)1905 5210 y(m)m(ultistage)42 b(trials,)i(if)e(the)
h(lab)s(els)f(leading)h(to)1905 5310 y(the)26 b(leaf)g(are)f
Fc(p)2455 5325 y Fb(1)2500 5310 y Fc(;)17 b(:)g(:)g(:)d(;)j(p)2772
5325 y Fa(k)2820 5310 y Ff(,)27 b(then)f Fc(p)3144 5325
y Fb(1)3214 5310 y Ff(of)g(the)g(time,)1905 5410 y(the)38
b(\014rst)g(stage)f(will)g(lead)h(us)g(do)m(wn)g(the)g(\014rst)1905
5509 y(branc)m(h)25 b(leading)f(to)f(our)h(leaf)g(\(that's)f(what)h
(the)1905 5609 y Fc(p)1955 5624 y Fb(1)2033 5609 y Ff(means!\);)33
b(of)g(those)h(times,)e Fc(p)3149 5624 y Fb(2)3227 5609
y Ff(of)h(the)g(time)1905 5708 y(w)m(e)h(will)e(go)h(do)m(wn)h(the)f
(second)i(branc)m(h,)f(so)g Fc(p)3659 5723 y Fb(2)p eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 0 -116 a Ff(of)p 0 -100 81 4 v
34 w Fc(p)164 -101 y Fb(1)242 -116 y Ff(of)34 b(the)g(time)f(\(i.e.,)g
Fc(p)1033 -101 y Fb(1)1078 -116 y Fc(p)1128 -101 y Fb(2)1206
-116 y Ff(of)h(the)g(time!\),)e(the)i(trial)f(leads)h(us)g(do)m(wn)g
(to)f(the)h(end)h(of)f(the)g(second)0 -17 y(branc)m(h.)55
b(Rep)s(eating)37 b(this)g(reasoning)g(all)f(of)h(the)g(w)m(a)m(y)f(do)
m(wn,)i(w)m(e)f(\014nd)h(that)e Fc(p)3057 -2 y Fb(1)3118
-17 y Fd(\001)17 b(\001)g(\001)e Fc(p)3301 -2 y Fa(k)3387
-17 y Ff(of)37 b(the)g(time,)0 83 y(the)f(m)m(ulti-stage)g(trial)f
(ends)j(at)d(the)i(leaf)f(w)m(e)g(w)m(ere)h(in)m(terested)g(in.)53
b(So,)36 b(in)h(this)f(case,)h(w)m(e)f(\014nd)h(that)0
183 y(eac)m(h)d(outcome)g(of)f(our)h(3)f(coin)g(\015ip)g(o)s(ccurs)h
(1/8)f(=\(1/2\)\(1/2\)\(1/2\))e(of)i(the)h(time.)0 313
y(F)-8 b(or)27 b(example)h(\(c\),)g(assuming)g(b)s(oth)f(the)h(die)g
(and)g(the)g(wheel)g(are)f(fair,)i(eac)m(h)f(outcome)g(for)g(eac)m(h)g
(stage)0 413 y(has)i(a)f(1/4)g(c)m(hance)i(of)f(o)s(ccuring.)43
b(So)29 b(the)h(outcomes)g(on)g(the)f(2nd)h(ro)m(w)g(o)s(ccur)g(1/16)e
(of)i(the)g(time,)f(and)0 512 y(eac)m(h)34 b(outcome)g(on)f(the)h(3rd)f
(ro)m(w)g(o)s(ccurs)h(1/64)f(of)g(the)h(time.)0 674 y(This)j(allo)m(ws)
f(us)h(to)f(compute)h(the)g(probabilities)f(of)g(eac)m(h)i(individual)e
(outcome.)54 b(T)-8 b(o)35 b(compute)j(the)0 773 y(probabilit)m(y)43
b(of)h(an)g(ev)m(en)m(t,)j(w)m(e,)g(as)c(b)s(efore,)48
b(add)c(up)g(the)h(probabilities)e(of)h(the)g(outcomes)h(in)f(the)0
873 y(ev)m(en)m(t.)h(These)34 b(t)m(w)m(o)f(prop)s(erties)h(are)f
(summed)i(up)f(in)f(the)0 1003 y Fg(Multiplication)j(Rule:)44
b Ff(The)35 b(probabilit)m(y)e(of)h(a)g(leaf)g(is)g(the)g(pro)s(duct)h
(of)f(the)g(probabilities)g(along)0 1103 y(the)g(branc)m(hes)h(from)e
(ro)s(ot)g(to)f(leaf.)0 1203 y Fg(Addition)37 b(Rule:)43
b Ff(The)34 b(probabilit)m(y)f(of)g(an)h(ev)m(en)m(t)g(is)g(the)f(sum)h
(of)g(the)g(probabilities)f(of)h(the)g(lea)m(v)m(es)0
1303 y(in)f(the)h(ev)m(en)m(t.)0 1464 y(F)-8 b(or)33
b(example,)g(in)g(example)g(\(c\),)g(the)g(probabilit)m(y)g(that)g(w)m
(e)g(end)i(with)d(a)h(sum)h(of)g(5)f(is)-405 1661 y Fc(P)14
b Ff(\()p Fd(f)p Ff(123)p Fc(;)j Ff(132)p Fc(;)g Ff(141)p
Fc(;)g Ff(232)p Fc(;)g Ff(241)p Fc(;)f Ff(32)p Fc(;)g
Ff(341)p Fc(;)g Ff(41)o Fd(g)22 b Ff(=)1387 1594 y(1)p
1362 1638 100 4 v 1362 1729 a(64)1496 1661 y(+)1632 1594
y(1)p 1607 1638 V 1607 1729 a(64)1741 1661 y(+)1878 1594
y(1)p 1853 1638 V 1853 1729 a(64)1986 1661 y(+)2123 1594
y(1)p 2098 1638 V 2098 1729 a(64)2232 1661 y(+)2368 1594
y(1)p 2343 1638 V 2343 1729 a(64)2477 1661 y(+)2613 1594
y(1)p 2589 1638 V 2589 1729 a(16)2722 1661 y(+)2859 1594
y(1)p 2834 1638 V 2834 1729 a(64)2968 1661 y(+)3104 1594
y(1)p 3079 1638 V 3079 1729 a(16)3218 1661 y(=)29 b(6)3410
1594 y(1)p 3386 1638 V 3386 1729 a(64)3519 1661 y(+)23
b(2)3705 1594 y(1)p 3681 1638 V 3681 1729 a(16)3820 1661
y(=)3937 1594 y(14)p 3937 1638 V 3937 1729 a(64)4076
1661 y(=)4218 1594 y(7)p 4193 1638 V 4193 1729 a(32)0
1845 y([Without)k(rolling)f(the)i(die)f(again,)h(just)g(rolling,)f
(spinning,)i(and)f(adding,)g(the)g(probabilit)m(y)e(of)i(getting)0
1945 y(a)33 b(sum)h(of)f(5)g(w)m(ould)h(b)s(e)g(4\(1/16\)=1/4.)42
b(So)33 b(rerolling)g(mak)m(es)g(getting)g(a)g(5)g(less)h(lik)m(ely!])0
2167 y Fg(Conditional)i(Probabilit)m(y:)0 2328 y Ff(One)50
b(of)f(the)h(most)f(in)m(teresting)g(asp)s(ects)h(of)f(probabilit)m(y)g
(is)g(that)f(the)i(probabilit)m(y)e(of)h(an)g(ev)m(en)m(t)0
2428 y(dep)s(ends)44 b(on)f(what)f(y)m(ou)g(underbarkno)m(w.)72
b(F)-8 b(or)42 b(an)g(ordinary)g(dec)m(k)h(of)g(cards,)i(the)d
(probabilit)m(y)g(of)0 2527 y(dra)m(wing)f(a)f(3)g(from)g(the)h(dec)m
(k)g(is)f(1/13)g(\(4)g(3's)g(out)g(of)h(52)f(cards\).)65
b(But)40 b(if)h(happ)s(en)g(to)f(kno)m(w)g(that)0 2627
y(the)i(card)g(can't)p 410 2643 216 4 v 42 w(b)s(e)g(the)g(3)g(of)g
(diamonds)g(\(b)s(ecause)h(someb)s(o)s(dy)f(told)f(y)m(ou)h(it)f(w)m
(asn't?\))70 b(then)42 b(y)m(ou)0 2726 y(kno)m(w)d(that)f(the)h
(probabilit)m(y)f(is)h(really)e(3/51)h(\(3)g(3's)h(out)f(of)h(51)g
(remaining)f(cards\),)j(instead.)60 b(The)0 2826 y(probabilit)m(y)32
b(is)i(\\conditioned")f(\(c)m(hanged\))h(b)m(y)g(y)m(our)f(kno)m
(wledge.)0 2987 y(More)j(generally)-8 b(,)34 b Fc(P)14
b Ff(\()p Fc(A)p Ff(\))34 b(is)i(the)f(relativ)m(e)g(lik)m(eliho)s(o)s
(d)e(that)i(the)h(outcome)f(of)h(a)f(trial)f(is)h(in)g
Fc(A)p Ff(.)50 b(But)35 b(if)0 3087 y(w)m(e)f(already)f(kno)m(w)g(that)
g(the)g(outcome)h(lies)f(in)h Fc(B)j Ff(\(extra)c(kno)m(wledge\),)g
(then)h(to)f(land)g(in)h Fc(A)f Ff(it)f(m)m(ust)0 3186
y(really)p 0 3202 242 4 v 28 w(land)c(in)h Fc(A)13 b
Fd(\\)g Fc(B)5 b Ff(.)42 b(So)29 b(giv)m(en)f(that)g(w)m(e)i(kno)m(w)e
(it)g(lies)h(in)f Fc(B)5 b Ff(,)29 b(the)g(probabilit)m(y)f(that)g(is)h
(in)f Fc(A)p Ff(,)h(whic)m(h)0 3286 y(w)m(e)37 b(denote)g
Fc(P)14 b Ff(\()p Fc(A)p Fd(j)p Fc(B)5 b Ff(\))35 b(=)i(the)g
(probabilit)m(y)f(of)g Fc(A)h Ff(giv)m(en)p 1879 3302
227 4 v 36 w Fc(B)5 b Ff(,)37 b(is)f(really)g(the)h(relativ)m(e)e(size)
i(of)g Fc(A)24 b Fd(\\)h Fc(B)41 b Ff(in)0 3386 y Fc(B)5
b Ff(,)40 b(that)e(is,)i Fc(P)14 b Ff(\()p Fc(A)26 b
Fd(\\)g Fc(B)5 b Ff(\))p Fc(=P)14 b Ff(\()p Fc(B)5 b
Ff(\).)59 b(This)39 b(is)g(the)h(lik)m(eho)s(o)s(d)e(that,)i(of)f(the)g
(outcomes)h(that)f(land)g(in)g Fc(B)5 b Ff(,)0 3485 y(w)m(e)36
b(also)g(land)g(in)g Fc(A)p Ff(.)52 b(Put)36 b(di\013eren)m(tly)-8
b(,)36 b(w)m(e)h(can)f(write)g Fc(P)14 b Ff(\()p Fc(A)23
b Fd(\\)i Fc(B)5 b Ff(\))31 b(=)i Fc(P)14 b Ff(\()p Fc(A)p
Fd(j)p Fc(B)5 b Ff(\))p Fc(P)14 b Ff(\()p Fc(B)5 b Ff(\);)34
b(if)i(1/3=)p Fc(P)14 b Ff(\()p Fc(B)5 b Ff(\))0 3585
y(of)32 b(the)h(time)f(w)m(e)h(land)f(in)g Fc(B)37 b
Ff(and,)c(of)f(those)h(times)f(\(i.e.,)f(giv)m(en)h(w)m(e)h(are)f(in)g
Fc(B)5 b Ff(\),)32 b(2/5=)p Fc(P)14 b Ff(\()p Fc(A)p
Fd(j)p Fc(B)5 b Ff(\))30 b(of)j(the)0 3685 y(time)39
b(w)m(e)g(land)g(in)g Fc(A)p Ff(,)h(then)f Fc(P)14 b
Ff(\()p Fc(A)25 b Fd(\\)i Fc(B)5 b Ff(\))36 b(=)i(\(1)p
Fc(=)p Ff(3\)\(2)p Fc(=)p Ff(5\))d(=)j Fc(P)14 b Ff(\()p
Fc(B)5 b Ff(\))p Fc(P)14 b Ff(\()p Fc(A)p Fd(j)p Fc(B)5
b Ff(\))36 b(of)j(the)g(time)g(w)m(e)g(land)g(in)0 3784
y(b)s(oth)33 b Fc(A)g Ff(and)h Fc(B)5 b Ff(.)0 3915 y(As)35
b(an)f(example)h(\(w)m(ork)f(out)g(the)h(tree)g(diagram!\),)f(supp)s
(ose)i(w)m(e)f(ha)m(v)m(e)g(t)m(w)m(o)f(jars,)h(one)g(with)g(2)f(white)
0 4015 y(\(W\))c(and)h(3)f(blac)m(k)g(\(B\))f(marbles,)i(and)g(the)g
(other)f(with)g(4)g(white)g(and)h(2)f(blac)m(k)g(marbles,)h(and)g(w)m
(e)g(\015ip)0 4114 y(a)i(coin,)g(heads)i(\(H\))d(dra)m(wing)i(from)f
(the)h(\014rst)g(jar)f(and)h(tails)f(\(T\))g(from)g(the)h(second.)45
b(The)34 b(outcomes)0 4214 y(are)f Fd(f)p Fc(H)8 b(W)m(;)17
b(H)8 b(B)d(;)17 b(T)d(W)m(;)j(T)d(B)5 b Fd(g)p Ff(,)30
b(and)k(a)f(tree)h(diagram)e(w)m(orks)h(out)h(the)f(probabilities.)44
b(Then)286 4391 y Fc(P)14 b Ff(\(heads)p Fd(j)p Ff(blac)m(k\))27
b(=)h Fc(P)14 b Ff(\()p Fd(f)p Fc(H)8 b(B)d Fd(g)p Ff(\))p
Fc(=P)14 b Ff(\()p Fd(f)p Fc(H)8 b(B)d(;)17 b(T)d(B)5
b Fd(g)p Ff(\))24 b(=)2604 4323 y(\(1)p Fc(=)p Ff(2\)\(3)p
Fc(=)p Ff(5\))p 2317 4368 1030 4 v 2317 4459 a(\(1)p
Fc(=)p Ff(2\)\(3)p Fc(=)p Ff(5\))c(+)i(\(1)p Fc(=)p Ff(2\)\(2)p
Fc(=)p Ff(6\))3386 4391 y(=)3528 4323 y(9)p 3503 4368
100 4 v 3503 4459 a(14)0 4569 y(while)37 b Fc(P)14 b
Ff(\(heads\))35 b(=)h Fc(P)14 b Ff(\()p Fd(f)p Fc(H)8
b(W)m(;)17 b(H)8 b(B)d Fd(g)p Ff(\))32 b(=)k(\(1)p Fc(=)p
Ff(2\)\(2)p Fc(=)p Ff(5\))22 b(+)k(\(1)p Fc(=)p Ff(2\)\(3)p
Fc(=)p Ff(5\))32 b(=)k(1)p Fc(=)p Ff(2.)56 b(So)37 b(kno)m(wing)g(that)
h(w)m(e)0 4669 y(drew)32 b(a)g(blac)m(k)g(marble)g(tells)f(us)i(that)e
(it)h(is)f(more)h(lik)m(ely)f(that)h(coin)f(came)i(up)f(heads)h(than)f
(w)m(e)h(w)m(ould)0 4769 y(ha)m(v)m(e)27 b(otherwise)f(exp)s(ected.)43
b(The)27 b(extra)e(information)h(c)m(hanged)i(our)e(understanding)i(of)
f(the)f(p)s(ossible)0 4868 y(outcomes)34 b(of)f(the)h(coin)f(\015ip.)0
5090 y(The)i(idea)f(of)g(conditional)g(probabilities)g(arise)g(in)g
(man)m(y)g(situations.)47 b(One)35 b(in)m(teresting)g(example)f(is)0
5190 y(medical)28 b(tests)h(for)f(the)h(presence)i(of)d(disease:)42
b(a)29 b(test)f(has)h(a)f(certain)g(probabilit)m(y)g(of)g(sa)m(ying)g
(that)g(y)m(ou)0 5289 y(ha)m(v)m(e)h(the)g(disease)h(\("p)s(ositiv)m
(e"\))d(if)h(y)m(ou)h(ha)m(v)m(e)g(the)g(disease,)h(and)f(a)f
(\(di\013eren)m(t\))i(probabilit)m(y)d(of)i(sa)m(ying)0
5389 y(that)34 b(y)m(ou)h(don't)g(\("negativ)m(e"\))f(if)g(y)m(ou)h
(don't.)49 b(Ideally)-8 b(,)34 b(w)m(e)h(w)m(ould)g(lik)m(e)f(b)s(oth)h
(of)g(these)h(n)m(um)m(b)s(ers)g(to)0 5489 y(b)s(e)42
b(high,)h(but)e(usually)g(it)g(is)g(a)g(trade-o\013)g(b)s(et)m(w)m(een)
i(the)f(t)m(w)m(o,)g(in)g(the)f(design)h(of)g(a)f(test.)67
b(Supp)s(ose)0 5588 y(that)44 b(for)h(a)f(giv)m(en)g(disease,)k(whic)m
(h)d(is)f(kno)m(wn)h(to)f(a\013ect)g(.03)g(of)h(the)f(p)s(opulation,)j
(a)d(test)g(will)g(b)s(e)0 5688 y(p)s(ositiv)m(e)32 b(.99)g(of)h(the)g
(time)f(if)h(y)m(ou)f(ha)m(v)m(e)h(the)g(disease,)g(and)h(will)d(b)s(e)
i(negativ)m(e)f(.98)g(of)h(the)g(time)f(if)h(y)m(ou)p
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 -116 a Ff(don't.)68 b(What)42
b(is)g(the)f(probabilit)m(y)g(that)g(y)m(ou)g(ha)m(v)m(e)h(the)g
(disease,)i(giv)m(en)p 2626 -100 227 4 v 42 w(that)d(y)m(ou)g(test)h(p)
s(ositiv)m(e?)0 -17 y(\(The)37 b(p)s(oin)m(t:)51 b(whether)38
b(y)m(ou)e(ha)m(v)m(e)h(the)g(diesease)h(is)f("unkno)m(wn";)i(w)m(e)e
(kno)m(w)g(the)g(test)f(result!\).)55 b(W)-8 b(e)0 83
y(can)33 b(mo)s(del)f(this)h(as)g(a)f(m)m(ulti-stage)h("trial":)42
b(\014rst)33 b(there)g(is)f(whether)i(or)e(not)h(y)m(ou)f(ha)m(v)m(e)h
(the)g(disease,)0 183 y(and)40 b(second)g(there)g(is)f(the)g(test.)62
b(W)-8 b(e)39 b(kno)m(w)g(the)g(probabilities)g(to)g(assign)g(to)f(eac)
m(h)i(branc)m(h)h(\(build)0 282 y(the)30 b(w)m(eigh)m(ted)h(tree!\),)f
(and)g(the)g(p)s(ossible)g(outcomes)h(\()p Fc(D)s(P)s(;)17
b(D)s(N)5 b(;)17 b(dP)s(;)g(dN)11 b Ff(\))27 b([)p Fc(d)i
Ff(=)h(no)g(disease],)h(and)g(w)m(e)0 382 y(compute)40
b Fc(P)14 b Ff(\()p Fc(D)s Fd(j)p Fc(P)g Ff(\))36 b(=)i
Fc(P)14 b Ff(\()p Fc(D)s(P)g Ff(\))p Fc(=)p Ff(\()p Fc(P)g
Ff(\()p Fd(f)p Fc(D)s(P)s(;)j(dP)d Fd(g)p Ff(\))33 b(=)38
b(\(\()p Fc(:)p Ff(03\)\()p Fc(:)p Ff(99\))p Fc(=)p Ff(\(\()p
Fc(:)p Ff(03\)\()p Fc(:)p Ff(99\))20 b(+)27 b(\()p Fc(:)p
Ff(97\)\()p Fc(:)p Ff(02\)\))34 b(=)k Fc(:)p Ff(604)0
481 y(.)70 b(So)42 b(a)f(p)s(ositiv)m(e)g(test)h(result)g(only)f(giv)m
(es)h(a)g(60\045)f(c)m(hance)i(of)f(ha)m(v)m(e)h(the)f(disease.)70
b(So)42 b(40\045)g(of)g(the)0 581 y(time)32 b(y)m(ou)g(test)g(p)s
(ositiv)m(e)g(but)g(do)h(not)f(ha)m(v)m(e)g(the)h(disease)g(\("false)f
(p)s(ositiv)m(e"\).)42 b(In)33 b(practice,)f(tests)h(are)0
681 y(usually)j(designs)i(to)e(minimze)h(false)g(negativ)m(es;)h(y)m
(ou)f(ha)m(v)m(e)g(the)g(disease)g(but)g(the)g(test)g(sa)m(ys)f(no.)55
b(In)0 780 y(this)33 b(instance,)h(the)g(false)f(negativ)m(e)g
(probabilit)m(y)g(\()p Fc(D)s Fd(j)p Fc(N)11 b Ff(\))32
b(is,)h(w)m(ell,)g(y)m(ou)g(compute)h(it!)0 940 y(Tw)m(o)g(ev)m(en)m
(ts)h Fc(A;)17 b(B)38 b Ff(are)c Fe(indep)-5 b(endent)33
b Ff(if)i(kno)m(wledge)f(of)g(one)h(do)s(esn't)f(e\013ect)h(the)g
(probabilit)m(y)e(of)i(the)0 1039 y(other,)e(i.e.,)f
Fc(P)14 b Ff(\()p Fc(A)p Fd(j)p Fc(B)5 b Ff(\))25 b(=)k
Fc(P)14 b Ff(\()p Fc(A)p Ff(\).)42 b(F)-8 b(rom)33 b(our)g(form)m(ula,)
g(this)f(w)m(orks)h(out)g(to)f Fc(P)14 b Ff(\()p Fc(A)21
b Fd(\\)g Fc(B)5 b Ff(\))27 b(=)h Fc(P)14 b Ff(\()p Fc(A)p
Ff(\))p Fc(P)g Ff(\()p Fc(B)5 b Ff(\).)0 1139 y(F)-8
b(or)34 b(example,)h(the)f(n)m(um)m(b)s(ers)j(that)d(come)h(up)g(on)g
(t)m(w)m(o)f(dice)h(when)h(w)m(e)f(roll)e(them)i(are)g(indep)s(enden)m
(t;)0 1239 y(kno)m(wing)e(one)h(do)s(esn't)f(let)g(us)h(predict)g(the)f
(other.)0 1458 y Fg(Exp)s(ected)k(V)-10 b(alue:)0 1617
y Ff(The)34 b(whole)g(idea)g(of)g(probabilit)m(y)f(is)h(to)g(predict)g
(the)g(lik)m(eliho)s(o)s(d)f(of)h(an)g(ev)m(en)m(t)g(o)m(v)m(er)g(a)g
(large)f(n)m(um)m(b)s(er)0 1717 y(of)d(trials.)42 b(If)30
b(the)h(outcomes)f(are)g(n)m(um)m(b)s(ers)i(\(think:)41
b(either)31 b(I)e(pa)m(y)h(y)m(ou)g(something)g(or)g(y)m(ou)g(pa)m(y)g
(me!\),)0 1816 y(then)42 b(w)m(e)g(can)g(\014nd)h(the)f(a)m(v)m(erage)f
(of)h(the)g(outcomes)g(o)m(v)m(er)g(a)f(large)g(n)m(um)m(b)s(er)i(of)f
(trials:)60 b(this)41 b(is)h(the)0 1916 y(exp)s(ected)34
b(v)-6 b(alue)33 b(of)h(the)g(trial)e(\(or)g(of)i(the)f(probabilit)m(y)
g(mo)s(del\).)0 2075 y(If)k(a)f(probabilit)m(y)f(mo)s(del)h(has)h(\(n)m
(umerical\))g(outcomes)f Fc(x)2216 2090 y Fb(1)2261 2075
y Fc(;)17 b(:)g(:)g(:)d(;)j(x)2540 2090 y Fa(k)2588 2075
y Ff(,)37 b(with)f(probabilities)g Fc(p)3507 2090 y Fb(1)3552
2075 y Fc(;)17 b(:)g(:)g(:)d(;)j(p)3824 2090 y Fa(k)3872
2075 y Ff(,)0 2175 y(then)34 b(the)g(exp)s(ected)g(v)-6
b(alue)33 b(of)g(the)h(mo)s(del,)f(whic)m(h)h(t)m(ypically)e(has)h(the)
h(unfortunate)g(name)g(of)g Fc(E)6 b Ff(,)32 b(is)1516
2275 y Fc(E)h Ff(=)28 b Fc(p)1778 2290 y Fb(1)1823 2275
y Fc(x)1880 2290 y Fb(1)1947 2275 y Ff(+)22 b Fd(\001)17
b(\001)g(\001)e Fc(p)2229 2290 y Fa(k)2278 2275 y Fc(x)2335
2290 y Fa(k)0 2374 y Ff(The)29 b(basic)g(idea)g(is)f(that)g(for)h(a)g
(large)f(n)m(um)m(b)s(er)i Fc(N)39 b Ff(of)29 b(trials,)g(eac)m(h)g
Fc(x)2565 2389 y Fa(i)2627 2374 y Ff(will)e(o)s(ccur)i(appro)m
(ximately)f Fc(N)11 b(p)3867 2389 y Fa(i)0 2474 y Ff(times;)40
b(if)f(w)m(e)f(a)m(v)m(erage)h(these)g(n)m(um)m(b)s(ers,)i(w)m(e)e
(will)e(b)s(e)h(adding)h Fc(N)49 b Ff(n)m(um)m(b)s(ers,)41
b Fc(N)11 b(p)3131 2489 y Fa(i)3202 2474 y Ff(of)39 b(whic)m(h)g(are)f
Fc(x)3839 2489 y Fa(i)3872 2474 y Ff(,)0 2574 y(and)c(dividing)e(b)m(y)
i Fc(N)11 b Ff(,)33 b(giving)595 2673 y(\(\()p Fc(N)11
b(p)814 2688 y Fb(1)859 2673 y Ff(\))p Fc(x)955 2688
y Fb(1)1021 2673 y Ff(+)23 b Fd(\001)17 b(\001)g(\001)e
Ff(\()p Fc(N)c(p)1434 2688 y Fa(k)1482 2673 y Ff(\))p
Fc(x)1578 2688 y Fa(k)1627 2673 y Ff(\)\))p Fc(=)-6 b(N)38
b Ff(=)29 b Fc(p)2023 2688 y Fb(1)2067 2673 y Fc(x)2124
2688 y Fb(1)2191 2673 y Ff(+)23 b Fd(\001)17 b(\001)g(\001)e
Fc(p)2474 2688 y Fa(k)2523 2673 y Fc(x)2580 2688 y Fa(k)2662
2673 y Ff(for)33 b(an)h(a)m(v)m(erage.)0 2833 y(As)i(a)f(motiv)-6
b(ational)34 b(example)i(for)g(what)g(comes)g(next,)g(think)g(of)g(a)f
(p)s(oll,)h(where)g(the)h(outcomes)f(are)0 2932 y(y)m(es,no.)73
b(Think)42 b(of)h(them)h(as)e(b)s(eing)h(1)g(and)g(0,)i(instead.)73
b(Then)43 b(if)g(80\045,)i(sa)m(y)-8 b(,)44 b(of)f(the)g(p)s(opulation)
0 3032 y(w)m(ould)33 b(answ)m(er)h(y)m(es,)e(then)i(if)f(w)m(e)g(mak)m
(e)f(asking)h(an)f(individual)h(a)f(trial,)f(the)i(probabilit)m(y)f(of)
h("y)m(es")g(is)0 3131 y(.8,)k(and)g(the)h(exp)s(ected)g(v)-6
b(alue)37 b(of)g(the)g(trial)f(is)h(.8)f(.)56 b(This)37
b(do)s(esn't)p 2241 3147 314 4 v 37 w(mean)g(that)g(for)g(a)g(large)f
(n)m(um)m(b)s(er)0 3231 y(of)i(trials)e(w)m(e)i(will)e(see)j(an)e(a)m
(v)m(erage)h(outcome)f(of)h(.8,)g(just)g(\(as)f(the)h(name)g(implies\))
f(that)g(w)m(e)h(exp)s(ect)0 3331 y(to!)43 b(Our)33 b(main)f(question,)
g(no)m(w,)h(is)f(to)g(decide)h("ho)m(w)f(often)h(will)e(a)h(large)g(n)m
(um)m(b)s(er)i(of)e(trials)f(result)i(in)0 3430 y(an)j(a)m(v)m(erage)g
(outcome)g(close)g(to)g(\(far)g(from?\))52 b(the)36 b(exp)s(ected)h(v)
-6 b(alue?")36 b(Or)g(put)g(sligh)m(tly)f(di\013eren)m(tly)-8
b(,)0 3530 y(ho)m(w)35 b(m)m(uc)m(h)h(can)f(w)m(e)g(trust)g(that)f(if)p
1271 3546 59 4 v 35 w(w)m(e)h(w)m(ere)g(to)f(run)i(a)e(large)g(n)m(um)m
(b)s(er)j(of)d(trials,)g(the)h(a)m(v)m(erage)g(v)-6 b(alue)0
3630 y(of)33 b(out)h(outcomes)f(w)m(ould)h(turn)g(out)f(to)g(b)s(e)g
(close)h(to)e(the)i(theoretical)f(exp)s(ected)h(v)-6
b(alue?)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
