%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: proj1b.dvi
%%CreationDate: Thu Feb 01 13:03:50 2001
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips proj1b
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.02.01:1303
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1100 600 600 (proj1b.dvi)
@start
%DVIPSBitmapFont: Fa cmbx10 11 1
/Fa 1 89 df<007FB6013FB512F0A5D8001F01C0D9003FC7FC6D5E6F147E6D6D5C6D4B5A
6D6D13036F5C6D6D495A027F4A5A6F131F6E01805B6E4AC8FCEEC07E6EEBE0FE6E6D5A6E
EBF1F8EEFBF06E13FF6E5C5F6F5B8181836F7F81836F7F5D834B7F4B7FED3FBF043F7FDB
7E1F7F4B7E0201814B6C7F4A486C7F4A487E020F814B6C7F4A48137F4AC77F4A6E7F027E
804A6E7F49488201036F7F4A8049488249486E7F011F81B600C0017F90B5FCA5483F7DBE
4F>88 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr10 11 52
/Fb 52 122 df<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383FF03FD907
F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01FE6D91C7
FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35>11
D<EC03FE91383FFF809138FE03E0903903F800F0D90FE013384948137C90393F8001FE90
387F00035B5BA2485A6F5AED007093C7FCAA16FEB7FCA33901FC000315011500B3AC486C
497EB5D8F87F13FCA32E407EBF33>I<14E0A4EB07FC90381FFF80017F13F03901FCE3F8
3903E0E07CD807C0131ED80F807FD81F00EB0780003E1403003C15C0007C1401A20078EC
0FE000F8141F153FA47EED1FC06CEC070092C7FC127F138013C0EA3FF013FEEA1FFF6C13
FE6C6D7E6C14E06C806C6C7F011F7F01037F01007F02E3138014E0ED7FC0153F151FED0F
E0A2003E1407127FEAFF801503A4130000FC15C000F01407127000781580150F6C15005D
6C143ED80F805B3907C0E1F83903F8E7F0C6B512C0013F90C7FCEB07F8EB00E0A423497B
C32E>36 D<14181438147014E0EB01C0EB03801307EB0F00131E133E133C5B13F85B1201
5B1203A2485AA2120F5BA2121F90C7FCA25AA2123EA2127EA5127C12FCB2127C127EA512
3EA2123FA27EA27F120FA27F1207A26C7EA212017F12007F13787F133E131E7FEB078013
03EB01C0EB00E0147014381418155A77C324>40 D<12C07E12707E7E7E120F6C7E6C7E7F
12016C7E7F1378137C133C133EA27FA21480130FA214C01307A214E0A21303A214F0A513
0114F8B214F01303A514E0A21307A214C0A2130F1480A2131F1400A2133EA2133C137C13
7813F85B485A12035B485A48C7FC120E5A5A5A5A5A155A7BC324>I<121EEA7F8012FF13
C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A120E5A121812381230
0B1C798919>44 D<B512FEA617067F961E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00
0A0A798919>I<16C0ED01E01503A216C01507A21680150FA216005DA2151E153EA25DA2
157815F8A25D1401A25D1403A25D1407A24A5AA292C7FC5CA2141E143EA2143C147CA214
7814F8A2495AA25C1303A25C1307A25C130FA291C8FC5BA2131E133EA25BA2137813F8A2
5B1201A25B1203A25B1207A2485AA290C9FC5AA2121E123EA2123C127CA2127812F8A25A
1260235B7BC32E>I<EB01FC90380FFF8090383F07E090387C01F03901F800FC4848137E
49133E48487F000F158049130F001F15C0A3003F15E0A290C712074815F0A54815F8B3A3
6C15F0A56C6CEB0FE0A4001F15C0A26C6CEB1F80A2000715006C6C133E6D137E6C6C5B6C
6C485A90383F07E090380FFF80D901FCC7FC253F7CBC2E>I<14E013011303130F133FEA
03FFB5FC13CFEAFC0F1200B3B3ACEB3FF8007FB512FCA31E3D78BC2E>I<EB0FF890383F
FF8090B512E03903F01FF03907C007FC48C66C7E001E6D7E001C6D1380003CEC7FC05A00
70EC3FE0A2B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF1600
4A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A495A495A49C71270133E133C
5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FCA3243D7BBC2E>I<000C1403
D80F80131F9038F801FE90B5FC5D5D15E05D92C7FC14FC380E7FE090C9FCACEB03FC9038
0FFF8090383C07E09038F001F8390FC000FC49137E90C7127F000E801680C8EA1FC0A216
E0150FA316F0A3120C127F7F12FFA416E090C7121F12FC007015C00078143F0038158000
3CEC7F007E15FE6C6C485A6C6C485A3903F01FE0C6B51280D93FFEC7FCEB0FF0243F7BBC
2E>53 D<EC1FE0EC7FFC903803F01F903907C0078090391F8003C0EB3F00017EEB0FE049
131F4848133F12035B120749EB1FC0000FEC0F80001F91C7FC5BA2123FA3485AA214FE90
3883FFC039FF8F03F090389C00F80198137C01B8137E01F07F491480ED1FC016E05BED0F
F0A35B16F8A4127FA6123F6D14F0A2121FED1FE0120F6D14C012076DEB3F800003EC7F00
6C6C137E6C6C5B90387F03F890383FFFE0010F5BD901FEC7FC253F7CBC2E>I<1238123C
123F90B612FEA316FC5A16F816F00078C812E000701401ED03C01680150748EC0F00151E
151C153CC85A157015F04A5A5D14034A5A92C7FC5C5C141E143EA25CA214FCA25C1301A2
1303A313075CA3130FA6131FAA6D5AEB038027407BBD2E>I<121EEA7F80A2EAFFC0A4EA
7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619>58
D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121E127FEAFF80A213C0A4127F121E
1200A412011380A3120313005A1206120E120C121C5A1230A20A3979A619>I<EB1FF890
B5FC3903E01FC0390F0007F0001EEB03F848EB01FC4814FE140000FE14FF7E7FA46CC7FC
123EC7EA01FEA2EC03FCEC07F815F0EC0FC0EC1F80EC3F00143E5C147814F85C13015CA2
495AA25CAB91C7FC90C8FCA8EB0780EB1FE0A2497EA46D5AA2EB078020407BBF2B>63
D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291380381FEA34AC6
7EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FCA24981913880
0001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2017882170F13
FCD803FE4B7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65
D<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007E03E9139FF8000F8D903FE
C7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A91C8120148481500120348
48167E5B000F173EA24848161EA2123F5B180E127FA349160012FFAC127F7F180EA2123F
A27F001F171E181C6C7EA20007173C6D16386C6C1678000117706C6C16F06EEC01E06D6C
15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600FF8013F891393FF007F002
0FB512C0020391C7FC9138003FF037427BBF42>67 D<B612F0A3C6EBF000EB3FC0B3B3B2
EBFFF0B612F0A31C3E7EBD21>73 D<B500C093387FFFE0A300016D9338FFF000D8007F18
C0D977F0ED01DFA3D973F8ED039FA3D971FCED071FA2D970FE150EA3027F151CA26E6C14
38A36E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB0380A36E6CEB0700A26E6C130EA303
7F5BA36F6C5AA26F6C5AA36F6C5AA2923807F1C0A3923803FB80A36FB4C7FCA26F5A13F8
487ED807FF027CEC7FF0B500F8033FB512E0A216384B3E7CBD54>77
D<D907FC131890391FFF8038017FEBE0783901FC03F83A03F0007CF8D807C0133F484813
0F001F140748C7FC003E1403007E1401A2007C140012FC1678A46C1538A27EA26C6C1400
7F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0010714F0EB
007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27EA3163E
7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F803F8090
391FFFFE00D8E00713F839C0007FC028427BBF33>83 D<003FB91280A3903AF0007FE001
018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00E0A5C816
00B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B600C090B512F8A3000101E0C7000713
0026007F80EC01FC715A1870B3B3A4013F16F06E5DA21701011F5E80010F15036E4A5A01
0793C7FC6D6C5C6D6C141E6D6C5C027F14F86E6C485A91390FF00FE00203B51280020049
C8FCED1FF03D407DBD44>I<B6013FB5D8C007B51280A3000301C0010001F0C7387FFC00
6C90C86C48EC1FF07148EC0FC06C1A07725D6E141F017F97C7FCA26E4A6C5C013F190EA2
EF77F86D6C60A2EFE3FC6D6C60A204017F6D6C02C15DA204037F6E028015F0010361A26E
903A07007F8001010161A2040EEB3FC06D6C4D5AA24CEB1FE0DA7F804CC8FCA2043C14F0
91263FC038010F130EA2047814F8DBE0700107131E021F171CA26F48903803FC3C020F17
38A2DBF1C0EB01FEDA07F95EA2DBFB80EB00FFDA03FF5EA36E90C86C5AA34B153F02005F
A24B151F037C93C9FCA20378810338150E59407EBD5E>87 D<B66C0103B51280A3000101
F0C8EBF8006C6C48ED3FC061013F041EC7FC6D7E606D6C15386D6C1578606D6C5D6E1401
6D5E6D6D1303606E6C49C8FC6E6C5B170E6E6C131E171C6E6C5B6E6C137817706E6C13F0
6F5B6E13016EEB83C05FED7FC7DB3FE7C9FC16EFED1FFE5E150F6F5AB3A4ED1FFC020FB5
12FCA3413E7FBD44>89 D<EB1FF03801FFFE3907E01F80390F000FE0391F8003F001C07F
486C6C7E6E7EA3157F6C5A0007C7FCC8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC
00EA07F0485A485A485A127F90C7FC160712FEA315FFA25C007F14BF14033A3F80071F8E
381FC00E3A0FF03C0FFC3A01FFF007F83A003FC001F0282A7CA82E>97
D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F09039FF
C000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217
E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC09026
C03FFFC7FCC7EA07F82D407EBE33>I<49B47E010713F090381F80FE90387E000F49EB1F
80D803F8133F4848EB7FC05B120F485AA24848EB3F80ED0E00007F91C7FCA290C9FC5AAB
6C7EA3003FEC01C07F001F14036C6C148015076C6C14006C6C5B6C6C131ED8007E5B9038
3F81F090380FFFC0010190C7FC222A7DA829>I<ED01FC15FFA3150715031501B114FF01
0713E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B12
7FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C
017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB03FC90380FFF80
90383E07E09038FC01F048486C7E48487F4848137E000F147F48487F16804848131FA212
7F16C090C7FCA25AA290B6FCA290C9FCA67EA27F123FED01C0A26C6C1303000F15806D13
076C6C14000003140E6C6C131ED8007E13786D485A90380FFFC0D901FEC7FC222A7DA829
>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137FEC00FE
01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<167C903907F8
03FF903A3FFF078F809039FC0FDE1F3901F003F83903E001F0000714F83B0FC000FC0600
001F6EC7FC49137E003F147FA8001F147E6D13FE000F5C6C6C485A00035C6D485A3907FC
0FC0260E3FFFC8FCEB07F8000CCAFC121CA2121EA2121FA26C7E90B512E015FC6CECFF80
6C816C15F05A3A0F80001FF848C7EA03FC003E1401481400167E5A163EA46C157E007C15
7C007E15FC6C4A5A6C6C495A6C6C495AD803F0EB1F80D800FE01FEC7FC90383FFFF80103
1380293D7DA82E>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E091
387803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F
13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA312
0712031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB00
781400AC147FEB7FFFA313017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F
01387C03F0381E07C0380FFF803801FC00185185BD1C>I<EA01FC12FFA3120712031201
B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F
4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F
7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201B3B3B1
487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F
03F0913B7803F03C01F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900
FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA34728
7DA74C>I<3901F801FE00FF903807FFC091381E07E091387803F000079038E001F82603
F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA7
33>I<49B4FC010F13E090383F01F890387C007C497F48487F4848EB0F804848EB07C000
0F15E04848EB03F0A2003F15F8A248C7EA01FCA44815FEA96C15FCA36D1303003F15F8A2
001F15F06C6CEB07E0A26C6CEB0FC06C6CEB1F806C6CEB3F00D8007C137C90383F01F890
380FFFE0010190C7FC272A7DA82E>I<3901FC03FC00FF90381FFF8091387C0FE09039FD
E003F03A07FFC001FC6C496C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8
AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC
780FC0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<02FF131C0107EBC0
3C90381F80F090397F00387C01FC131CD803F8130E4848EB0FFC150748481303121F485A
1501485AA448C7FCAA6C7EA36C7EA2001F14036C7E15076C6C130F6C7E6C6C133DD8007E
137990383F81F190380FFFC1903801FE0190C7FCAD4B7E92B512F8A32D3A7DA730>I<39
01F807E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF133049
1300A35BB3A5487EB512FEA31F287EA724>I<90383FC0603901FFF8E03807C03F381F00
0F003E1307003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C
13FE6C7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400
A27E15F07E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA8
24>I<131CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB315
70AA000014F06D13E0A290387F01C0133F90381F8380903807FF00EB01FC1C397EB724>
I<D801FC14FE00FF147FA3000714030003140100011400B3A51501A31503120015076DEB
06FF017E010E13806D4913FC90381FC078903807FFE00100903880FE002E297DA733>I<
B539E00FFFE0A32707FE000313006C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C
485AA2ECC007011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC78010113
70A2ECFEF001005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B53BC3FFFE03FF
F8A3290FFE003FF00013C06C48D91FC0EB3F806C4817006D010F141E00016F131C15076D
163C00004A6C1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE923870
7E03D90FE0017F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F010315CE9138
FB800F02FF14DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C023813003D28
7EA642>I<B539F01FFFE0A30003D9C00F1300C690388007F8D97F0013E002805BD93FC0
5B011F49C7FC90380FE00EECF01E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81141F81
4A7E81147BECF1FC903801E1FEECC0FF01037F49486C7ED90F007F011E6D7E013E130F49
6D7E01FC80486C80000F4A7EB539803FFFF8A32D277FA630>I<B539E00FFFE0A32707FE
000313006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FC
A26E5A010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E
5AA36EC8FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD8
7E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmbx10 15.84 22
/Fc 22 122 df<B712FEAD270D7EA232>45 D<ED7FFC0207B512C0023F14F891B612FE01
036F7E49D9F01F7F011FD9800313F049496C7FD97FFC6D6C7E49486E7EA248496E7E4849
6E1380A24818C04A804818E0A24818F0A34818F84A80A34818FCA7B517FEB3A66C18FCA6
6C18F8A26E5CA26C18F0A36C18E0A26C6D4A13C0A26C18806E5C6C18006C6D4A5A6E147F
6D6C4A5A6D6C495B6D6D485B0107D9F01F13C06D90B65A01004BC7FC023F14F8020714C0
9126007FFCC8FC3F577AD54C>48 D<ED03E04B7E151F153F15FF1407143F0107B5FC007F
B6FCB7FCA314CFEBF80FEA8000C7FCB3B3B3AB003FB812FCA6365675D54C>I<913807FF
E091B512FE0107ECFFC0011F15F8017F15FE90B8FC0003D9F00714C048D9800080D80FFC
C76C7F4848021F7FD83FFE6E7F6D824801C06D7F6E7F1980B56C7F19C082A219E0A3836C
5BA26C5B6C5B6C90C8FCD803FC92B5FCCAFC19C0A25E1980A24C1400A24C5BA24C5B604C
5B604C5B4C5B95C7FC4C5A4B13F84B5B4B5B17804B90C8FC4B5A4B5AED7FF04B5A4A49EB
07E04A5B4A48C7FC4A5A4A48EC0FC04A5A4A5AECFF8092C8FC4948151F495A4948ED3F80
D90FE0157F49B8FC5B5B90B9FC5A5A4818005A5A5A5ABAFCA260A43B5678D54C>I<9138
01FFFC021FEBFFE091B612FC010315FF4916C0011FD9807F13F090273FF8000F7FD97FC0
6D7F49C76C7F48486E7F2603FFC06D14806E16C04813F880487013E080A794B5FC6C4916
C0A26C5BC601E04914806D5A0104C7150090C85A604C5B604C5B4C5B4C138093B5C7FC03
0F13FC020FB512F04A14C08317FC6EECFF8091C76C13E0040F7F7013FC707F70EBFF8070
14C07113E0A219F07113F8A219FC831320D803FE17FE380FFF80487F487F487FA2B57EA5
19FCA25F4A16F87E4A4A13F06C5B4A16E06C48C8B512C0D80FF84A1480D807FE4A14006C
6C6C495B6C01F0495B6C01FF017F13F0013F90B612C0010F93C7FC010315FCD9007F14E0
020301FCC8FC3F577AD54C>I<94260FFFF015E00403B6EC01F0043F03E013070303B700
FC130F030F04FF131F033FEFC03F92B6D8800FEBE07F020302F0C7EBF8FF020F91C8EA1F
FD4A01FC0307B5FC027F01F0150191B500C081494A163F010749CA7E4949834949834949
83A249498390B548835A4B187F4891CCFC481B3FA24849191FA24849190FA35A4A1907A2
5AF403E099C7FCA25CB5FCB07E80A46CF301E0F403F0807EA36C6D1907A26C6D1AE01C0F
7E6C806FF01FC06C1B3F6D6D19806D6D187F6FF0FF006D4F5A6D6D17036D01FF4D5A0101
6E4C5A6D6E4C5A6E01F0EE7FE0021F01FC4B485A6ED9FF80020790C7FC020302F0EC3FFE
0200913AFF8007FFF8033F91B65A030F17C003034CC8FCDB003F15F8040315C0DC000F01
F8C9FC5C5C78DA6D>67 D<B76C073FB612E070617096B7FCA26582D800030CF8C7FC70F0
03EFA202FB6DF007CFA202F96DF00F8FA202F8F21F0F82A26F6D173EA26F6D177CA26F6D
17F8A26F6DEE01F0A36F6DEE03E0A26F6DEE07C0A26F6DEE0F80A26F6DEE1F00A3706D15
3EA2706D5DA2706D5DA2706D4A5AA3706D4A5AA2706D4A5AA2706D4A5AA2706D4AC7FCA3
716D133EA2716D5BA2716D5BA2716D485AA3716D485AA2716D485AA2716D485AA2716D48
C8FCA37213BEA27213FCA2725BA2725BA3725BA2725BA2D91FFF6F5BB700E00503B812E0
7290C7FCA3197E193C835A7AD990>77 D<BA12F8F1FFC01AFC1AFF1BC01BF0D8000391C7
000114FCDE001F7F07077F070114807314C07413E07413F01CF8861CFCA27413FEA41CFF
A91CFEA31CFC62A21CF85013F0A25013E097B512C04F148007071400071F5B4EB512F893
B812E06350C7FC1AF097C8FC0480CBFCB3B0B812FEA6585A7AD967>80
D<91380FFFF891B67E010715F0011F15FC017F15FF9026FFFC00804801E0011F13E0486D
01077F6E6D7F486D6D7FA2707F8483A285836C5BA2C613E06D5A011FC8FC90C9FCA34BB6
FC92B7FC140F91B8FC0103ECFE3F011F1480017FEBF80090B512C0000391C7FC4813FC48
5B485B485B5C5A5CB5FCA291C8FCA35FA26E91B5FCA26C6D5B5E6C6DD907EF7F6C6DD90F
CF13F06C6DD93FC7EBFFE06C9027FF01FF0714F06C9138FFFE03C64B7E013F9138F0007F
010702C0010F13E09026003FFECAFC443D7CBB49>97 D<ED7FFF0207B512F8023F14FE91
B77E010316E04982011FD9F8007F4901C08049EB00014948497F485B485B5A485BA2485B
A248496D5BA29338007FF048705AEF0F804A91C8FCA2B5FCAE6C7FA46C7F180F6CEF1F80
6E153F7E6EED7F007E6C6D15FE6E14016C6D4A5A6C02C0495A013F01F0EB1FF06D9039FE
01FFE06D90B65A01035E01004BC7FC023F14F8020714E09126007FFEC8FC393D7BBB43>
99 D<ED7FFE0207B512E0023F14FC91B7FC010382010FD9F80F13E049D9C0017F4990C7
7F4948EC3FFC49486E7E485B48496E7E487013805C4818C0484980A24818E083A2485B19
F0A3B5FCA291B8FCA419E00280CAFCA57EA3807EA36C6DED01E0F003F07E6E15076C18E0
6C6D150F6EED1FC06C6D153F6C6DED7F806D01C0903801FF006D01F0EB07FE010F01FEEB
7FFC6D90B65A010116E06D6C5D021F92C7FC020314F8DA001F13803C3D7CBB45>101
D<EB1FFEB5FCA61201EA007FB3A6EFFFF8040F13FF043F14C093B612F04B81030701037F
92260FF0007FDB1FC06D7E4B5A037EC76C7F5D5D6E486E7FA25DA25DA25DA392C8FCB3AE
B7D8803FB612E0A64B5B7BDA54>104 D<EB1FC0EB7FF0497E487F487F487FA2481480A7
6C1400A26C5B6C5B6C5B6D5AEB1FC090C8FCACEB0FFEEA7FFFA61201EA007FB3B3A9B612
FEA61F5C7BDB29>I<ED07F0ED1FFC4B7E4B7E92B512804A14C0A24A14E0A76E14C0A26E
14806F13006F5A6F5AED07F092C8FCAC923801FFE0021FB5FCA6EC001F8181B3B3B3A2EA
07F0EA1FFC487E487EA2B56C4813C0A317805D17004A485A6C5D49137F003F4A5A001F01
0313E06CB65A6C92C7FC00015C6C6C13F0010713802B7788DB2E>I<D91FFEECFFF8B502
0F13FF043F14C093B612F04B81030701037F92260FF0007F0001DA1FC06D7ED8007F495A
037EC76C7F5D5D6E486E7FA25DA25DA25DA392C8FCB3AEB7D8803FB612E0A64B3B7BBA54
>110 D<ED1FFF0203B512F8021F14FF027F15C049B712F00107D9F80313FC499039C000
7FFE013F90C7381FFF8049486E7FD9FFF802037F488448496E7F4A80488448496F7EA248
84A24819804A81A24819C0A4B518E0AC6C19C0A46C6D4B1380A36C1900A26C6D4B5AA26C
6D4A5B6C606C6D4A5B6C6D4A5B6DB4021F5B6D01C0017F5B6DD9F803B5C7FC6D90B65A01
0316F8010016E0021F92C8FC020314F8DA003F1380433D7CBB4C>I<D91FFCEB3FE0B590
3801FFF84B13FE030FEBFF804B14C0DB3FE313E0ED7F070001DAFE0F13F0D8007F13FCEC
FDF815F014FF15E0A24B6C13E0A24B6C13C004001300173C92C9FCA55CB3ABB712C0A634
3B7BBA3E>114 D<DAFFFE1370010F9038FFE1F8013F14FF90B7FC0003EBC007D807FCC7
FCD80FF0143F4848141F4848140F160748481403A212FF16017FA27F6D6E5A01FC92C7FC
13FF14F0ECFFC06C14FF16E06C15F816FE6C816C16C06C820001826C82013F81010F8113
01D9001F80EC007F1503DB007F1380161F0078150700FC81A26C81A2827EA26D16006D5C
A26D5D6D14036D4A5A6D4A5AD9FF80133F9139F001FFE091B65A019F5DD8FE074AC7FCD8
FC0114F02670001F90C8FC313D7BBB3C>I<EC1F80A6143FA4147FA314FFA25BA25BA25B
5B5B5B5B48B5FC000F91B512F0B8FCA5D8003F0180C7FCB3AB177EAA17FEA26F13FC6D14
0115E06DEC03F8EDF0076D9038FC1FF06D90B512E06D15C06D6C14806E1400020F13FC02
0013E02F547DD23B>I<D90FFF923803FFC0B6023FB5FCA60001EE007F6C6C161FB3B060
A360A295B5FCA26D5D6F5B6DED07EF6FD90FCF13F06D6DD93F8FEBFFE06D9039F801FF0F
6D90B512FE010015FC6E14F0020F14C00200D9FE0091C7FC4B3C7BBA54>I<B6D8FE03B6
D8C001B512FCA6C649C7000301E0C7000713006EF101FC6D6F6D5D6F18036D63717F6F49
16076D715D6F180F6D4B5F856F49161F6D715D6F183F6D4B94C7FC06CF7F6F011F5E6D72
137E6F028715FE6D033F5E06037F6F017F15016E05F05B9326807E0114036E02FE5E4D6C
13F804C116076E05FC5BDCE1F8017F130F6E01E35F4DEB3FFE04F7161F6E61DCFFE09038
1FFF3F6E96C8FC4D6D13BF1BFF6E604D7F6E6094C77EA26F5F4C80033F5F4C80A2031F5F
4C157F030F5F4C153FA2DB03E06FC9FC663B7DB96D>119 D<007FB6021FB5FCA6C66C01
80020113C09538007F006D6D157E19FE6D6D5D18016D6D5D18036D5F6F14076D5F6F140F
6D5F6F141F6D5F6F143FA26E6D49C7FCA26E6D13FEA26E6D5B17016E01F05B17036E5DEE
F8076E5DEEFC0F6E5DEEFE1F6E5DEEFF3FA26F01FFC8FCA26F5BA26F5BA26F5BA26F5BA2
6F5BA26F5BA26F5BA370C9FCA216FEA25E15015ED807E01303D81FF85C486C1307486C5C
150FB55C151F5E153F4BCAFC15FEEBFE01007F495A49485A393FB80FF09038E07FE06CB5
5A6C91CBFC00035B6C13F838003FC048557DB950>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 1247 91 a Fc(Math)50 b(203)g(-)h(Pro)8 b(ject)51
b(1)979 272 y(Circuits)i(with)e(one-w)l(a)l(y)g(streets)183
491 y Fb(In)32 b(this)e(pro)5 b(ject)31 b(y)m(ou)h(will)e(solv)m(e)i(a)
g(problem)e(in)m(v)m(olving)g(circuits)g(in)h(a)h(graph,)f(where)g(y)m
(ou)i(will)d(need)h(to)0 601 y(deal)c(with)g(the)g(fact)g(that)g(some)h
(edges)f(can)g(b)s(e)g(tra)m(v)m(ersed)h(only)f(in)h(one)f(direction.)
37 b(The)27 b(sp)s(eci\014c)f(problem)g(is:)183 765 y(In)34
b(an)f(e\013ort)g(to)h(raise)e(enough)h(cash)g(to)g(pa)m(y)h(for)g(y)m
(our)g(Con)m(temp)s(orary)e(Mathematics)e(textb)s(o)s(ok,)j(y)m(ou)0
875 y(ha)m(v)m(e)28 b(agreed)f(to)g(deliv)m(er)f(telephone)f(b)s(o)s
(oks)i(in)g(the)g(5)h(blo)s(c)m(k)f(square)g(neigh)m(b)s(orho)s(o)s(d)d
(of)k(y)m(our)g(home,)g(pictured)0 984 y(b)s(elo)m(w.)69
b(Streets)38 b(that)h(are)g(not)g(mark)m(ed)h(as)g(one-w)m(a)m(y)h(are)
e(t)m(w)m(o-w)m(a)m(y)i(streets.)69 b(The)40 b(phone)e(compan)m(y)i
(will)0 1094 y(pa)m(y)31 b(y)m(ou)g($70)f(to)g(deliv)m(er)f(phoneb)s(o)
s(oks)f(to)i(ev)m(ery)h(home)f(and)g(business)f(along)g(these)h
(streets.)40 b(Y)-8 b(our)31 b(y)m(ounger)0 1204 y(brother)g(has)i
(agreed)e(\(for)i($20\))f(to)g(ride)g(along)f(in)i(the)f(bac)m(k)h(of)g
(y)m(our)g(truc)m(k,)h(and)f(put)f(the)g(phoneb)s(o)s(oks)f(on)0
1313 y(the)e(fron)m(t)h(step)f(of)h(eac)m(h)g(building,)d(as)j(y)m(ou)h
(driv)m(e)e(do)m(wn)h(eac)m(h)g(street.)183 1450 y(Use)39
b(the)f(tec)m(hniques)e(w)m(e)j(ha)m(v)m(e)g(dev)m(elop)s(ed)e(in)h
(class)f(to)i(\014nd)f(the)g(b)s(est)f(route)g(to)i(tak)m(e,)i
(starting)36 b(and)0 1560 y(ending)28 b(at)i(y)m(our)g(home)g(\(mark)m
(ed)f(with)g(an)h Fa(X)p Fb(\).)960 3686 y @beginspecial
17 @llx 170 @lly 595 @urx 748 @ury 2160 @rwi @setspecial
%%BeginDocument: proj1b-7.ai
%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 8
%%For: (Mark Brittenham) (me)
%%Title: (proj1b-7.ai)
%%CreationDate: (2/1/2001) (10:25 AM)
%%BoundingBox: 17 170 595 748
%%HiResBoundingBox: 17 170 595 748
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Black&White
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 18 16 594 778
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -145 807 1 1087 994 18 0 1 254 79 1 1
%AI5_OpenViewLayers: 7
%%PageOrigin:18 16
%%AI3_PaperRect:-18 778 594 -14
%%AI3_Margin:18 -15 -18 14
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 128 8
%%BeginData: 16016 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C457D7DFFA87DA8FF7DA8FFFF52FFFF7D7DFFA87DA8FF7D7DFFFF52A8
%FFA852FFFF7DA8FFA87DFFFF52A8FFA852FFFF7D7DFFA87DA8FF7D7DFFFF
%52FFFFA852FFA87DA8FFA87DFFFF52A8FFA852FFFF7DA8FFA87DA8FF527D
%FFFF52FFFFA87DFFA87DA8FF7DA8FFFF52A8FFA852FFFF7DA8FFA87DFFFF
%52A8FFA852FFFF7D7DFF52FD7FFF7D7DFD7FFF52FDFCFFFFFF52A8FD7FFF
%7DFD7FFF7DFD7EFF7DFD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFD07FF
%A8FD10EFFD07FFA8FD10EFFD07FF7D7DFD07FFEFEFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFFA8FD04FF
%7DFD07FFFD10EFFD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFFFFFF52A8
%FFFFFFFD10EFFFFFFF277DFFFFA8FD08FFEFEBEFEFEFEBEFEFEFEBEFEFEF
%EBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEB
%EFEFFFFFFF7D7DFFFFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFF7D52
%27FFFF7DFD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFFFF
%FF52A8FFFFFFFD10EFFFFF5252527DFFA852FD07FFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07
%FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBEFEFFFFFFF7D7DFFFFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%FFA8277D7D27FFFFA8FD07FFFD10EFFD08FFFD10EFFD08FFFD10EFFD07FF
%A8FD10EFFFFFFF52A8FFFFA8FD10EFFFA8FF52A8A8FF7DFD08FFEFEFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%EFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBFFFFFF527DFFFFFFEFEFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBFFFFFF527DFFFF7DA8FD07FFFD10EFFD08FFFD10EFFD08FFFD
%10EFFD07FFA8FD10EFFFFFFF52A8FFFFA8FD10EFFFFFFF52A8FFFFFF52FD
%07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEB
%EFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08
%FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF7D7DFFFFFFEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBFFFFFF7D7DFFFFA8FD08FFFD10EFFD08FFFD10
%EFFD08FFFD10EFFD08FFFD10EFFF7D7D52A827FFFFFD10EFFFFFFF52A8FF
%FF52FD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFF87D5252FFFFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFA87DFD07FFFD10EFFD
%08FFFD10EFFD08FFFD10EFFD08FFFD10EFFFFFA82727A8FFFFFD10EFFFFF
%FF52A8FFFFFF7DFD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FF
%EFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF2752
%FFFFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFF7DFD08FF
%FD10EFFD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFFFFFF7DFFFFFFA8
%FD10EFFFFFFF52A8FFFF527DFD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEF
%EBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEB
%FD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FF7DFD07FFFD10EFFD
%08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFD07FFA8FD10EFFD08FFA8FD
%7EFF7DFD7FFFA87DFD7FFF7DFD7EFFA8FD7FFF7DFD80FF52FD87FFFD10EF
%FD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFD07FFA8FD10EFFD07FF52
%FD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD
%08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBFFFFFFA8FFFFFFA87DFD07FFFD10EFFD08FFFD10EFFD08
%FFFD10EFFD08FFFD10EFFFFFFF52A8FFFFFFFD10EFFFFFFFF87DFFFFFF7D
%FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFD
%08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFFEFEBEFEF
%EFEBEFEFEFEBEFEFEFEBEFEFFFFF7D5227FFFFA8FD08FFFD10EFFD08FFFD
%10EFFD08FFFD10EFFD08FFFD10EFFFFFFF52A8FFFFFFFD10EFFFFF275252
%7DFF52A8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEF
%EBEFEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFF
%EFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFF7D527D7D27FFFF7DFD07FFFD10
%EFFD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFFFFFF52A8FFFFA8FD10
%EFFFA8FF52A8A8FFFFA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8
%FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFF
%FF527DFFFFFFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF527DFFFF52
%FD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFFFFFF52A8
%FFFFA8FD10EFFFFFFF52A8FFFF7D7DFD07FFEFEFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEF
%EFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBFFFFA87D7DFFFFFFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF
%7D7DFFFFFF7DFD07FFFD10EFFD08FFFD10EFFD08FFFD10EFFD08FFFD10EF
%FF7D7D52A827FFFFFD10EFFFFFFF52A8FFFFA8FD08FFEFEBEFEFEFEBEFEF
%EFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD
%07FFEFEBEFEFEFEB7DEFEF7DEFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFFFFFF87D5252FFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFFFFFFF7D7DFFFF7DFD08FFFD10EFFD08FFFD10EFFD08FFFD05EF7D2752
%7DF8A8FD05EFFD08FFFD10EFFFFFA82727A8FFFFFD10EFFFFFFF52A8FFFF
%A852FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEB5227F852EFEFEFEBEF
%EFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF2752FFFFFFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFFA8FD07FFFD10EFFD
%08FFFD10EFFD08FFFD06EF7DF82752FD06EFFD07FFA8FD10EFFFFFFF7DFF
%FFFFA8FD10EFFFFFFF52A8FFFF7DFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEF
%EBEF7DF87D52277DEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%EFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD07FF7DA8FD07FFFD
%10EFFD08FFFD10EFFD08FFFD05EFFD047D52A8FD05EFFD07FFA8FD10EFFD
%07FFA8FD10EFFD08FF52FD0DFFA8FD17FFA8FD46FFA8FD11FFA8FD0CFF7D
%27A8FD14FFA85227FD15FFA85227FD15FFA85227FD15FFA82752FD11FF52
%FD0AFF522727A87DA87DA87DA87DA8A8FD0AFFA8272752A87DA87DA87DA8
%7DA8A8FD0AFFA8272752A87DA87DA87DA87DA8FD0BFFA8272752A87DA87D
%A87DA87DA8FD0BFFA8275252A87DA87DA87DA87DA8FD0AFF7DFD08FFA852
%277D527D527D527D527D52FD0BFFA852277D527D527D527D527D52FD0BFF
%A852527D527D527D527D527D52FD0BFFA852277D527D527D527D527D52FD
%0BFFA852277D527D527D527D527D52FD0AFF7DFD0BFF5227A8FD15FF5227
%A8FD14FFA82752A8FD14FFA82752A8FD14FFA82752FD11FF7DFD0DFFA8FD
%17FFA8FD17FFA8FD17FFA8FD17FFA8FD11FF7D7DFD7FFF7DFD07FFFD10EF
%FD08FFFD28EFFD07FFA8FD10EFFD07FFA8FD10EFFD07FFA8FD08FFEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEBEFEFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFFD08FF
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBFFFFFFA8A8FFFF7DFD08FFFD10EFFD08FFFD28EFFD08FFFD10
%EFFFFFFF52A8FFFFFFFD10EFFFFFFFF87DFFFFA852FD07FFEFEBEFEFEFEB
%EFEFEFEBEFEFEFEBEFEFA8FD07FFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFFD08FFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFFFFF7D7D27FFFFFFA8FD07FFFD10EFFD08FFFD28EFFD08
%FFFD10EFFFFFFF52A8FFFFFFFD10EFFFFF27527D52FF7DFD08FFEFEBEFEF
%EFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEFEBEFEFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFFD08FFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFFF7D527D7D27FF7DA8FD07FFFD10EFFD08FFFD28EF
%FD07FFA8FD10EFFFFFFF52A8FFFFA8FD10EFFFFFFF52A8A8FFFF52FD07FF
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEBEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEF
%FD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF527DFFFFFFEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF527DFFFFA8FD08FFFD10EFFD08FF
%FD28EFFD07FFA8FD10EFFFFFFF52A8FFFFA8FD10EFFFFFFF52A8FFFF52FD
%08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEBEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFA87D7DFFFFFFEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF7D7DFFFFA87DFD07FFFD10EF
%FD08FFFD28EFFD08FFFD10EFFF7D5252A827FFFFFD10EFFFFFFF52A8FFFF
%FF7DFD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEFEBEFEF
%EFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFF277D2752
%FFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFA8FD08FFFD
%10EFFD08FFFD28EFFD08FFFD10EFFFFFA85227FFFFFFFD10EFFFFFFF52A8
%FFFF52A8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%EFEBEFEFEFEBEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF27
%52FFFFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFF7DFD
%07FFFD10EFFD08FFFD28EFFD07FFA8FD10EFFFFFFFA8FFFFFFA8FD10EFFD
%08FFA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEBEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFEFFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEF
%EFEBEFEFEFEBEFEFEFEBEFEFEFEBFD07FF52FD7FFFA87DFD11FFA8FD17FF
%A8FD17FFA8FD17FFA8FD17FFA8FD0DFF7DFD11FF5227A8FD14FFA85227A8
%FD14FFA85227A8FD14FFA85252FD15FFA85252FD0BFFA8FD0AFF527D5252
%527D5252527D27277DFD0BFF527D5252527D5252527D27277DFD0BFF527D
%5252527D5252527D2727A8FD0AFFA8527D5252527DFD04522752A8FD0AFF
%A8527D5252527DFD04522752A8FD08FF7DFD0AFFFD09A87D5227A8FD0BFF
%FD09A87D5252FD0CFFFD09A87D5252FD0CFFFD09A87D5252FD0CFFFD09A8
%522752FD0AFF52FD11FF27277DFD14FFA82752A8FD14FFA82752A8FD14FF
%A82752A8FD14FFA8F87DA8FD1DFFA8FD6CFF52FD08FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD
%07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD09FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FD09FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08FFA8A8FD07
%FFFD10EFFD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFD07FFA8FD10EF
%FD08FF7DFD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFFA8A8FFFFFF
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF7DA8FFFFA8FD08FFFD10EF
%FD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFFFFFF52A8FFFFFFFD10EFFF
%FFFFF87DFFFF52A8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07
%FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D
%7DFFFFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFF7D7DF8FFFFFF7DFD
%07FFFD10EFFD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFFFFFF52A8FFFF
%FFFD10EFFFFF27527D52FFFF7DFD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEB
%EFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEF
%EFEBEFEFEFEBEFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFFFFFFF7D7DFFFFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFF7D527D7D
%27FF7DFD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFFFF
%FF52A8FFFFA8FD10EFFFFFFF52A8FFFF7D7DFD07FFEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07
%FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEF
%EFEBEFEFEFEBFFFFFF527DFFFFFFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEB
%FFFFFF527DFFFFFF7DFD07FFFD10EFFD08FFFD10EFFD08FFFD10EFFD07FF
%A8FD10EFFFFFFF52A8FFFFA8FD10EFFFFFFF52A8FFFFA8FD08FFEFEFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%EFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBFFFFA87D7DFFA8FFEFEFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBFFFFFF7D7DFFFF7DFD08FFFD10EFFD08FFFD10EFFD08FFFD10
%EFFD08FFFD10EFFF7D5252A827FFFFFD10EFFFFFFF52A8FFFFA852FD07FF
%EFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFD08FFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFF277D2752FFFFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFFA8FD07FFFD10EFFD08FFFD10EF
%FD08FFFD10EFFD08FFFD10EFFFFFA85227FFFFFFFD10EFFFFFFF52A8FFFF
%7DFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEB
%EFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%FD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF2752FFFFFFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFF7DA8FD07FFFD10EFFD08
%FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFFFFFFA8FFFFFFA8FD10EFFD08
%FF52FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEF
%EFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEF
%EBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBFD07FFA8FD7FFF52FD7FFFA87DFD7FFF7DFD7EFF7D
%FD7FFF7D7DFD7FFF7DFD7EFFA8FD08FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD07FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FD09FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD
%09FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08FF52FD08FFFD10EFFD08FF
%FD10EFFD08FFFD10EFFD07FFA8FD10EFFD07FFA8FD10EFFD07FFA852FD07
%FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FF
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFFA8A8FFFFFFEFEFEFEBEFEF
%EFEBEFEFEFEBEFEFEFEBFFFFFF7DA8FFFFFF7DFD07FFFD10EFFD08FFFD10
%EFFD08FFFD10EFFD08FFFD10EFFFFFFF52A8FFFFFFFD10EFFFFFFFF87DFF
%FFA8FD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7DFFFFFFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFF527DF8FFFF7DA8FD07FFFD10EFFD
%08FFFD10EFFD08FFFD10EFFD08FFFD10EFFFFFFF52A8FFFFFFFD10EFFFFF
%27527D52FFFF52FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FF
%EFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFFFF7D7D
%FFFFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFFFD047D27FD0AFFFD10EF
%FD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFFFFFF52A8FFFFA8FD10EF
%FFFFFF52A8FFFF52FD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07
%FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF52
%7DFFFFFFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF527DFFFFA8A8FD
%07FFFD10EFFD08FFFD10EFFD08FFFD10EFFD07FFA8FD10EFFFFFFF52A8FF
%FFA8FD10EFFFFFFF52A8FFFFFF7DFD07FFEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%EFEBFFFFA87D7DA8A8FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFFFFFF7D
%7DFFFFA8FD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFD08FFFD10EFFF7D
%5252A827FFFFFD10EFFFFFFF52A8FFFF52A8FD07FFEFEBEFEFEFEBEFEFEF
%EBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFA8FD07
%FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFD08FFEFEBEFEFEFEBEFEFEFEB
%EFEFEFEBEFEFFFFF277D2752FFFFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEF
%FFFFFF7D7DFFFFFF7DFD07FFFD10EFFD08FFFD10EFFD08FFFD10EFFD08FF
%FD10EFFFFFA85227FFFFFFFD10EFFFFFFF52A8FFFFFFA8FD07FFEFEBEFEF
%EFEBEFEFEFEBEFEFEFEBEFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEB
%EFEFA8FD07FFEFEBEFEFEFEBEFEFEFEBEFEFEFEBEFEFFD08FFEFEBEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFFFFFFF2752FFFFFFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBEFEFFFFFFF7D7DFFFF7DFD08FFFD10EFFD08FFFD10EFFD08FFFD10
%EFFD07FFA8FD10EFFFFFFFA8FFFFFFA8FD10EFFD07FF7D7DFD07FFEFEFEF
%EBEFEFEFEBEFEFEFEBEFEFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEF
%EFEFEBA8FD07FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEB
%EFEFEFEBEFEFEFEBEFEFEFEBFD08FFEFEFEFEBEFEFEFEBEFEFEFEBEFEFEF
%EBFD08FFA8FD7EFFA8FD7FFF7DFD7FFFA852FDFCFFFFFF52FD7FFF7D7DFD
%7FFF52FF7D52FFFF52A8FFA852FFFF7D7DFF7D7DFFFF52A8FFA852FFFF7D
%7DFFA852A8FF7D7DFFFF52A8FF7D52FFA87D7DFF7D7DFFFF52A8FFA852FF
%FF527DFF7D52A8FF527DFFFF52A8FF7D7DFFA87DA8FF7D7DFFA852A8FF7D
%52FFFF527DFF7D52FFFF52A8FFA852FFFF7D7DFF7D7DA8FF7D7DFFA852FF
%FF7D7DFFA852A8FF7D52
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 XR
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 XR
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
0 XR
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_Bs
0 0.275 1 0.12 1 50 59 %_Bs
0 0.275 1 0.42 1 50 50 %_Bs
1 0 50 49 %_Bs
1 0 50 41 %_Bs
1 0.3 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0) Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0) Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0) Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0) Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0) Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0) Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0) Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0) Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 O
0.72 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
54.0005 387 m
126.0005 387 l
126.0005 315 l
54.0005 315 l
54.0005 387 l
f
161.9995 711.0005 m
233.9995 711.0005 l
233.9995 639.0005 l
161.9995 639.0005 l
161.9995 711.0005 l
f
161.9995 279 m
233.9985 279 l
233.9985 207.002 l
161.9995 207.002 l
161.9995 279 l
f
161.9995 387 m
233.9985 387 l
233.9985 315.002 l
161.9995 315.002 l
161.9995 387 l
f
162.0005 603.0005 m
233.9995 603.0005 l
233.9995 531.0005 l
162.0005 531.0005 l
162.0005 603.0005 l
f
54.0005 279 m
125.9995 279 l
125.9995 207.002 l
54.0005 207.002 l
54.0005 279 l
f
53.9995 602.9995 m
125.9985 602.9995 l
125.9985 531.0005 l
53.9995 531.0005 l
53.9995 602.9995 l
f
53.9995 495.0005 m
125.9985 495.0005 l
125.9985 423.0015 l
53.9995 423.0015 l
53.9995 495.0005 l
f
53.9995 710.9995 m
125.9985 710.9995 l
125.9985 639.0005 l
53.9995 639.0005 l
53.9995 710.9995 l
f
270.0015 386.998 m
342.002 386.998 l
342.002 314.998 l
270.0015 314.998 l
270.0015 386.998 l
f
378 710.9985 m
450 710.9985 l
450 638.9985 l
378 638.9985 l
378 710.9985 l
f
378.002 494.9985 m
450 494.9985 l
450 422.9985 l
378.002 422.9985 l
378.002 494.9985 l
f
378 278.998 m
450 278.998 l
450 207 l
378 207 l
378 278.998 l
f
378 386.998 m
450 386.998 l
450 315 l
378 315 l
378 386.998 l
f
378.002 602.9985 m
450 602.9985 l
450 530.9985 l
378.002 530.9985 l
378.002 602.9985 l
f
270.0015 278.998 m
342 278.998 l
342 207 l
270.0015 207 l
270.0015 278.998 l
f
270.0005 602.9985 m
342 602.9985 l
342 530.9985 l
270.0005 530.9985 l
270.0005 602.9985 l
f
270.0005 710.9985 m
342 710.9985 l
342 638.9985 l
270.0005 638.9985 l
270.0005 710.9985 l
f
162.0005 494.9995 m
342 494.9995 l
342 422.9995 l
162.0005 422.9995 l
162.0005 494.9995 l
f
486 710.9985 m
558 710.9985 l
558 638.9985 l
486 638.9985 l
486 710.9985 l
f
486.002 494.9985 m
558 494.9985 l
558 422.9985 l
486.002 422.9985 l
486.002 494.9985 l
f
486 278.998 m
558 278.998 l
558 207 l
486 207 l
486 278.998 l
f
486 386.998 m
558 386.998 l
558 315 l
486 315 l
486 386.998 l
f
486.002 602.9985 m
558 602.9985 l
558 530.9985 l
486.002 530.9985 l
486.002 602.9985 l
f
0 R
0 G
2 w [6 10 ]0 d
18 747 m
594 747 l
594 171 l
18 171 l
18 747 l
s
0 0 0 XA
[]0 d
315 548.9995 m
297.0005 530.9995 l
S
297.0005 548.9995 m
315 530.9995 l
S
1 w
297 549 m
315 549 l
315 531 l
297 531 l
297 549 l
s
0 G
2 w
63.0005 404.9995 m
108.0005 404.9995 l
S
99 414 m
117 405 l
99 396 l
S
171 404.9995 m
216 404.9995 l
S
206.999 414 m
224.999 405 l
206.999 396.0005 l
S
279.001 404.9995 m
324.001 404.9995 l
S
315 414 m
333 405 l
315 396.0005 l
S
387 404.9995 m
432 404.9995 l
S
423 414 m
441 405 l
423 396.0005 l
S
495 404.9995 m
540 404.9995 l
S
531 414 m
549 405 l
531 396.0005 l
S
549 512.9995 m
504 512.9995 l
S
513 521.9995 m
495 512.9995 l
513 503.9995 l
S
441 512.9995 m
396 512.9995 l
S
405 521.9995 m
387 512.9995 l
405 504 l
S
333 513 m
288 513 l
S
297 522 m
279 513 l
297 504.0005 l
S
224.9995 512.9995 m
180 512.9995 l
S
189 521.9995 m
171 512.9995 l
189 504 l
S
117 512.9995 m
72.0005 512.9995 l
S
81.0005 521.9995 m
63.0005 512.9995 l
81.0005 504 l
S
576 647.9995 m
576 692.9995 l
S
567 683.9995 m
576 701.9995 l
585 683.9995 l
S
576 540 m
576 584.9995 l
S
567 575.9995 m
576 593.9995 l
585 575.9995 l
S
576 432.0005 m
576 477 l
S
567 468 m
576 486 l
585 468 l
S
576 324 m
576 369 l
S
567 360 m
576 378 l
585 360 l
S
576 216 m
576 261 l
S
567 252 m
576 270 l
585 252 l
S
468 701.9995 m
468 656.9995 l
S
459 665.9995 m
468 647.9995 l
477 665.9995 l
S
468 593.9995 m
468 549 l
S
459 558 m
468 540 l
477 558 l
S
468 486 m
468 441.0005 l
S
459 450.0005 m
468 432.0005 l
477 450.0005 l
S
468 378 m
468 333 l
S
459 342 m
468 324 l
477 342 l
S
468 270 m
468 225 l
S
459 234 m
468 216 l
477 234 l
S
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 183 3823 a(If)i(eac)m(h)g(blo)s(c)m(k)f(is)i(1/10th)d(of)j
(a)f(mile)f(long,)i(and)e(y)m(ou)i(can)f(manage)f(to)h(driv)m(e)g(do)m
(wn)g(eac)m(h)g(street)f(at)h(one)0 3933 y(mile)26 b(p)s(er)h(hour)g
(\(giv)m(en)f(the)h(time)f(it)h(tak)m(es)h(for)f(y)m(our)h(brother)d
(to)i(hop)h(in)f(and)g(out)f(of)i(the)f(truc)m(k\),)g(w)m(ould)g(y)m
(our)0 4042 y(time)32 b(b)s(e)f(b)s(etter)f(sp)s(en)m(t)i(deliv)m
(ering)e(these)h(phoneb)s(o)s(oks,)g(or)h(w)m(orking)g(at)g(the)g(lo)s
(cal)e(burger)h(join)m(t)h(for)g($6)g(p)s(er)0 4152 y(hour?)55
b(If)35 b(the)f(phone)g(compan)m(y)h(had)f(done)g(the)h(same)f
(calculation)d(as)k(y)m(ou)h(ha)m(v)m(e,)h(ho)m(w)e(m)m(uc)m(h)h(w)m
(ould)e(they)0 4261 y(ha)m(v)m(e)d(o\013ered)e(y)m(ou,)h(to)g(matc)m(h)
g(the)f(amoun)m(t)g(of)h(money)g(y)m(ou)g(could)f(mak)m(e)h(at)g(the)f
(burger)g(join)m(t?)183 4480 y(When)g(y)m(ou)i(write)d(up)i(the)f
(results)g(of)h(y)m(our)g(in)m(v)m(estigations,)d(b)s(e)j(sure)f(to)h
(include:)0 4617 y(A)h(clear)d(statemen)m(t)h(of)h(the)f(problem)f(and)
i(description)c(of)k(its)g(translation)c(in)m(to)j(the)h(language)d(of)
j(graphs;)0 4754 y(A)h(clear)d(description)f(of)j(the)f(steps)g(y)m(ou)
i(go)f(through)e(to)i(\014nd)f(y)m(our)i(route)d(and)i(reac)m(h)f(y)m
(our)h(conclusions;)0 4891 y(A)f(carefully)d(dra)m(wn)i(\014gure)g(sho)
m(wing)f(the)g(route)h(that)f(y)m(ou)i(w)m(ould)e(prop)s(ose)g(to)h
(follo)m(w)f(to)h(deliv)m(er)f(the)g(phone-)0 5001 y(b)s(o)s(oks.)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
