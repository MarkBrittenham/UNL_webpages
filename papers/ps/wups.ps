%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: p18-2.dvi
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: /usr/apps/tex/bin/dvips -o p18-2.ps p18-2.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1995.10.25:1817
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1200 600 600 (p18-2.dvi)
@start /Fa 7 58 df<49B47E010F13F0017F13FE90B6FC48018113803A03FE007FC048
48EB3FE04848EB1FF049130F001F15F8A2003F15FC491307007F15FEA500FF15FFB1007F
15FEA5003F15FC6D130FA2001F15F8A26C6CEB1FF06C6CEB3FE06C6CEB7FC09038FF81FF
C690B512006D5B011F13F80101138028357CB331>48 D<141E147EEB01FE130713FFB5FC
A3130F1200B3B3A3007FB612C0A4223479B331>I<903803FFC0011F13F8017F13FF2601
FF0713802603F80113C02607E00013E0ED7FF0EA0FF86D14F8487EA516F06C4813FF6C5A
6C4814E0C74813C04A13804A1300EC1FFE90380FFFF85D8115FFD9000713C0020013E0ED
7FF016F8ED3FFCA2ED1FFEA2D80F8014FFEA3FE0487EA2487EA316FEA249133F007F15FC
49EB7FF86C5AD81FF0EBFFF0260FFE0713C06CB612800001ECFE006C6C13F80107138028
357CB331>51 D<EC1FFC91B5FC010714C090390FFC0FE090393FE003F090397FC001F890
38FF8007489038000FFC4848131F485A120FA2485AA2003FEC0FF8ED07F0484890C7FCA2
1404EC7FF839FFF1FFFE01F3EBFF8001F714C09039FF807FE09138003FF049EB1FF84914
FC150F4914FEA34914FFA4127FA4123FA26D14FE121F16FC000F141F6C6C14F86DEB3FF0
6C6CEB7FE06C9038C1FFC06C90B51280013FEBFE00010F5B010113C028357CB331>54
D<121F7F13F090B712C0A35A178017005E5E5E5E485D007EC7EA1FC04B5A007C92C7FC5D
15FE48495A4A5A4A5AC7485AA24A5A4A5AA2147F4AC8FCA25B5C1303A31307A25C130FA5
131FA96D5A6D5A6D5A2A377BB531>I<903801FFC0011F13FC4913FFD9FF0113803A01F8
003FC0D803E0EB0FE0000715F0491307000F15F81503121F7FA27F13FC01FF130702C013
F0ECF00F6C9038FC1FE09138FF3FC06CECFF8016006C14FC6C806CECFF806D14C090B612
E04815F0000715F8260FF87F13FC48487E263FE00F13FEEBC003007F010013FF49133F00
FF140F90C77E818181A216FE7F127F6DEB01FC123F6DEB03F8D81FF8EB0FF06CB4EB7FE0
6C90B512C0000115006C6C13FC010713C028357CB331>I<903803FF80011F13F0017F13
FC3901FF81FF3A03FE007F804848EB3FC0484814E0001FEC1FF0123F4914F8127FED0FFC
12FF16FEA516FFA4007F5CA3003F5C7F001F5C6C6C90B5FC6C6C5A6CB512EF6C14CF6C6C
138F90391FFE0FFEEB00201400A2D80FE0EB1FFC487E486C14F8A2ED3FF0A216E0ED7FC0
4913FF6C484813809039C007FE00390FF01FFC6CB55A6C14E0C61480D91FF8C7FC28357C
B331>I E /Fb 1 99 df<153015FC4A7E913807FF80021F13E0027F13F89138FFCFFC01
03EB03FF90260FFC0013C0D93FF0EB3FF0D97FC0EB0FF84848C7EA03FED807F89138007F
80D81FE0ED1FE0D87F80ED07F800FEC9EA01FC00F8EE007C00E0171C361280C937>98
D E /Fc 1 83 df<007FB712C0B812FCEFFF806C17E02800F807F00F13F8DBC00113FE01
7890398000FCFF94387C3F8094383E0FC0727E94381E03F0EF1F011800717FA21978A519
F8A24D5B1801EF1E034E5A94383E0FC094387E3F80DDFDFFC7FC933807FFFE92B612F818
E095C8FC17F0ED87C1EEC0F8923883E0FC177C923881F03EA2923880F81F84EE7C0F717E
163E93383F03E0041F7FEE0F81EF80F8EE07C0187C933803E07E183E706C7E85706C6C7E
180794387C03E0057E7F94383E01F8716C7E197C01F86D6D6C7EF13F80007FB66C6CB512
E0B700C015F0836C4B6C14E044447EC33D>82 D E /Fd 1 4 df<007FBA1280BB12C0A3
00F0CB1203B3B3B3A6BBFCA36C198042447BC34D>3 D E /Fe 2
49 df<B712F8A32503788D36>0 D<EA01E0EA03F0A4EA07E0A3EA0FC0A21380A2121F13
00A3123EA2123C127CA21278A212F85A12300C1A7B9B16>48 D E
/Ff 1 106 df<1318133C137CA213381300A7EA07C0EA0FE0EA38F01230EA60F8EAC0F0
12C1A2EA03E0A3EA07C0A2EA0F8013821383EA1F06A2EA1E0CA21338EA0FF0EA03C01023
7BA11B>105 D E /Fg 3 49 df<007FB712FCB812FEA26C16FC2F0479923E>0
D<15E081B3A5007FB812C0B912E0A26C17C0C800F0C8FCB3A2007FB812C0B912E0A26C17
C033347BB03E>6 D<131EEB3F80137FA313FF1400A25A5BA25B12035BA212075BA25B12
0F5BA2121F5BA290C7FC5A123EA2127E127CA2127812F8A2127011247DA617>48
D E /Fh 3 51 df<141CB3B81280A3C7001CC8FCB329297CA033>43
D<13381378EA03F812FF12FC1200B3A7487E387FFFF8A215217AA022>49
D<EA01FE3807FFC0381E07F0383801F83860007C007C137E00FE133E143FA2141F127C00
38133FC7FC143E147E147C14F8EB01F0EB03E0EB07C0EB0F00131E1338EB700313E03801
8006EA0300120E381FFFFE5A4813FCB5FCA218217CA022>I E /Fi
3 84 df<18E017031707170FA2171F173FA2177FA217FF17EF160117CF1603178F160717
0F160F161EA2043C7FA2167816F01707ED01E0A2ED03C0ED0780A2ED0F005D151E5D037C
8015785D140103EFB5FC4AB6FC5C5C844AC71203143E5C02781401002001F881387001F0
495A38F807C0D8FE0F6F7EB548160291C9139E4917FE49EE7FFC4917F06C48EE3FC06C48
EE1F00D80F8093C7FC3F3D7DB844>65 D<DB03801880DB0FC0EF01C01C03031F18071D80
1C0F70171F1C3F033F187FF4FF00A2705E6363037F4D5ADB7BF8161F0373187EF33EFE03
F3177CDBF1FC16F803E1EE01F008035B02016DED07E003E0EE0FC003C01781F21F010203
017F153E0380167C08F85B02076E1301DB003FEC03F0963807E0034A6E14C0020E011FEC
0F80F11F004A6E133E040F5C023C04FC5C02386E485A0407495A4A4B48130771485A02F0
0103495A4A6E48C7FC0101167E4A6D6C5A01036F5A4A6D5B01075E91C86C5AD8300F6F5A
D87E1E93C8FCD87FFE031EEEF860484892C9EBF9E0F4FFC0491B8049731300491AFC6C48
F101F0000FD0FC5B3C7DB765>77 D<EE7FE0923807FFFE031FEBFF80037F14C04AB612E0
912607F00713F091390FC0007F4AC7121F023E140F4A140714FC4A15E0130118C00103ED
0F0094C7FC80A280806D7F15E06D13F8EC7FFE91383FFFC06E13F0020713FC020113FF6E
6C13C0030F7F03037F03007FEE3FFC160F707E01701403D801F01401EA07E04848140048
C9FC5A003E5E127EA200FE4B5A7E5F6D4A5A6D4A5A6C6C4A5A01F8023FC7FCD83FFE14FC
3A1FFFC00FF86C90B512E06C158000014AC8FC6C6C13F0D90FFEC9FC343A7FB733>83
D E /Fj 44 123 df<EE3FFC4BB51280923907F007E092391F8000F04BC7FC037E130303
7C130715FCA24A4814E0EF03C094C7FC4A5AA414075DA50107B7FC5BA2903A000FC0007F
177E141F5D17FE5FA2143FED00015FA316034A5C147EA216075F14FE4A1570160FEFC0F0
18E013014A14C118C0A217C30103020713804A903803C700EE01FEEE007C94C7FC495AA3
5CEA1C0F127F5CA2D8FE1FCAFCEA7E1EEA783C5BEA1FF0EA07C0344883B730>12
D<EA01E0EA07F0EA0FF8A6EA07B8EA0030A21370136013E013C01201EA038013005A120E
5A5A12F012C00D186FB61A>39 D<EA03C0EA07F0120FEA1FF8A413F0EA07B0EA00301370
136013E013C0120113801203EA0700120E5A5A5A5A5A0D187A881A>44
D<387FFFFCB5FCA214F8A2160579931F>I<120EEA3F80127F12FFA31300127E123C0909
77881A>I<EC03F8EC1FFF91387C0FC09138F003E0903901C001F0D9038013F849C7FC01
0E14FC011E147C49147EEB3870EB78301370EBF03801E014FE0001133013C0A2EC700100
03016013FCEB80E0903881C003D9838013F83A01C70007F001FEEB0FE0D80078EB1FC090
C71380ED3F0015FE4A5AEC03F0EC0FC04A5A027EC7FCEB01F8EB03E0EB0F8049C8FC133C
01F81470485A485A4914F0484814E048C71201001E1403001CEC07C0D83FF8EB0F809038
FFE01FD8781FB5120001075B486C5B48C65BEC3FF0EC0FC0273779B42C>50
D<EC01FE91380FFFC091383F01F09138F800F8D901E0137CD90780133E49C7FC010E143F
5B133CEB3870EB7830EB703814180238137F0230137E1470D978E013FED93FC013FC9039
0F0001F890C7120316F0ED0FE0ED1F80ED7F00ECFFFC15F05DEC00F8157C81153FED1F80
A416C0A2000C143F003F15805AA2157F00FE15005A00F014FE0070495A5D4A5A6C495A00
3C495A6C013FC7FC380F80FC3803FFF0C61380283779B42C>I<133813FE1201A21203A3
EA01FCEA00F01300B0120EEA3F80127F12FFA31300127E123C0F2277A11A>58
D<EE03C0A21607A2160F161FA24C7EA2167F16FF16EFED01CFA2ED038FA2ED070F150F15
0E031C7F160715381578157015E0A2EC01C014031580EC070083020E1303141E141C5CA2
027FB5FCA291B6FC903901E000035C494880160149C7FC5B130E5BA25B13785BA2000382
D80FF81403B591387FFFF893B5FCA235397BB83F>65 D<DB03FE130792383FFFC092B5EA
F00E913A07FE00F81EDA0FF0EB3C3EDA3FC0EB1E7E02FFC7EA0FFCD901FC1407495A4948
1403D91FE015F849481401495A91C8FC01FEED00F01201485A5B000717E0485AA2484815
01A2003F93C7FC5BA2127F5BA312FF90CBFCA5170E48161E171CA2173C6C16386C167817
7017F04C5A6C6C5D16036C6C4A5A6C6C4AC7FC161E6C6C147CD803FC14F0C66CEB03E090
397FC01F8090261FFFFEC8FC010713F8010013C0383A74B73D>67
D<0107B612FCEFFF8018E0903B001FE0001FF0EF07F84BEB01FC717E023F157FF03F804B
141F19C0027F150FA292C813E0A25CA25C19F01301A25C19E01303A24A151FA2130719C0
4A153FA2010F1780187F4A1600A2011F16FEA24A4A5AA2013F4B5A604A4A5A170F017F4B
5A4D5A91C848C7FC17FC49EC03F84C5A49EC3FC000014AB45AB748C8FC16F093C9FC3C36
7AB541>I<0107B81280A3903A001FE00001EF003F4B141F180F023F1600A24B80A2147F
A292C8FC604A903803C00E17805C95C7FC0101140794C8FC4A5B5E0103147F91B512FEA3
903907F8007E163C5C161C010F143C16384A1538A2011F167893C712704A15F060013F15
01A24A4A5AA2017F4B5AA291C8120F4DC7FC495D177E49EC01FE0001ED1FFCB8FCA25F39
367BB53A>I<DB03FE130E92383FFF804AB5EAE01C913A07FE01F03C913A1FE000787CDA
3F80EB3CFC02FFC7EA1FF8D901FC140F49481407EB0FF04948EC03F0495A495A91C8FC01
FEED01E01201485A5B000717C0485AA248481503A2003F93C7FC5BA2127F5BA312FF90CB
FCA20303B512F0A34891390003FC00A35FA26C15075F7EA2160F6C7E5F6C6C141F6C7E4C
5A6C6C147FD803FCEB01F76C6CEB03E33B007FC03F838090391FFFFE01010701F8C8FC01
001380373A74B742>71 D<0107B5D8E00FB512C0A204C015809026001FE0C7383FC000A2
4B5DA2023F157F96C7FC5DA2027F5D6092C8FCA24A1401605CA201011503605CA2010315
0791B75AA3D907F8C7120F605CA2010F151F605CA2011F153F605CA2013F157F95C8FC5C
A2017F5D5F91C8FCA24914015F5B00011503B5D8FC01B512F8A342367BB53F>I<0107B5
12F0A39039000FF000A25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A2
5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC5B007F
13FEB5FCA224367BB521>I<0107B500E090387FFFC0A24C15809026001FE0C7381FF800
19C04B5D063EC7FC023F5D18F04BEB03E04D5A027F4AC8FC171E92C7127C5F4AEB01E04C
5A4AEB0F80041EC9FC01015C16F84A485A4B7E01031307ED1FFCECF83F15790107EBF1FE
ECFBE09138F780FFECFF0049487F4A8002F0133F4A80131F707E5C160F013F8116074A80
A2017F6E7EA291C7120183491400835B00014B7FB500FC011F13FCA342367AB542>75
D<902607FFF0923801FFFC614F13F8D9001FEFFC006F150F021D5F191D023D163B620239
167319E3027916E7DA78FC913801C7E00270ED0387A202F0ED070F6202E0150E181C0101
017E151F06385B02C01570A20103EEE03F97C7FC0280EC01C0EF038001076D5D94380700
7E0200140EA2494B13FE61010E5D5F011ED91F80130105E05B011CEC81C0A2013C913883
8003DC87005B1338ED0FCE0178160704DC5C017014F8A201F04A130F4C5C1201D807F86D
48131FB500C0020FB57E168016004E367AB54D>77 D<902607FFE091B512C0811A809026
001FF891380FF000725A725A6F5D023D15076F92C7FC14388102785D6F140E02707F153F
02F06D131E031F141C14E0820101010F143C701338ECC00782010301031478187002807F
150101076E13F003005C91C77E82491501EF81C0010E143F17C1011EEC1FC3EFE380131C
160F013C15F7040790C8FC013815FF8213785F01701401A201F014005F0001167CEA07F8
B512C01738A242367BB53F>I<92387F800E913803FFF0020FEBFC1C91391F807E3C9139
7E001F7C02F8EB07FC494814F84948130349481301A2494814F049C8FCA34915E0133EA2
013F1401A293C7FC808080EB1FFCECFFC06D13FCEDFF806D80010114F06D6C7F140F0200
7F151FED03FE15011500A2167EA2120EA2121E167C121CA2003C5D123E4B5AA2007F4A5A
4B5A6D495A6D49C7FCD8FFF0137E39F8FE01FC39F07FFFF0D8E01F13C026C003FEC8FC2F
3A7AB730>83 D<0003B812F0A25A903AF8007F800F01E0EC0003D80F80ED01E090C7FC48
5C001E4A1300121C123C003813014B1301007817C0127000F01303485CA2C792C7FC1407
5DA3140F5DA3141F5DA3143F5DA3147F92C9FCA35C5CA313015CA313035C497E001FB512
FEA3343572B43D>I<EB01F8EB07FE90381F079C90387E03BF496CB4FCEA01F848486C5A
485A120F495B121F5B003F13015DEA7F00A21403485C5AA214075D5A1670140FEDC0F016
E0141F15C1007C013F13C0147F6CEBEFC3D901C713803A0F0783C7003907FE01FE3901F8
007C242477A22C>97 D<137FEA1FFF5BA21200A25BA21201A25BA21203A25BA21207A25B
A2380FE1F8EBE7FE9038DF0F809038FC07C0391FF803E013F001E013F0EBC001D83F8013
F8A21300A2481303A2127EA200FE130715F05AA2140F15E05A15C0141F1580143F150014
7E00785B007C5B383C01F0383E03E0381F0F80D807FFC7FCEA01F81D3877B627>I<147F
903803FFC090380FC0F090383F0078017E133849137C3901F801FCEA03F0EA07E0000F14
F8EA1FC0EC00E048481300A248C8FCA35A5AA45AA31518151C153C007C1478007E14F000
3EEB01E0003FEB07C06CEB1F003807C0FC3803FFF038007F801E2477A227>I<ED01FC15
7FEDFFF8A21503A216F0A21507A216E0A2150FA216C0A2151FA21680A2903801F83FEB07
FE90391F07BF00EB7E03496CB4FCEA01F848486C5A485A120F5B001F5C5B003F1301A2D8
7F005BA214035A485CA21407A2485C1670140F16F0EDC0E0141F15C1007C013F13C0147F
6CEBEFC3D901C713803A0F0783C7003907FE01FE3901F8007C263877B62C>I<147F9038
03FFC090380FC1F090383F007813FC4848133C485A485A000F147C4848137815F8484813
F01403007FEB0FC0903801FF809038FFFC0091C7FC48C8FC5AA55AA21518007C141C153C
007E1478003E14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801E2477A2
27>I<ED07C0ED1FF8ED3C3C157CEDF8FE1401EDF1FC1403A2EDF070913807E000A4140F
5DA5141F5D011FB512C0A39039003F800092C7FCA45C147EA414FEA25CA413015CA41303
5CA413075CA4495AA45C131F121C007F90C8FCA2133E12FE133CEA78785BEA3FE0EA0F80
274882B71A>I<EC0FC0EC3FF09138F83CE0903903F01DF8903807E00FEB0FC090391F80
07F0EB3F005B137E01FE14E0485A150FA2484814C0A2151F1207491480A2153FA2491400
A25DA2157E15FE00031301EBF0030001495A3800F80FEB7C3DEB3FF990380FC1F8EB0001
1403A25DA21407001C5C127F4A5A141F00FE5C4AC7FC007813FC383E03F8381FFFE00003
90C8FC25337CA227>I<EB07F0EA01FF485BA2EA000FA25CA3131F5CA3133F91C8FCA35B
137EA2EC07F09038FE1FFC9038FC781FD9FDE013809038FFC00F48010013C0A25B5B485A
A25B151F1207491480A2153F000F15005B5D157E121F4913FEEDFC07160F003F0101130E
010013F8161E161C4814F0007E15381678167000FE903800F1E048EC7FC00038EC1F0028
387BB62C>I<EB01C0EB07E014F0130F14E01307EB038090C7FCABEA01F0EA03FCEA0F1E
EA1E1F121C1238A2485AA212F0485A137EA2EA00FE5B12015BA212035BA212075B147000
0F13F0EBC0E0121F1380EB81C0A2EB83801303380F0700138EEA07FCEA01F0143679B41A
>I<150EED1F80153FA31600151C92C7FCABEC0F80EC7FE0ECF1F0903801C0F8EB038049
487E5B130EEB1E01011C5B133C1338140313005DA21407A25DA2140FA25DA2141FA25DA2
143FA292C7FCA25CA2147EA214FEA25CA21301001C5B127F495A130700FE5B495AD8781F
C8FC137EEA3FF8EA0FC0214583B41A>I<EB07F0EA01FF5CA2EA000FA25CA3131F5CA313
3F91C8FCA35B137EA2ED0F8001FEEB3FE049EBF0F0EC01C0EC03830001EB0707EBF80E14
1C023813E0000390387003C04948C7FCEBF1C0EBF38048B4C8FC13FC13FF14E0380FE7F8
EBC0FE147F80121F01807F021F13E0EC3F81003FEC01C01300A21503481580127E91381F
07005D00FEEB0F9E48EB07FC0038EB01F024387BB627>I<EB1FC0EA07FF1480A2EA003F
A21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121F
A25BA2123FA290C7FCA25AA2127E130712FE5BEAFC0EA2131E131CA25B127C5BEA1FE0EA
0780123879B616>I<D803E001FEEB07F03C0FF803FF801FFE3C1E7C0F03E07C1F263C3E
3C9039F0F00F80003890397801F1C002E0D9FB8013C0D8703FECFF0014C0D97F805B00F0
01005B12E0017E5C0303141FEA00FE494A1480A20307143F00011800495C60030F147E12
03494A13FEF0FC07031F150F00070401130E49028013F8191E033F151C000F17F0490200
143819784B1570001F933800F1E049017EEC7FC00007C7001CEC1F00402479A246>I<39
03E001FC3A0FF807FF803A1E7C1F07C03A1C3E3C03E000381370D93FE07F007013C0A2EB
7F8000F0130012E0137E1507EA00FE495CA2150F00015D5B151F5E120349133FEE01C016
030007027F138049137E16071700000F147C49140E161E161C001FEC3C7849EB1FF00007
C7EA07C02A2479A230>I<EC7F80903803FFE090380FC0F890383F007C017E7F49133F48
487F48481480485A120F484814C0A2485AA248C7FCA2153F4815805AA2157F16005A15FE
A24A5A5D1403007C5C007E495A003E495A6C49C7FCEB807E3807C1F83803FFE0C66CC8FC
222477A22C>I<011FEB1F8090397FC07FE09039F3E1F0F83A01E1F3C07C9039C1F7803E
ECFF00260381FE133F4A7FD983F814801207EB03F0A20107143F12005CA2010F147F1700
5CA2011F5C5E5C5E013F13015EEC00035E49495A6E485A5E6E48C7FC01FF133E9038FEF0
F89038FC7FF0EC1F80000190C9FCA25BA21203A25BA21207A3B57EA329327EA22C>I<39
03E003F8390FF80FFE391E7C3C0F3A1C3E7007800038EBE01F90383FC03F12701480D97F
00130000F0141ED8E07E90C7FCA3EA00FE5BA312015BA312035BA312075BA3120F5BA312
1F5B0007C9FC212479A224>114 D<EB01FE903807FF8090381F01E090383C00F0491370
491338484813F81401A2000314F0A26DC7FC7FEBFFC014F86C13FE806C1480013F13C013
0F9038007FE0140F1407121C007E130300FE14C0A348EB07805A48EB0F000070131E0078
5B381E01F0380FFFC0000190C7FC1D247AA223>I<EB0380EB0FC0A3131F1480A3133F14
00A35B137EA3B512FEA33800FC0012015BA312035BA312075BA3120F5BA3121F5B141C14
3C003F1338EB0078147014F014E0383E01C01303381F0780EB0F00EA07FCEA01F0173379
B11C>I<13F8D803FE14E0D8071FEB03F0EA0E0F001CEB8007EA381F16E01270150FEAF0
3F00E0010013C0A249131FEA007E01FE14805B153F1201491400A25D120349137E160715
FE160FEDFC0E5B0201131E01F0141C140300010107133C9039F80E7C383A00FC3C3C7090
393FF81FE090390FC007C0282479A22E>I<01F8130ED803FEEB3F80EA071FEA0E0F001C
018013C0EA381F151F0070140F1680D8F03F130700E01300A25BD8007E140013FE5B5D00
01140E5BA2151E0003141C5B5DA2157815704913F06D5B4A5A140300015C2600F80FC7FC
EB7C1EEB3FF8EB0FE0222479A227>I<01F8ED0380D803FE903901C00FE0D8071FEB07E0
D80E0F151F001CEB800FD8381F9138C00FF01707007017E0031F1303D8F03FEC800100E0
1300A249133FD8007E020013C013FE5B4B13030001027E14805BA203FE130700034A1400
5B5F170EA25FA202015CA2000101035C6D486C13F0000091383E01E0903A7E1E1F03C090
271FFC07FFC7FC903907F001FC342479A239>I<13F8D803FE14E0D8071FEB03F0EA0E0F
001CEB8007D8381F14E0A21270150FD8F03F14C000E01300A249131FD8007E148013FE5B
153F000115005BA25D0003147E5BA215FE5DA25B140101F05B140300011307EBF80F3900
FC3FF0EB3FFBEB0FC3EB00075DA2000E130F003F5C48495AA24AC7FC007E137E007C137C
00785B383803F0381E07C06CB4C8FCEA03F8243379A22A>121 D<903903C003C0D90FF0
138090383FF807D97FFC1300496C5AECFF1E3901F01FFC9038E003F89038C00070000314
F0C7485A4A5A4A5A4AC7FC141E147C14F0495A495A495A49C8FC131E49130449130E4913
1E4848131C4848133C4848137CD80FF05B381FFF03391E1FFFF0486C5B486C5BD870035B
26F001FEC7FC38E000F822247BA223>I E /Fk 46 122 df<EFFFF80407EBFF8093391F
C007E0047EC712F04B4814784B4814F84C13034B5A030F14075E151F19F04B48EB01C095
C7FCA2157F93C9FCA45D5DA414015D0103B81280A2190090260003FCC77E4B5C60A30207
14014B5CA3170360140F5D170760A2141F4B130F60A3023F141F4B5CA3053F1370027FED
80F092C714E0A394387F81C04A15015C1803053F13801807010117004A6E5AEF0F9EEF07
FCEF01F0494891C8FCA35CA213075C121C127F48485AA25CA24848CBFCEAF81E485AEA78
78EA1FF0EA07C03D5A82C538>12 D<1638167016E0ED01C0ED0780ED0F00151E5D5D15F8
4A5A4A5A4A5A5D140F4AC7FC143EA25C5CA2495A13035C13075C130F495AA249C8FCA213
3E137EA25BA2485AA3485AA3485AA3120F5BA3121F5BA3123F90C9FCA4127EA6127CA512
FCA4127CA9123CA2123EA2121EA37EA27E7F12037F12016C7EA213701330256471CA29>
40 D<1560A2157081153C151C151E150E150FA2ED0780A216C01503A316E0A31501A216
F0AA1503A716E01507A5150F16C0A3151F1680A3153F1600A35D157EA215FE5DA24A5AA3
4A5AA24A5AA25D140FA24A5A92C7FC5C143E147E147C14FC5C495A13035C495A495AA249
C8FC133E133C5B5B485A485A485A48C9FC121E5A5A12E05A24647ECA29>I<1378EA01FE
1203EA07FFA25AA4EA07FEEA01E6EA0006130E130CA2131C131813381370A213E0EA01C0
13801203EA0700120E5A5A12F01260101E798A1F>44 D<007FB51280A2B6FCA21500A219
06779824>I<EA0780EA1FE0123F127F13F0EAFFE0A3EA7FC01380EA1E000C0B758A1F>I<
16C01501A215031507ED0F80151F153F157F913801FF005C140F14FE90380FFCFE14E014
00EB00015DA314035DA314075DA3140F5DA3141F5DA3143F5DA3147F92C7FCA35C5CA313
015CA313035CA313075CA2130FA2131F133FB612FCA3224274C133>49
D<ED1FC0EDFFF8913803E07E913807001F021EEB0F804A14C04AEB07E04A14F049481303
4A14F8495A13071403010F018013FCEB0E01131E131C133C1338020313070178010013F8
13705C0206130FD9F00E14F0EBE00C021CEB1FE05CD97070EB3FC04AEB7F80EB3FC06DC7
EAFF0090C7485A4B5AED07F04B5A4B5A4BC7FC157EEC01F84A5AEC0FC04AC8FC147E14F8
EB03E0495A49C9FC131E49EC01C05B4914034848158048481407485AEE0F0048C85A001E
151ED81FF0143E48B46C13FC393E3FFC03D87C07B55AD878015CD870005C00F06D5B4801
1F5BDA07FEC7FCEC01F82E4477C133>I<ED1FF0EDFFFC913803F01F91390F800FC09139
1E0007E00278EB03F05C4948EB01F8495A495A91C713FC5BEB0E06EB1E07EB1C03160301
3C15F81338A24A1307020614F0EB1C0E023CEB0FE0EB0FF0D903C0EB1FC090C8EA3F8017
00167E4B5A4B5AED0FE091383FFFC04BC7FC5DEC003F6F7E6F7E6F7E6F7EA282A482A34B
5A121FEA7F80A2150F48C75BA2484A5A12F800E05D153F4B5A007092C7FC15FE0078495A
0038EB03F06C495A6CEB1F80260780FEC8FC3801FFF838007F802E4476C133>I<EE01C0
EE07F0A2160F17E0A3161F17C0A3EE3F80A3EE7F00A316FEA34B5AA25E15035E15075E15
0F5EA24B5AA24BC7FCA2157E157C15FC4A5AA24A5A5D140791380FC078ED80FCEC1F0114
3F143EEC7C0302F85BEB01F014E001031307D907C05BEB0F80EB1F00013E130F495C5B48
5A3903FFC01F000F01FC5B4813FF397E003FFF007C0107144000F00100EBFFE00060143F
C81400ED7F8093C7FCA35D5DA314015DA314035DA35D6E5A2C557CC133>I<0260141802
7C14F891397F800FF092B512E091B612C01780EEFE005E4914F016C0DAC7FCC7FC02C0C8
FC13035CA3130791C9FCA35B130EA390381E03F890381C1FFF91387C0F8090391DE007E0
90393F8003F0EC0001013E80133C496D7E137090C8FC82A41501A415035E120C123F486C
130700FF5DA290C7FC4B5A5A00F84A5A12E04B5A5E4BC7FC5D6C5C0070495A0078EB03F0
6CEB0FE06C495A6C6CB4C8FC3807FFFC000113F038007F802D4475C133>I<ED0FF0ED7F
FC913801F01F9139078007C091391F0003E0023CEB01F05C4AEB00F81301495A5C1307A2
495AA21601011F15F0A26E130317E06EEB07C0EE0F8002F8131F6EEB3F006D6C137C6E5B
6DEB81F0EDC3C06DEBEF806D01FEC7FC6D5B6E7EEC1FFF027F7FD901E77FD907C37FD90F
017FD93E007F49133F496D7E4848130F4848130748486D7E48481301001F140090C8FC5A
003E157E007E157C127CA216FC00FC5D5A4B5AA26C4A5A127C4B5A4B5A6C4AC7FC003F14
3E6C6C13FC390FC003F03907F00FE06CB51280C649C8FCEB1FF02D4476C133>56
D<EB0780EB1FE0133F137F14F0EBFFE0A3EB7FC01480EB1E0090C7FCB3A3EA0780EA1FE0
123F127F7F485AA36C5A5B001EC7FC142B75AA1F>58 D<1478EB01FE1303130714FFEB0F
FEA3EB07FC14F8EB01E090C7FCB3A31378EA01FC487E1207A2120FA46C5AEA01ECEA000C
131C1318A2133813301370136013E0485A5B120348C7FC120E120C121C5A12F01260183E
79AA1F>I<EF01C01703A24D7EA2170FA2171F173FA2177FA217FFA2EE01DF1603179FEE
071F84160E170F161C163C16381670A216E0A2ED01C0A2ED038015071600030E80A24B13
07A25D157815705DA24A5AA24A5A4AB6FCA25C020EC712074A8117035CA25C14F05C495A
A2495AA249C8FC5B130E131E013E82137E13FED807FFED0FFFB500F00103B512FE5E19FC
3F477AC64A>65 D<91B912E0A302009026C0000113C06F48EB003F03FF151F190F93C812
07A34AEE03805DA314034B15071A00A214075DEF03801707020F92C8FC5DA25F021F140E
4B131EA2173E023F5C9238C001FC92B5FCA24A5CED80031600A202FF147092C7FCA217F0
495D5CA2160101035D4A90CAFCA313075CA3130F5CA3131F5CA2133FA313FFB612F8A343
447AC341>70 D<DC07FCEB018093397FFF80030303B5EAE007923A0FFC03F00F923B3FE0
00781F0003FFC76C5ADA03FE6E5ADA07F86E5ADA1FF06E5ADA3FC014034A5A4AC8120149
485E495A13074948150049485E495AA2495A01FF5F5C4890CAFC5A61485AA2485A96C7FC
121F5BA2123F5BA3127F5BA4485A041FB512F8A393260007FEC7FC60A3495E127F6D150F
60A3003F161FA26D5E121F173F6C6C5E177F6C6C15FF6C7E6C6C4A5B6C6CEC07CF6D6CEB
0F8FD93FE0EB3E0790270FFC03F890C8FC0103B5EAE00301000280C9FCDA1FF8CAFC4148
71C54D>I<91B612E0A30200EBE000ED7F8015FFA293C7FCA35C5DA314035DA314075DA3
140F5DA3141F5DA3143F5DA3147F5DA314FF92C8FCA35B5CA313035CA313075CA3130F5C
A3131F5CA2133FA25CEBFFE0B612E0A32B447AC326>73 D<027FB512F891B6FCA2020001
E0C7FC6F5A4B5AA293C8FCA35C5DA314035DA314075DA3140F5DA3141F5DA3143F5DA314
7F5DA314FF92C9FCA34916044A150EA2181E0103161C5C183C1838010716785C18F0A201
0F15014A15E01703A2011FED07C04A140F171F013FED7F8017FF4A130301FF023F1300B9
FCA25F37447AC33E>76 D<91B712FCF0FFC019F002009039C0001FF86F48EB07FC03FFEC
01FE727E93C8EA7F80A24A17C0A24BED3FE0197F1403A25DA21407F1FFC05DA2020F1780
604B160060021F5E4E5A4B5D4E5A023F4B5A4E5A4B02FFC7FCEF03FE027FEC1FF892B612
E095C8FC0380CAFC14FFA292CBFCA25BA25CA21303A25CA21307A25CA2130FA25CA2131F
A25CA2133FA25CEBFFE0B612E0A343447AC344>80 D<DB01FE130692390FFFC00E033FEB
F01E9239FE01F83E913A03F8003E7EDA07E0EB1E7C4A48EB0FFC4A4813074AC7FC027EEC
03F85CA24948140118F0495AA213074A15E0A3130F18C0A28094C7FC80A26D7E14FF15E0
6D13FEEDFFC06D14F86D14FE6E6D7E6E80140F020180DA003F7F15039238007FF8161F16
0F1607A21603A31207A4485EA2120E1607001E5E121F4C5AA2484B5A6D4AC7FC163E6D14
7E007F5D6D495AD87CF8495A017CEB0FC03AF83F803F8027F00FFFFEC8FCD8E00313F839
C0007FC0374878C538>83 D<90B912FE5A19FC48D98003EB0007D9FC0049130101F01600
48484A147C5B4901071578000F183890C75B120E001E020F1578A2001C5D003C18700038
141FA200785D1270033F15F000F018E0C8491400A2157FA25EA215FFA293C9FCA25CA25D
A21403A25DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA25B01
077F003FB612F8A25E3F436FC247>I<B6013FB5D8C001B512E0A3000301C0010001F0C7
381FFE006C90C8D87FC0EC07F064494C6E5A515AA299C7FC1B0E84637F6C04FF5D5E634C
16F005BF5DDC073F140163040E4B5AA2041C4BC8FCA20438150EA204705D16F004E05DDB
01C015781A70DB03805DA2DB07006D485A171FDA800E4B5AA2017F494BC9FC153C033815
0E4B151E191C4B5DA2DA81C05DA2DA83805DA20287C7EBE1C0148F028EEDE380029E15E7
029C93CAFC02B815EF18EE02F015FCA24A5D170F4A5D133F4A5DA291C85B133E60013C93
CBFCA20138150E5B466BC364>87 D<EC0FC0EC7FF0903901F87870903907E03DFC90380F
C01D90381F800FEB3F00017E6D5A13FE485AA248485C120749130F120F495C121F151F12
3F495CA2153F127F495CA2157FA248C790C7FCA29238FF01C0160303FE1380127EA20201
EB0700EC03FCA26C01075B020F130E6C011E131ED9803C131C000F9038707C3C3A07C1E0
3E783A01FF801FF03A007E0007C02A2D75AB33>97 D<EB0FF0EA07FF5AA238001FE0130F
131FA25CA3133F5CA3137F91C8FCA35B5BA312015BEC0FC0EC3FF00003EBF07C9038F9C0
3E9038FF801F020013804848130F4914C05B4914E0120F5BA3121F5BA2151F123F5BA215
3F007F15C090C7FCA2157F168012FE16005DA25D007E495AA24A5A5D1407003E495A4A5A
6C5C023EC7FC380F80FC3807C1F03801FFC06C6CC8FC234675C42E>I<EC0FF0EC7FFC90
3801F81F903903E0078090390FC003C090381F8001EB3F00017EEB0FE049131F12014848
EB3FC0485AA24848EB1F00001F91C7FCA2485AA2127F5BA312FF90C9FCA45AA516C0ED01
E0ED03C0127EED0780ED1F006C143E6C14786D485A390FC007C02603E03FC7FC3801FFFC
38003FC0232D74AB2E>I<EE07F8ED03FF5DA29238000FF01607160FA217E0A2161FA217
C0A2163FA21780A2167FA21700A25EA25EEC0FC0EC7FF1903801F879903907E03DFC9038
0FC01D90381F800FEB3F00017E6D5A13FE485AA248485C120749130F120F495C121F151F
123F495CA2153F127F495CA2157FA248C790C7FCA29238FF01C0160303FE1380127EA202
01EB0700EC03FCA26C01075B020F130E6C011E131ED9803C131C000F9038707C3C3A07C1
E03E783A01FF801FF03A007E0007C02D4675C433>I<EC0FF0EC7FFC903801F81F903907
E00780D91FC013C090383F8003EB7F0001FEEB01E0485A48481303000715C05B000F1407
48481480150F4848EB1F00157EEC03F8007FEB7FE090B5C7FC14E00180C8FC12FF90C9FC
A45AA516C0007EEC01E0ED03C0A2ED07806CEC1F00153E6C6C1378000F495A3907C007C0
2603E03FC7FC3800FFFCEB3FC0232D74AB2E>I<EE0FC0EE3FF0EEF878923801F03C0303
137C923807E0FE16E1ED0FE316C317FC92381FC1F8EEC0F017004B5AA4157F93C7FCA45D
A25DA349B612805BA290260001FCC7FCA314035DA414075DA4140F5DA4141F5DA5143F5D
A4147F92C8FCA45C5CA4495AA4495AA35CA2EA1C07007F5B12FF5C130F5C00FE90C9FCEA
F81FEAF03EEA787CEA1FF0EA07C02F5A82C51F>I<157E913803FF8091390FC3C3809139
3F00EFE0147E4A137F495A4948EB3FC01307495A131F4A1480133F4A137F137F91C71300
5B5E5A495CA215011203495CA21503A2495CA21507A25EA2150FA200014A5A153F157F00
0014FFD97C015BEC03DF90381E0F3FEB0FFED903F05B90C7FC157FA293C7FCA25DA25DA2
001C495A127F48495A4A5AA248495AEC1F8000F8017FC8FC387E01FC381FFFF000031380
2B407AAB2E>I<EB01FE13FF5AA2380003FC13011303A25CA313075CA3130F5CA3131F5C
A3133F5C15FF028313C090397F8F83F091383C01F802787FECF000495A4A7F5C91C7FC5A
5B5B150100035D5BA2150300075D5BA21507000F5D5B150F5E121F49131F5E1778003F02
3F1370491480A2037F13F0007FED00E090C7FCEE01C0157E48ED03805AEE0700ED3E0E48
EC1E1CED0FF80070EC03E02D4678C433>I<141C147F14FFA314FEA214781400AE133EEB
FF803803C7C0380783E01303000E13F0121CA2EA3807A21278EA700F14E0131F00F013C0
12E0EA003F1480A2137F1400A25B5B12015BA212035B140F0007130E13F0A2000F131EEB
E01CA2143813C01470A214E03807C1C03803C3803801FF00EA007C184377C11F>I<EB01
FE13FF5AA2380003FC13011303A25CA313075CA3130F5CA3131F5CA3133F5C167CED03FF
017F90380783809139001E07C0ED381F157049EBE03F9038FE01C0EC0380030013800001
49EB0E00D9FC0E90C7FC5C5C00035B495AEBF9C0EBFF804848C9FC7F14F0EBF3FC380FF0
7F9038E03FC06E7E140F001F6D7E13C0A2160F123F0180140EA2161E007F151C010013E0
163C16385A481578020313705E48903801F1C06EB45A0070023EC7FC2A4678C42E>107
D<EB01FCEA01FFA3380007F813031307A214F0A2130FA214E0A2131FA214C0A2133FA214
80A2137FA21400A25BA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25B
A2123FA25BA2387F81C01383EB0380A3EAFF0700FE1300A25B130E127E5B123EEA1E38EA
0FF0EA03E0164677C419>I<01F8D90FF0EB07F8D803FED93FFCEB1FFED8071FD9F83F90
387C1F803E0E0F83C01F81E00FC0001ED9C780D9C3C07F001C903BCF000FC7800702DEEC
CF00003801FC02FE804A5C49485C12780070495C4A5CD8F03F021F140F00E04C5C5C1200
017F023F141F6291C75BA249027F143F624992C7FC197F00014B92C7FCA2494A5C610003
0201EE03C006011480494A14FCA2000702030203130707F81300495C1A0E000F020715F0
62495C6206015B494A01005BF17FC06CC7D80380021FC7FC4A2D77AB51>I<01F8EB0FF0
D803FEEB3FFCD8071FEBF83F3B0E0F83C01F80001ED9C7807F001C9038CF000F14DE0038
01FC805C495A127800705B5CD8F03F141F00E05E5C1200017F143F5F91C7FCA249147F94
C7FC5B5E00015DA24913015E0003EE0780030314004914F8A2000702075BEEF00E5B5F00
0F15E05F5B5F03035B49903801E1C06FB45A6CC8003EC7FC312D77AB38>I<EC0FF0EC7F
FC903801F81F903903E00F8090390FC007C090391F8003E0D93F0013F0137E49EB01F812
01484814FC485AA2485A121FA2485A1503127F5BA2150700FF15F890C7FCA2150F16F05A
16E0151F16C0153F1680157F1600007E14FE4A5A5D6C495A6C495A6D485A260FC03FC7FC
3803E0FC3801FFF038003F80262D74AB33>I<02F8EB1F80D903FEEB7FE0903A071F01E0
F8903A0E0F83807C011E9038CF003E011C01DE133F03FC7F01384914805D4A4814C01378
01705BA2EBF03F13E05D1300027F143FA292C7FCA24A147F18805CA2010115FF18005C5F
01031401A24A5C4C5A13074C5A5F160F010F4A5A6E495A94C7FC02EE137C90391FEF01F8
9138E783E09138C3FF80DAC07EC8FC013F90C9FCA25CA2137FA291CAFCA25BA25BA21201
A21203387FFFFCB5FCA2323F7FAB33>I<01F8EB3FE0D803FEEBFFF83A071F03E03E3A0F
0F87801F001E9038CF007F001C13DE02FC13FF00385B5C011F14FE007849133800701500
5CEAF03F12E05C1200137FA291C8FCA25BA25BA21201A25BA21203A25BA21207A25BA212
0FA25BA35BA26CC9FC282D77AB2A>114 D<EC1FE0ECFFF8903803F03E903807C00F9039
0F000780491303133E013CEB07C0017C131FA201FCEB3F80A3ED0E006D90C7FC7F14E014
FE6E7E15E06D13F87F6D7F01077F1300140FEC01FF8081120E003F147E486C133EA2157E
48C7127CA200FC5C12704A5A0078495A6C495A6C49C7FC380F807E3803FFF838007F8022
2D78AB29>I<1470EB01FCA21303A25CA21307A25CA2130FA25CA2131FA25CA2007FB512
F0B6FC15E039003F8000137FA291C7FCA25BA25BA21201A25BA21203A25BA21207A25BA2
120FA25BA2001FEB03C0158013C014071500003F5BEB800E141E141C001F5B14785C380F
81E0380783C06CB4C7FCEA00FC1C3F77BD21>I<133ED9FF80EB07802603C3C0EB0FC026
0783E0131F1303000E6D133F001C1680A2EA3C070038157F00781600EA700F5C011F5C00
F0495B12E0EA003FEC80015E137F14001503495C5BA2150700015D5BA2030F131CEEE03C
48481538A21778031F137016C01201033F13F017E0ED7FC16C6C01EF13C090397E01C7C3
903A3E0783E780903A1FFE01FF00903903F8007C2E2D77AB35>I<013E1438D9FF8013FE
3903C7C001260783E013FF1303000E13F0121C81D83807147F163F1278D8700F141F5C13
1F00F049130E12E0EA003F4A131E161C137F91C7FC163C4914385BA21678000115705B16
E0A21501484814C0A2ED0380A20001EC07005D150E6D5B00005C5D017E5B90383F03C0D9
0FFFC7FCEB01FC282D77AB2E>I<013EEE0380D9FF80010FEB0FE02603C7C090381F801F
260783E0013F14F01303000E6D137F001C1600180FD8380716074C130300785DD8700F16
015C011F130100F001C0ED00E000E05DEA003FDA8003140119C0017F5C14000307140349
1780495CA2030F140700011800495CA2180EA24848495A60A200015FA260153F6D496C5B
00000277495A017E9038F7F003DA01E3495A90281F83C0FC1EC7FC903A07FF007FFCD901
FCEB0FE03C2D77AB42>I<02FCEB1F80D903FFEB7FF0903A0F0F81E078903A1C07C3C07C
903A3803E781FC0170EBF70101E0EBFE03120101C013FC000316F80180EC00E000074A13
0013001407485C120EC7FC140F5DA3141F5DA3143F5DA3027FEB01E017C01500A24AEB03
80121E003F491307D87F811500160E00FF151ED903BF5B26FE079F5B3A7C0F0F80F03A3C
1E07C3E03A1FF803FF802707E000FEC7FC2E2D7BAB2E>I<133ED9FF80EB07802603C3C0
EB0FC0260783E0131F1303000E6D133F001C1680A2EA3C070038157F00781600EA700F5C
011F5C00F0495B12E0EA003FEC80015E137F14001503495C5BA2150700015D5BA2150F5E
485AA2151F5EA21201153F5E157F6C6C13FFEB7E01D93E0790C7FC90381FFE7FEB03F890
C75A5DA214015DEA0F80393FC003F8A24A5AD87F805B4A5A49485A007849C8FC0038133E
5C6C485A380E07E03807FF80D801FCC9FC2A4077AB30>I E /Fl
10 94 df<14C01301EB0780EB0F00131E5B5BA25B485AA2485A12075B120FA248C7FCA3
123EA3127E127CA412FCA35AAA7EA3127CA4127E123EA37EA36C7EA212077F12036C7EA2
6C7E1378A27F7F7FEB0780EB01C01300124678B31F>40 D<12C07E12787E7E7E6C7EA26C
7E6C7EA26C7E7F1378137CA27FA37FA31480130FA414C0A31307AA130FA31480A4131F14
00A3133EA35BA2137813F85B485AA2485A485AA248C7FC121E5A5A12E05A12467BB31F>
I<156015F0B3A5007FB812C0B912E0A26C17C0C800F0C8FCB3A5156033347BAA3D>43
D<EB0FF0EB7FFEEBF81F3903E007C03907C003E0390F8001F0A248C712F8A24814FCA200
7E147EA500FE147FB0007E147EA46C14FCA26C14F8A2390F8001F0A23907C003E03903E0
07C03901F81F8039007FFE00EB0FF0202F7CAD28>48 D<13075B133F13FFB5FCA2133F12
00B3B1497E007FB512C0A31A2E78AD28>I<EB3FE03801FFFC000713FFD80F801380391E
003FC048EB1FE048EB0FF00070EB07F812FC6CEB03FC7EA21401A2007E1303123CC7FC15
F81407A215F0EC0FE0141F15C0EC3F80EC7F0014FC5C495A495A495A49C7FC131E49131C
5B5B48481338485A48C7FC000E1478001FB512F85A5AB612F0A31E2E7BAD28>I<EB1FF0
EBFFFE0003EBFF803907E01FE0390F000FF0001EEB07F8003F1303018013FCA2EBC00113
80121F380E0003C7FC15F8140715F0EC0FE015C0EC1F80EC7E00EB3FF814FE9038001F80
EC0FE0EC07F0EC03F8EC01FC15FEA2EC00FFA3127EB4FCA3EC01FEA24814FC0078130300
7CEB07F86CEB0FF0390FE01FE06CB512800001EBFE0038001FF0202F7CAD28>I<EC01C0
14031407A2140F141F143FA2147F14EFEB01CFA2EB038FEB070FA2130E131C1338A21370
13E0A2EA01C0EA0380EA0700A2120E5A121812385A5AB712C0A3C7380FC000A84A7E0107
B51280A3222F7DAE28>I<EAFFF8A4EAF000B3B3B3A7EAFFF8A40D4578B317>91
D<EAFFF8A4EA0078B3B3B3A7EAFFF8A40D457EB317>93 D E /Fm
11 107 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<16C04B7EB3AC007FBA1280
BB12C0A26C1980C8D801E0C9FCB3A9007FBA1280BB12C0A26C198042427BC14D>6
D<007FBA1280BB12C0A26C1980C8D801E0C9FCB3A9007FBA1280BB12C0A26C1980C8D801
E0C9FCB3AC6F5A42427BB14D>I<007FBA1280BB12C0A26C1980CEFCB0007FBA1280BB12
C0A26C1980CEFCB0007FBA1280BB12C0A26C1980422C7BAE4D>17
D<19E0F003F0180FF03FE0F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8
EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CA
FCEB07FCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FC
EA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007F
E0ED1FF8ED07FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE94
3800FF80F03FE0F00FF01803F000E01900B0007FB912E0BA12F0A26C18E03C4E78BE4D>
20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038
007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF80EE3FE0EE0FF8
EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF0A2F03FE0F0FF8094
3803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FCED1FF8ED
7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC04848CBFCEA
07FCEA1FF0EA7FC048CCFC12FC1270CDFCB0007FB912E0BA12F0A26C18E03C4E78BE4D>
I<49B4EF3FC0010F01E0923803FFF8013F01FC030F13FE4901FF92383FE01F48B66C9139
7E0007C02603F80301E0D901F8EB01E02807E0007FF049486D7E01806D6CD907C0147048
C76C6C494880001EDA07FE49C87E001C6E6C013E150C486E6D48150E71481506486E01E0
160793387FF1F0006092263FF3E08193381FFBC000E004FF1780486F4915017090C9FC82
707F8482717E844D7E6C4B6D1503006004EF1700933803E7FE0070922607C7FF5DDC0F83
7F003004816D140E00384BC6FC0018033E6D6C5C001C4B6D6C143C6C4BD91FFC5C6C4A48
6D6C5C6DD907E06D6C13036C6C49486D9038E00FE0D801F0013FC890B55A27007C03FE6F
91C7FC90263FFFF8031F5B010F01E0030313F8D901FECAEA7FC0592D7BAB64>49
D<1706170F171FA2173EA2177CA217F8A2EE01F0A2EE03E0A2EE07C0A2EE0F80A2EE1F00
A2163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7FCA2153EA25DA25DA24A5AA24A5A
A24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133E
A25BA25BA2485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A1260305C72C600
>54 D<0403B712F8043F16FE4BB9FC1507151F157F912601FC0090C7EA07FE912603F001
ED01FCDA07C04915F0DA0F80EE0080021F1800EC3F004A495A5C5C495A4A495A5C495A6D
C7FC90C8485AA35F161FA34C5AA35F167F94B612C0A293B7FC624B93C7FC19FC04FCC712
70030392C8FC5EA24B5AA2150F5E151F5EA24B5AA24BCBFCA215FEA24A5AA24A5AEA0180
000F495AEA1FC0486C485AD87FF05B39FFFC1F80D87FFF90CCFC14FE6C5B6C13F06C5B00
031380D800FCCDFC50477EC348>70 D<0060170C00F0171EB3B3A66C173EA20078173C00
7C177C007E17FC003E17F86CEE01F06D15036C6CED07E06C6CED0FC0D803F8ED3F80D801
FEEDFF0026007FC0EB07FCD93FFCEB7FF8010FB612E001031580D9007F01FCC7FC020713
C0373D7BBA42>91 D<126012F0B3B3B3B3B3A81260046474CA1C>106
D E /Fn 12 119 df<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E
120C121C5A5A12600916788718>59 D<1518153C157CA2157815F8A2EC01F0A215E01403
A2EC07C0A21580140FA2EC1F00A2141E143EA25CA2147814F8A2495AA25C1303A2495AA2
5C130FA249C7FCA2131E133EA25BA2137813F8A2485AA25B1203A2485AA25B120FA248C8
FCA2121E123EA25AA2127812F8A25A12601E457BB329>61 D<EB01F8EB0FFE90383E0F38
90387C07FEEBF8033803F001D807E05BEBC000000F1301D81F805BA2EA3F001403485C12
7EA2140700FE5C5AA2020F13F015C016E0A2007CEB1FC1023F13C0EC7F816C9038FF8380
391E01EFC33A0F0787C7003907FF03FE3901F800F824207C9E2B>97
D<137EEA1FFE123F5B1201A35BA21203A25BA21207A25BA2380FE1FCEBE7FF9038DF0780
9038FC03E0381FF00101E013F013C0EC00F8485AA290C7FCA2481301A2127EA2140300FE
14F05AA2EC07E0A2EC0FC0A2007CEB1F80EC3F00003C133E003E5B6C485A380F83E03803
FF80D800FCC7FC1D317CAF23>I<EB01C0EB07E0130FA314C0EB038090C7FCA9EA01F0EA
03FCEA0F1F121E001C138012381278EA703F140012F0485A137EEA00FE5BA212015B1203
5BA20007137813E01470120FEBC0F014E013C1EB81C0EB83803807C700EA03FEEA00F815
307DAE1C>105 D<153815FC15FE140115FC140015701500A9147E903801FF80903803C7
C090380703E0010E13F0131C133C1378EB700713F001E013E0A2EB000FA215C0A2141FA2
1580A2143FA21500A25CA2147EA214FEA25CA21301A25CA2130300385BEAFE075C495A48
485A49C7FCEAF07CEA7FF0EA1FC01F3E80AE21>I<EB0FC0EA03FF5A5CEA003FA391C8FC
A25BA2137EA213FEA25BA20001141FED7FC09039F801E1E0EC03810003EB0F07EC1C0FEB
F0381470000701E013C09039F1C007804948C7FC01EFC8FCEA0FFCA2EBFFE0EBCFF8381F
C1FEEBC07EEB807F80003FEC01E0A2010014C0A24814031680127EED070000FE131FEC0F
8E48EB07FC0038EB01F023317CAF2A>I<3907C001FC3A0FF007FF803A1CF81E07C03A38
7C7803E0D97EF07F38787FE00070EBC001148000F0EB0003EAE0FEA25B0000140700015D
5BA2150F00035D5B151FEE83C00007143F49EC0380A2ED7F07000F027E1300495C160EED
3E1C001F5D49EB0FF00007C7EA03C02A207D9E31>110 D<013E133F9039FF80FFC03A01
E7C3C1F09039C3E780F83A0383FE00784A137C260703F8133E5C1307120F000E5BA2D800
0F147EA25CA2011F14FE16FC5CA2013FEB01F8A291380003F0A249EB07E016C09138800F
80ED1F009038FFC03E9038FEE0F89038FC7FE0EC1F80000190C8FCA25BA21203A25BA212
07A2387FFF80B5FC91C8FC272D819E29>112 D<903901F8018090380FFE0790391F078F
0090387C03DF496CB4FC48487E48485B485A000F147E484813FE5D48C7FCA2481301007E
5CA300FE1303485CA314075DA2007C130F141F003C495A003E137F6C13FF380F83DF3903
FF1F80EA00FC1300143F92C7FCA35C147EA214FEA290383FFFF0A3212D7C9E25>I<3907
C007E0390FF01FF8391CF8781C393C7CE01E39387FC07E0078EB80FE00701300A2D8F07E
13FCD8E0FE1378491300A2120012015BA312035BA312075BA3120F5BA3121F5B0007C8FC
1F207D9E25>I<01F81307D803FEEB1F80EA071F260E0F8013C0121CD8381F130FA20070
1407133F00F0903800038012E05BD8007E1307160013FE5B5D0001140E5B151E151C153C
484813381578000114705DEBF8014A5A6C6C485AD97E0FC7FCEB1FFCEB07F022207D9E28
>118 D E /Fo 39 119 df<EC03FC91381FFF8091387E07E0903901F801F0903907E000
FC4948017E130FEB3F8049C76C130E01FE15804848021F131E4848161C000716C049163C
000F17384848EDE078040F1370485A18F018E0484815E118C0EFE38000FF16E790C81400
17EF17FE5F5A5F5F5FA4127E163F007F157F6C03FF133C6CEC03C76DD9078713386C6C90
391E03F0786C6C01F814F03C01F007E001F9E03C007FFF80007FC0D91FF8C7EA1F00382D
7CAB40>11 D<14FE902603FFC01478010F7F013F01F814F04916E090B56C1301486E14C0
48018714032707F800FF1480D80FE0013F13070180D91F80130048C7120F003E6E6C5A00
3C0203130E48161E0301131C0070EDE03C0300133800F01678C9137016F0EE70F05F1671
5FA21673EE7B80167F70C7FCA3163EA35EA21678A31670A316F0A25E1501A44B5AA31507
5EA44BC8FCA4150EA2150C35417FAB34>13 D<010FB712F0013F16F85B48B8FC4817F048
17E09027E00F0038C7FC380F800ED81F001478001E131E48157048131C007015F000F013
3C1260C712381478150102F85B14F0A21301A2ECE0031303A201078014C0130FA2148013
1F82133F14005B825B496D7EA21201495C491300D800701470352C7DAA39>25
D<177F0138913801FFC00178020713F049021F13F848484A13FC48485C499138FF01FE00
07913901FC007E90C701F0133E484A48131F000E4A5A001E4B130F001C4AC7FC150E003C
141E0038021C1407153C0338140F00784A140E1270A24B141E00F0171C4A5A183C18784A
5A18F0007016010078010715E0EF03C0007C91C712076CEE1F80003F49EC3F00D81F8015
7E01E04A5A260FF81EEB07F8D807FEEC1FF03B03FFFE01FFE06C90B612806C6C92C7FC6D
14FC010714F0010114809026007FFCC8FC02FCC9FCA25CA21301A3495AA31307A25C130F
A4495A130F6D5A38417BAB41>39 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00
0B0B788A1C>58 D<121FEA3F80EA7FC0EAFFE0A313F0A2127FEA3FB0EA1F301200A41370
1360A213E013C0A2120113801203EA07001206120E5A5A12300C1E788A1C>I<19E0F003
F0180FF03FE0F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF
80DB07FEC8FCED1FF8ED7FE0913801FF80DA07FCC9FCEC1FF0EC7FC04948CAFCEB07FCEB
1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF3800
7FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED
07FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F0
3FE0F00FF01803F000E03C3A78B54D>I<160C161E163EA2163C167CA2167816F8A216F0
1501A2ED03E0A216C01507A21680150FA216005DA2153EA2153C157CA2157815F8A25D14
01A24A5AA25D1407A25D140FA292C7FC5CA2143EA2143C147CA2147814F8A2495AA25C13
03A25C1307A25C130FA249C8FCA2131E133EA2133C137CA2137813F8A2485AA25B1203A2
5B1207A25B120FA248C9FCA2121E123EA2123C127CA2127812F8A25A126027647BCA32>
I<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FE913801FF809138007FE0ED1FF8ED03FE923800FF80EE3FE0EE0FF8EE03
FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF0A2F03FE0F0FF80943803
FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0
913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC04848CBFCEA07FC
EA1FF0EA7FC048CCFC12FC12703C3A78B54D>I<ED3FE0913803FFFC91380FC03F91391E
000F800278EB07E04AEB01F049488049486D7E4A147C0107157E49C87E14E06E1580011F
151FA218C0A25C6D4815E090C9FCA74AB4FC020F13C091393F00F03F02FC1338D903F013
1C4948130ED91FC0EB067F4948010713C049C7120313FE484815FF00031780485A000F81
5B001F1700495C123F5F127F5B4C5AA212FF495D160F5FA290C8485AA24C5A5F167F94C7
FC16FE7E4B5A4B5A6C6C495A001F4A5A6D495A6C6C495A6C6C01FEC8FC3903FC03FCC6B5
12F0013F1380D907FCC9FC33497CC635>64 D<932601FFC01306041F01F8130E93B500FE
131E03039039803F803E923B1FF80007C07CDB7FC0903801E0FC4BC812F1DA03FE157BDA
07F8ED3FF8DA1FF0151FEC3FC04A48150F4AC913F049481607495A495A010F18E0494816
03495A137F4A17C0495A5A91CAFC481980485AA2485A96C7FCA2485AA2123F5BA3127F5B
A45B12FFA31970A219F0007F60A21801611803003F6018076D4CC7FC001F170E181E6C6C
5E606C6C5E6D4B5A00034C5A6C6C4B5A6C6C031FC8FC6D6C143CD93FE014F8D90FF8EB07
E0D903FFEB3F800100D9FFFEC9FC023F13F80203138047487CC547>67
D<027FB712C091B812FC19FF9128007FF0000113C06F489038003FE0037FED0FF8737E4C
6E7E1901737E03FFEE7F805EF23FC0A24AEF1FE093C9FCA21BF05C4B160FA314074B17F8
1A1FA2140F4B17F0A3141F4B163FA3023F18E04B167FA3027F18C04B16FF1B80A202FF5E
4B17006162496092C91207624F5A49171F4A5F4F5A4F5A01074DC7FC4A5E4E5AF007F801
0F4C5A4A4B5AF07FC0011F4CC8FCEF03FE4AEC1FF8017FEDFFE0B9128005FCC9FC17C04D
447DC352>I<027FB9128091BAFCA29126007FF0C7120F6F4802001300037F82864C81A2
8615FF5EA34A170E93C9FCA35C4B1438A218780207037090C7FC5DA218F0020F5D4B1301
17031707021FEC1FC092B6FCA3913A3FF0003F804B130FA21707027F92C9FC5DA25F02FF
020E14E05D1901624992C7FC92C912036219074995C7FC4A5E190E191E13074A5E197C61
130F4A15014E5A011F160F4E5A4A15FF017F030F5BBAFCA26149447DC34A>I<027FB812
FE91B9FCA29126007FF0C7121F6F48EC03FC037F150119004C157CA21A3C15FF5EA34A17
3893C9FCA35C5D183818780207037013005DA218F0020F5D4B1301A21703021F4A5A4B13
3F92B6FCA24A5D9238E0003F170FA2027F92C8FC4B7FA25F02FF140E5DA2171E49151C92
CBFCA35B5CA313075CA3130F5CA2131FA3EB7FFCB7FCA347447DC340>I<4CB46C130C04
1F01F0131C93B500FC133C0307D9003F137CDB1FF890380F80F8DB7FC0EB03C14A48C7EA
01E3DA03FCEC00F7DA0FF8ED7FF04A48153FEC3FC04A48151F4948C913E04948160F495A
495AF107C0495A495A495A01FF18805C5A91CAFC481900485AA2485A96C7FC121F5BA212
3F5BA3127F5BA4485A4CB612E05E1AC093C7EBF000725AA2127F61A218FF61A2123F6D5D
A2001F95C7FC7F000F5E6C6C5E17076C6C150F6C6C151F6C6CED3EFC6D6C147CD93FE090
3801F07CD90FF8EB07E06DB490383F803801019039FFFE0018D9003F01F890C8FC020313
8046487CC54E>I<91B612FCA39139007FF8005E5EA25EA315FF5EA35C93C7FCA35C5DA3
14075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF5DA35B92C8FCA35B5CA313075CA3
130F5CA2131FA2133F137FB612FCA32E447DC32C>73 D<027FB500FC0103B512F091B6FC
A29126007FF8C8387FFE00DB3FE0ED3FF0037F17C098C7FC4C157C624F5A03FFED03C04C
4A5A071FC8FC193E4A167893C85AF003E0F007804A4BC9FC4B141E187C18F002074A5A4B
EB07C04D5A051ECAFC020F143E4B13FE4C7E5E021F5BDBF01F7F5E04787F023F5BDBE3E0
7F9238E7C07FEDEF00DA7FFE6D7E5D03F06D7E5D4A5A4B6D7EA2717E5B92C77F83A2496F
7F5C717FA213074A6F7EA2727E130F5C727E131F854A4B7ED97FF84B7EB600FC010FB512
FCA24B5E54447DC355>75 D<027FB6FC91B7FCA29126007FF8C8FC6F5A4B5AA25EA315FF
5EA35C93C9FCA35C5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA302FF16204B15
70A219F04917E092C8120119C0A24916034A16801807180F010717004A5D181E183E010F
167E4A5D1701011F15074D5A4A147F017F913803FFF0B9FCA2603C447DC344>I<91267F
FFF094387FFFF891B57E99B5FCDA007F4DEBF000033F19C0037F5FF3077FDB73FC601B0E
F31CFF15F303E34D90C7FCA21B71912601E1FE16E103C160F201C1F20383140303819338
0703FC1A0EDB80FF16070207171C4B04385BA2F2700F5C020E05E05BF101C0706C151F02
1EEE0380021CDC07005BA2070E133F023C5E023861706C5B1B7F02785E02704C5CA24E48
13FF02F04B5A4AD91FE093C8FC4EC7FC060E5B13014A4B5C601A0301036E6C5A4A6060DD
F1C01307130791C7D9F3805C05F7C7FC70B4140F495D010E4B5D131E4D141F133F494B5D
2603FFC06D48EC7FF0B693B612F85F4A4A5E65447DC361>I<91267FFFF00203B512F891
B56C5CA29126003FFC9139001FFE00F207F0634B6C6F5A1577DB73FF5E1A0703F17F03E1
94C7FCA203E06D5C14014B6C6C140EA2706C141E1403DB801F151C831A3C02076D7E0300
1638707E1A784A1303020E6E1470A2706D13F0141E021C6D6D5BA2057F1301023C15E002
385FEF3FF019030278EC1FF802705F170FF0FC0714F04ADA07FE90C8FCA2716C5A13014A
6E138EA2199E01036F13DE4A16DCF07FFCA20107163F91C95BA2181F5B010E705A131E18
07133F49705A3803FFC0B6FC18014A5E55447DC350>I<027FB712C091B812F819FF9128
007FF0000313806F489038007FE0037FED1FF0F10FF84C1407F103FC03FF16FEA25E1AFF
5CA293C8FCA25CF107FE5DA2020717FC190F4B16F8F11FF0140FF13FE04BED7FC0F1FF80
021F4B1300F003FC4BEC0FF8F03FE0023F913801FF8092B648C7FC18E003E0CAFC147FA2
5DA214FFA25DA25BA292CBFCA25BA25CA21307A25CA2130FA25CA2131FA25CEB7FF8B612
FCA25D48447DC340>80 D<DCFF8013C00307EBF001031FEBFC0392397F007F07DA01F8EB
0F8F4A48903807CF80DA0FC0EB03FF4A487F4AC8FC023E16004A8114FC494881183E495A
A213074A153CA3130F6E1538A36E92C7FC80806E7E6D13F015FF6D14E016FE6D6E7E6D15
E06E14F86E80140F020380DA007F7F1507ED007F040F7F16038282177FA2173F1207A448
94C7FCA2120E177E121F177C17FC5F486C14014C5A6D5D4C5A486C4A5AD87EF0023FC8FC
D87CFC147E013F495A3AF81FE00FF0D8F007B512C0D8E00191C9FC39C0001FF83A487BC5
3D>83 D<90BA12E05A1AC048D98001EBC000D9FC004A131F01F0170F484892C712075B49
491680120F90C7491403120E001E02071507A2001C5D003C19000038140FA200785D1270
031F5D00F0180EC84991C7FCA2153FA25EA2157FA25EA215FFA25EA25CA293CAFCA25CA2
5DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA214FF01037F003FB7FCA343
437EC23A>I<007FB500F091383FFFFEB6FC5DC601F8C8000313C002E0923801FE006D48
6F5A61614E5A6E5E4E5A133F4EC7FC180EA260183C6E153860131F604D5AA24D5A17076E
92C8FC170E130F5F5FA25F17F06E5C4C5A010714035F4CC9FCA2160E161E6E131C5E0103
147816705EA24B5AECFF035E4BCAFC6D5B150E5DA25D15F85D5D7F5D5DA292CBFCA25C5C
147C1478147047467BC33A>86 D<B6D8E007B60107B512C06361000101F0C7000F018090
39007FF8006C01C04BC8EA1FE04A6E485E765A9AC7FC1C1E1C1C1C3C1C38050F5E80051F
5E84017F033F4B5A1B0305735E05F34BC8FC17E30401160E17C3DC03835DA2DC07035D1B
78040E1670041E5E6E131C04384B5A013F8204704B5A71140704E093C9FC0301160E16C0
DB03805DA2DB07005D1A78030E16701AF04B5EDAF03C4B5A15384BED8380131F4B0387CA
FC71138FDAF1C0158E02F3169C5D02F7C813B8A202FE16F0A24A5E615C615C6D4893CBFC
A24A5D187E4A157C187891C9FC010E167062467BC35E>I<EC0FC0EC7FF8903901F83C1C
903907E00E7F90380FC00F49486C5A90387F000301FE5C484813015B120348485C120F49
1303121F5E485A1507127F495CA2150F12FF90C75BA2151FA2485DA2033F13381778EE80
70A2157F17F09238FF00E0007E5B4A1301003ED907BF13C0003F90380F3F036C011E1480
3A0F803C1F073B07C0F00F8F003A01FFC007FE6C6CC712F82D2D7CAB35>97
D<EB0FF0EA07FF5AA238001FE0130F131FA25CA3133F5CA3137F91C8FCA35B5BA312015B
EC0FE0EC3FF80003EBF83E9038F9E01F9039FB800F80D9FF0013C0484813074914E05BA2
484814F05BA3121F5BA2150F123F5BA2151F007F15E090C7FCA2153F16C0127E00FE1580
157FA2007EECFF005DA24A5A4A5A5D003E495A003F130F6CEB1F806C6C48C7FC147E3803
C1F83801FFE0D8003FC8FC24467CC42B>I<EC03FC91381FFF809138FE03C0903903F000
F049481378D91FC01338494813F890397F0003FC01FE1307485A4848EB0FF812075B000F
EC07F04848EB03C092C7FC485AA3485AA312FF90C9FCA45AA51618163C1678007E15F8ED
01F06CEC03E0ED07806C6CEB0F006C6C133E3907E001F83901F00FE026007FFFC7FCEB1F
F0262D7CAB2B>I<EC07FCEC3FFF9138FE07C0903903F003E090390FC001F090381F8000
017FC7FC01FE1478485A000315F84914F0485A000F1401484814E015034848EB07C0ED1F
80EDFE00007FEB1FF890B512C002F8C7FC0180C8FC12FF90C9FCA55AA4007E1518163C16
78007F15F86CEC01F0ED03E06C6CEB0780000FEC0F006C6C133E3903E001F83901F00FE0
26007FFFC7FCEB1FF0262D7CAB2E>101 D<157F913801FFC0913907C0E0E091391F8073
F891387E003B4A133F4948131F010315F04948130F495AA2494814E0133F4A131F137F91
C713C05B163F5A491580A2167F1203491500A25EA2495CA21501A25EA21503A200014A5A
150F0000141F6D133F017C495A90383E01E790381F07CF903807FF0FD901FC5B90C7FC15
1FA25EA2153FA25E121ED87F8049C7FCA200FF14FE4A5A4A5A49485A48495A48495A007E
017FC8FC381FFFF8000313C02D407FAB30>103 D<140EEC3F80147F14FFA4EC7F00143C
91C7FCAE133FEBFFC03801C3E0380381F0EA0701000E7F121E121CEA3C031238A2EA7007
5CA2EAF00F00E05BEA001F5CA2133F5CA2137F91C7FC5B5BA212015BEC03C00003148013
F81207EBF0071500A2EBE00EA25C143C143800035B3801F1E06CB45A013FC7FC1A447DC2
22>105 D<EB01FE13FF5AA2380003FC13011303A25CA313075CA3130F5CA3131F5CA313
3F5C163EEEFF80017F903803C1C09139000F07E0ED1C0FED381F49EB703F4913E0EC01C0
DA038013C00001EB0700D9FC0EEB0F004A90C7FC5C00035B495AEBF9C0EBFB8048B4C9FC
8014F8EBF3FE390FF07F809038E01FE06E7E1407001F80EBC003A2EE03C0003F16801380
A21607007F1600010013F05E160E5A485D14015E486D6C5AED3FE00070EC0F802B467AC4
34>107 D<01F8EB03FCD803FE90380FFF803B078F803C07C03B0F0FC0F003F0390E07C1
C0001C9039E38001F8ECE700003C13EE003801FC80130F00785B00705BA226F01FE01303
00E05E5C1200013F14075F5CA2017F140F5F91C7FC161F495DA249143F5F00011778047F
13704915005E00034B13F018E05B9338FC01C01207EF03804915071800EE7C0E49EC3E3C
EE1FF8D80380EC07E0352D7DAB3C>110 D<EC03FC91381FFF8091387E07E0903901F801
F0903907E000FCD91FC0137E495A49C77E13FE484815804848141F000716C05B120F485A
A2485A163FA2485AA2167F00FF168090C8FCA216FF17005A4B5AA25E15035E4B5A007E4A
5AA2007F4A5A6C4A5A4BC7FC6C6C13FC6C6C485A3907E007E03901F01F8026007FFEC8FC
EB1FF02A2D7CAB30>I<D901F0EB0FC0D907FCEB7FF8D90F1FEBF07E011E903883C01F90
273C0F8780138001389038CE000F03DC14C0017001F8EB07E05D141F01F04914F001E05B
A20001133F13C05DC7FC027F140FA292C7FCA24A141F18E05CA20101153F18C05C188001
03157F18004A5C5F010714015F4C5A5F496C495A4C5A6E495A02EE49C7FCD91FE7137E91
38E3C1F89138C1FFE0DAC07FC8FC013F90C9FCA25CA2137FA291CAFCA25BA25BA21201A2
1203387FFFFCB5FCA2343F84AB32>I<91390FE0018091383FF8079138F81C0F903A03F0
0E1F00903907C0073FD91F8013FF49487E495C01FE13015B120148485C12075B000F1403
5E485AA2003F1407495CA3007F140F495CA3151F90C75B5AA2153F6C5DA2127E007F147F
4BC7FC6C5BA25C6C6C485A000F131E3807C03C3803E0F93900FFE1FCEB3F01130014035D
A314075DA3140F5DA2141FA2143F011FB512C05BA2293F7DAB2C>I<01F8EB0FE0D803FE
EB3FF83A078F80F03C3A0F0FC1C07E3A0E07C780FE001CEBEF01ECEE03003C13FC1238D9
0FF813FC007813F00070EC00F04A1300EAF01F12E05C1200133FA25CA2137FA291C8FCA2
5BA25BA21201A25BA21203A25BA21207A25BA35BA2EA0380272D7DAB2D>I<EC0FF8EC7F
FF903901F80780903907C001E090390F8000F049C71270133EED03F8491307A201FCEB0F
F0A3ED07C06D90C7FC7F14E014FF15E06D13F86D7F6D7F6D7F01031480EB003F14019138
007FC0153F151F120FD83FC0EB0F80127FA2151F48481400A290C7123E127C00705C0078
5C6C495A6CEB03C03907C01F802603FFFCC7FC38007FE0252D7BAB2F>I<013F1407D9FF
C0EB1F802601C3E0EB3FC0380381F0D80701147F000E7F001E153F001C151FD83C03140F
12381607EA70075CA2D8F00FEC038000E05BEA001F4A13071700133F5C5E017F140E91C7
FCA2161E49141C5B5EA2167848481470A25E12004B5A15036D5C4BC7FC017E130E6D5B6D
6C5A90380FC0F0903803FFC0010090C8FC2A2D7DAB30>118 D E
/Fp 79 123 df<163CA2167EA216FFA24B7FA24B7FA24B6C7EA292380E3FF0A24B6C7EA2
4B6C7EA24B6C7EA29238F003FF15E002016D7F15C002036D7F5D02076E7E92C7FC4A6E7E
140E021E6E7E141C023C6E7E143802786E7E147002F06E7E5C01016F7F5C01036F7F5C01
07707E91C9FC49707E130E011E707E131C013C707E13380178707E137001F0707E5B0001
7113805B00037113C05B0007F07FE090CBFC48F03FF0120E001EF01FF8001FBAFC4819FC
A24819FEA2BCFCA348477BC653>1 D<BA12C0A3D87FF0C8123F6D030113E0003FEE003F
6C6C161F6D160F000F17076C6C16036E15016C18F06C6D15006C7FA26D6C16706D7EA26D
6C16786D6C1638A26D7E6D6D1500A26D7F6D7F81147F6E7E81141F6E7E8180806E5AA26E
5A15785D4A5A4A5A4A5A4ACAFC5C023E1638143C5C4A167849481670495A495A010F17F0
49CAFC131E4916014917E0491603484816074848160F4848161F000F173F90C9EA01FF00
1E163F003FB912C05ABAFCA23D447BC348>6 D<9239FFC001FC020F9038F80FFF913B3F
807E3F03C0913BFC000F7E07E0D903F89138FC0FF0494890383FF81F4948EB7FF0495A49
4814E049C7FCF00FE04991393FC0038049021F90C7FCAFB912F8A3C648C7D81FC0C7FCB3
B183486C4A7EB5D8FE1FB512E0A33C467EC53A>11 D<EDFF80020F13F091383F807C9138
FC001ED903F87F49486D7E4948133F4948497E495A49C7FCA25B496E5A70C7FC93C8FCAC
EE1FC0B8FCA3C648C7127F163F161FB3B0486C4A7EB5D8FE1FB512C0A332467EC537>I<
DBFFC0EB0FF8020F01F890B5FC913C3F807C03F807C0913CFE000F0FC001E0D903F8903A
07BF8000F0494802FFC712784948D91FFEEB03F849484948497E49485C017F5D91C7FC5B
494B6D5A040F6E5A96C8FCACF101FCBBFCA3C648C7390FE0000719031901B3B0486C4A6C
497EB5D8FE0FB500E1B512FCA34E467EC553>14 D<001FEB03E0393F8007F0397FC00FF8
39FFE01FFCA301F013FEA2007F130F393FB007F6391F3003E60000EB0006A40170130E01
60130CA201E0131C491318A2000114384913300003147048C712E0000614C0000E130148
EB038048EB0700003013061F1E7DC432>34 D<121FEA3F80EA7FC0EAFFE0A313F0A2127F
EA3FB0EA1F301200A413701360A213E013C0A2120113801203EA07001206120E5A5A1230
0C1E78C41C>39 D<1406140E141C143814F014E01301EB03C0EB0780EB0F005B131E133E
5B137813F85B1201A2485AA2485AA2120F5BA2121FA290C7FCA25AA3123E127EA65AB3A2
127EA6123E123FA37EA27FA2120FA27F1207A26C7EA26C7EA212007F1378137C7F131E13
1F7FEB0780EB03C0EB01E0130014F01438141C140E1406176476CA27>I<12C07E12707E
121E120E120F6C7E6C7E6C7E7F12007F137C133C133E131E131FA2EB0F80A2EB07C0A214
E01303A214F0A21301A214F8A3130014FCA6147EB3A214FCA614F81301A314F0A21303A2
14E0A2130714C0A2EB0F80A2EB1F00A2131E133E133C137C5B5B12015B485A485A48C7FC
120E121E12385A5A5A17647BCA27>I<16C04B7EB3AC007FBA1280BB12C0A26C1980C8D8
01E0C9FCB3AC6F5A42427BB94D>43 D<121FEA3F80EA7FC0EAFFE0A313F0A2127FEA3FB0
EA1F301200A413701360A213E013C0A2120113801203EA07001206120E5A5A12300C1E78
8A1C>I<B612C0A61A067F9821>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B
0B788A1C>I<160C161E163EA2163C167CA2167816F8A216F01501A2ED03E0A216C01507
A21680150FA216005DA2153EA2153C157CA2157815F8A25D1401A24A5AA25D1407A25D14
0FA292C7FC5CA2143EA2143C147CA2147814F8A2495AA25C1303A25C1307A25C130FA249
C8FCA2131E133EA2133C137CA2137813F8A2485AA25B1203A25B1207A25B120FA248C9FC
A2121E123EA2123C127CA2127812F8A25A126027647BCA32>I<ECFF80010713F090381F
C1FC90383F007E017C131F496D7E48486D7E00038148486D7EA248486D7EA2001F81A200
3F81A2491300A2007F81A600FF1680B3A3007F1600A5003F5D6D1301A3001F5DA2000F5D
6D130300075DA26C6C495A6C6C495AA2D8007C49C7FC013F137E90381FC1FC903807FFF0
0100138029447CC132>I<1438147814F81303130F137FB5FC13F71387EA0007B3B3B049
7E497E007FB61280A3214278C132>I<EB03FE90381FFFE0017F13F83901F807FE3903E0
01FF26078000138048C7EA7FC0001EEC3FE0001CEC1FF0003C15F80038140F007815FC00
701407127CB415FE7F7F1503A46C4813076CC7FCC8FC16FCA2150F16F8151F16F016E015
3FED7FC01680EDFF005D4A5A4A5A4A5A5D4A5A4A5A4AC7FC147E5C5C495A495A4948130E
495A49C7FC013E141C133C5B5BD801C0143C485A48C8127848B612F85AA25A5AB712F0A3
27427BC132>I<49B47E010F13F090383F01FC9038F8007FD801E0EB3FC048486D7E4848
8048C7120F6D8013E0486C806D1307A56C48130F6C485CC8FCA25E151F5E4B5AA24B5A03
FEC7FC4A5AEC03F0EC1FC090380FFF8015F090380001FCEC007FED3FC06F7E6F7E6F7E82
A26F7E82A2811780A3121FEA7FC0A2487EA317005D5B6C485C007EC7FC00784A5A6C5D6C
140F6C4A5AD807C0495AD803F0EB7F802701FE01FFC7FC39007FFFFC010F13F001011380
29447CC132>I<ED01C015031507A2150F151FA2153F157FA215FF15DF1401EC039F151F
1407140E140C141C14381430147014E014C01301EB038014005B130E130C131C5B133013
705B5B1201485AA248C7FC120EA25A5AA25A5AB812E0A3C8383FC000AC157FEDFFF091B6
12E0A32B437DC232>I<00061560D807C0EB03E001FCEB3FC090B6128016005D5D5D15E0
1580D91FF8C7FC90C9FCAD14FF010713E090381F01F8903838007E497F49148049EB1FC0
49EB0FE090C7FC0006EC07F0C8FC16F8A2ED03FCA316FEA5123EEA7F8012FF7FA34914FC
A248C71207007015F8A20078EC0FF01238003C15E06C141FED3FC06CEC7F80D807C0EBFF
003903E001FC3901FC07F839007FFFE0011F1380D903FCC7FC27447BC132>I<EC03FCEC
1FFF9138FC03C0903901F001E0903907E00070D90F80137849C7FC013EEB01FC017E1303
491307485A12035B00076E5A48486D5A92C8FC121FA25B123FA3127F5BEC3FC0903881FF
F8903883C07C39FF87003F018E6D7E019C6D7E01B86D7E01B06D7E01F080496D7EA24980
A26F7EA3491580A4127FA66C7EA21700121F5D5E6C7E5E6C6C130300035D6D495A00014A
5A6C6C495A017F495A6D6CB4C7FC90380FFFFC010313F09038007F8029447CC132>I<12
1C121EEA1FC090B712E0A34816C0A2178017005E003CC8121E485D1638007015785E4B5A
5E4814034B5A93C7FCC85A151E5D153815785D5D14014A5AA24A5AA2140F92C8FC5CA214
3EA2147EA25CA31301A31303A25CA21307A6130FAA6D5AEB01C02B457BC232>I<ECFF80
010713F090381F80FC90383C001F01F06D7E48486D7E48486D7E6F7E484880150048C8FC
167C5AA37FA27F16FC6D5C7F6C6C495A01FE1303D9FF805B6C6D485A6C9038F00F806E48
C7FC6CEBFE3C6CEBFFF86D13E0131F6D13F801037F4913FFD91F7F7FD93C1F13E0D9F80F
7F2601F0037F48486C7F3907C0007F48486D7E48C7120F486E7E003E14014880EE7F8016
3F5A161FA2160FA46C1600127C5E007E151E6C5D6C157C6D14786C6C495AD807F0495AD8
01F8EB0FC06CB4017FC7FC90383FFFFC010F13F00100138029447CC132>I<ECFF800107
13F090381F80F890383E003E01FC7F48486D7E48488000076E7E484880001F1403498000
3F140182485AA28212FF150082A61780A4007F5CA36C7E5D121FA26C6C5B000714066C6C
130E6C6C5B6C6C5B017E5B90261F81E01300903807FFC0903801FE0090C8FC5D5EA35EA2
15035EEA07C0486C495A487E4B5A5E151F49495A4949C7FC6CC7127E4A5A3907C003F839
03F00FE06CB512806C6C48C8FCEB0FF029447CC132>I<121FEA3F80EA7FC0EAFFE0A5EA
7FC0EA3F80EA1F00C7FCB3A3121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B78
AA1C>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCB3A3121EEA3F80EA7F
C012FFA213E0A3127F123FEA1F601200A413E013C0A312011380120313005A1206120E5A
1218123812300B3E78AA1C>I<007FBA1280BB12C0A26C1980CEFCB0007FBA1280BB12C0
A26C198042187BA44D>61 D<16F0A34B7EA34B7EA24B7EA34B7EA34B7F151CA2033C7FED
387FA203787FED703FA203E07F161FA2DA01C07F160FA24A486C7EA34A486C7EA3020E6D
7EA34A6D7FA2023C810238147FA20278810270143F027FB6FC91B77EA202E0C7121F0101
824A140FA20103824A1407A249C87F1703A2010E6F7EA3496F7FA2133C013E83137E48B4
83000701C0020313F8B500FC91B612F0A344477DC64B>65 D<B87E17F817FEC6903AE000
01FF806D489038003FE0013F6F7E717E717E717E717EA2711380A219C0A3187FA218FFA2
1980A25F19005F604D5A4D5A4D5AEF7FC04C48C7FCEE1FFC91B612F017FE02C0C7EA7FC0
EF1FE0EF07F8717E717E8471138019C0187F19E0183FA219F0A819E0187F19C018FF1980
5F4D13004D5A4D5A017FED3FF8496CECFFE0B912804DC7FC17F03C447CC347>I<DB07FF
1418037F01E013380203B500F8137891390FFE00FEDA3FE090380F80F8DAFF80EB07C149
48C7EA01E14948EC00F3D90FF8157FD91FE0153F4948151F017F160F4948150791C9FC48
481603120348481601A248481600A248481778A2123F5B1938127FA319005B12FFAC127F
7FA21938A2123F7FA2001F187819706C7EA26C6C17F019E06C6C1601000118C06C6C1603
6E16806D6C15076D6CED0F006D6C151E6D6C5DD903FC5D6D6C5D6D6C6CEB03E0DA3FE0EB
0FC0DA0FFE017FC7FC0203B512FCDA007F13F0030790C8FC3D487BC548>I<B812C017F8
17FFC69026F0000113C06D489038003FE0013FED0FF8EF03FC717EEF007F727E727E8572
7E727EA2727EA2727EA285841A80A3F17FC0A41AE0AD1AC0A4F1FF80A31A006061A24E5A
A24E5A4E5AA24E5A4E5A4E5A4EC7FCEF03FEEF0FF8017FED3FF0496C903801FFC0B9C8FC
17F817C043447DC34C>I<BAFCA3C601F0C7121F6D4802011380013FED007F183F181F18
0F1807A2F003C0A31801A419E09338038000A31900A41607A2160F161F167F91B6FCA391
38E0007F161F160F1607A21603A31938A3197093C8FCA419F0A219E0A21801A21803A2F0
07C0A2180F181F187F017FED01FF496C141FBA1280A33D447DC344>I<B912FCA3C601F0
C7123F6D48EC07FE013F1501EF007EA2183E181EA284A384A419801803EE0380A295C7FC
A51607A2160F161F167F91B6FCA39138E0007F161F160F1607A21603A793C9FCB0497E49
7EB7FCA339447DC341>I<DB07FE143092267FFFC013700203B500F813F091390FFC00FC
DA3FE0EB1F01DAFF80EB07834948C7EA03E3D907FCEC01F7D90FF0EC00FF4948157F4948
153F4948151F01FF160F4890C9FC49160700031703485AA248481601A248481600A2123F
5B1970127FA34994C7FC12FFAD4CB612E06C7EA293C7387FF800725A003F171FA27F121F
A26C7EA26C7EA26C7E12017F6C7F6D7E013F163F6D7ED90FF8157F6D6C15F7D901FEEC01
E36D6C6CEB03C1DA3FE0EB0F80DA0FFE90387F00700203B500FC1330DA007F01E090C7FC
030790C9FC43487BC54E>I<B6D8F801B612F0A3C601F8C70001EBF0006D486E5B6D486F
5AB3A891B8FCA302E0C8127FB3AB496C4B7E496C4A7FB6D8F801B612F0A344447DC34B>
I<B612FEA339007FFC006D5A6D5AB3B3B3A4497E497EB612FEA31F447EC324>I<010FB6
12C0A3D90003EBE00002005B157FB3B3AA120EEA3F80487E487EA44B5A5B007F92C7FCEB
000100785C6C495A6C5C6C495A6C6C485A3901F03F8026007FFEC8FCEB1FF02A467CC333
>I<B600F80107B512E0A3C601F8C8EBFE006D48ED7FF06D48ED3FC096C7FC183E60604D
5A4D5A4D5A4D5A4DC8FC173E5F5F4C5A4C5A4C5A4C5A4CC9FC163E5E5E4B5A4B7E4B7E15
0F4B7E4B7E5D03F97FDAE1F07FECE3E09139E7C07FE09139EF803FF0ECFF004A6D7E4A6D
7E5C4A6D7E4A6D7EA2707F707FA2717E717EA2717E717EA2717E717EA2717F717FA2727E
8585496C82496C4AB5FCB600F8011F14F8A345447DC34D>I<B7FCA3C601F8C9FC6D5A6D
5AB3B3181CA4183C1838A51878A318F0A217011703A21707170F173F017F15FF496C0107
13E0B9FCA336447DC33E>I<B500F094B512F0A3C66D4CEBF000017F61D93BFC933803BF
C0A3D939FEEE073FA2D938FF160EA36E6C151CA26E6C1538A36E6C1570A36E6C15E0A26E
6CEC01C0A36E6CEC0380A26E6CEC0700A36E6C140EA26F6C5BA36F6C5BA26F6C5BA36F6C
5BA36F6C485AA26F6C485AA36F6C48C7FCA2923800FF0EA3EE7F9CA2EE3FF8A3705AA213
7C705A48B44E7E000701C06D484A7EB500FE93B612F0A2705A54447DC35B>I<B500E002
07B512F08080C66C6C9139003FFE00013FEE0FF86EED03E080013B705A01397F8113386E
7E81143F6E7E6E7EA26E7E6E7EA26E7F6E7FA26F7E6F7E82151F6F7E8215076F7E178081
6F13C017E0167FEE3FF0EE1FF8A2EE0FFCEE07FEA2EE03FF701381A27013C1EF7FE118F1
173FEF1FF918FD170FEF07FFA28383A283187F183FA2017C161F180F48B4FC000701C015
07B500FE1503A2180144447DC34B>I<ED0FFC92B512C0913907F807F891391FC000FE02
7FC7EA3F8002FCEC0FC0D903F8EC07F049486E7E49486E7E49486E7E4948157F49C96C7E
01FE707E00018449160F0003844848707EA2000F84491603001F84A24848707EA3007F19
80A24982A300FF19C0AD6C6C4C1380A4003F1900A26D5E001F60A26C6C4C5AA20007606D
160F0003606D161F0001606C6C4C5A6D6C4B5A013F94C7FC6D6C15FE6D6C4A5A6D6C4A5A
6D6C4A5A6D6C4A5AD9007FEC3F80DA1FC001FEC8FC913907F807F80200B512C0DB0FFCC9
FC42487BC54D>I<B87E17F817FEC6903AF00003FF806D489038007FE0013FED1FF0EF07
F8717E717E84711380A219C0187FA219E0A719C0A218FF198019005F604D5A4D5AEF1FF0
EF7FC0DC03FFC7FC91B612FC17E002E0CAFCB3A9497E497EB612F8A33B447DC344>I<ED
0FFC92B512C0913907F807F891391FC000FE027FC7EA3F8002FCEC0FC0D903F8EC07F049
486E7E49486E7E49486E7E4948157F49C96C7E49834848707EA24848707E000784491607
000F84491603001F84A2003F844982A2007F1980A34982A200FF19C0AD007F19806D5EA3
003F1900A36C6C4C5AA2000F606D16070007606DD903F0130F0003DA0FFC5CED1C0F6C6C
903A3803801FE06C6CD93001495A6D90267000C05B90263F80606D48C7FCD91FC0EC60FE
D90FE0EC71FCD907F0EC73F8D903F8EC3FF0902601FC705C9026007F301480DA1FF801FE
C8FC912707FC07FC14600200B512DE92380FFC1E92C7FC051F14E084050F13019538C003
C0F0E007F0F81F95B5FC711480A37114006183715BF03FF0F00FC043597BC54D>I<B712
F8EEFF8017F0C69039F0001FFC6D48EB01FF013F9138007FC0717EEF0FF084717E717EA2
8483A285A696C7FCA25F60604D5A170FEF1FE04D5A4D5ADC01FEC8FCEE1FF891B612C094
C9FC9139E0003FE0EE07F8707E70B4FC707F177F84717EA2717EA784A71A3884170FA21A
78496C6E6C1370496C1403B600F8010114E0943800FF0195383F83C0CB380FFF80953801
FE0045467DC349>I<49B4EB0180010FEBE003013FEBFC079038FE00FED801F8EB1F8FD8
03E0EB07CF4848EB03FF48487F48C8FC167F003E153F127E161F007C150F12FCA21607A3
7E16037EA27F6C6C91C7FC7F7FEA3FFCEBFFC06C13FC6CEBFFC015FC6C14FF6C15C0C615
F06D80011F80010380D9007F7F02071480EC007F030713C015019238007FE0163F161F17
F0160F12E01607A21603A37EA217E07E16077E17C06C150F6C16806DEC1F006D5C6D147E
D8F9F85CD8F87E495A3AF01FE00FE06DB55AD8E00191C7FC39C0001FF82C487BC537>I<
003FB912F8A3903BF8003FF8003F01C06D48130790C71501007EEF00FC007C187CA20078
183CA20070181CA648180EA5C81600B3B3A44B7EEDFFFE0107B712C0A33F437CC248>I<
B600F80107B512F0A3C601F8C8383FFE006D48ED0FF86D48ED03E0A2725AB3B3A7180301
1F5F80A2010F160796C7FC6D6C5D180E6D6C151E606D6C15386D6C15786E6C5C6E6CEB03
E06E6C495ADA07F8011FC8FCDA01FE13FE9139007FFFF8031F13E0030390C9FC44467DC3
4B>I<B6D8C007B500FE010FB51280A3000301F0C7001F01800100EBF8006C01C06E48C8
EA3FE06C0407705A765A017F030394C7FCA280013F6F6C150EA26E191E011F4B6D141CA2
6E193C010F4B6C6C1438A36D6C020F6D5CEF0E3FA26D6C021E6D5CEF1C1FA26D6C023C6D
495AEF380FA26F17036D4B6C6C5CA26F1707027F4A6C6C91C8FCA36E6C48486C6C130EA3
91261FF0036F5A4D7EA291260FF8076F5A94C7127FA203FC17780207010E91383FE070A2
03FE17F00203496E6C5AA203FF16F16E4991380FF9C0A36E01F8EDFF804C80A2037F94C9
FC4C80A2033F5E4C1401A36F486E5AA36FC91278A361467EC366>87
D<001FB812C0A39126C00001138049C7FC01F04A1300494A5A5B494A5A90C8121F5F003E
4B5AA2003C4B5A4C5AA24B5B00384A90C7FCA24B5AA24B5AC8485AA24B5A4B5AA24B5A5C
5E4A90C8FCA24A5A4A5AA24A5A4A5AA24A5A14FF5D495BEF01C04990C7FC495AA2495A49
4814031880495AA2495A495A1707485B4890C8FC170F485A000F161F49153F4848157FEF
FF0048485C4848140F93B5FCB9FCA332447BC33D>90 D<EAFFFEA4EAF000B3B3B3B3B3A2
EAFFFEA40F6476CA1C>I<01C01318000114384848137048C712E0000614C0000E130148
EB03800018140000385B00301306A20070130E0060130CA200E0131C481318A439CF8019
F039DFC01BF839FFE01FFC01F013FEA2007F130FA3393FE007FC391FC003F8390F8001F0
1F1E71C432>I<EAFFFEA4EA001EB3B3B3B3B3A2EAFFFEA40F647ECA1C>I<EB07FC90383F
FF809038FC07E03903E001F839078000FC48C7127E01C0137F486C6D7E6D6D7EA36F7EA2
6C5AEA0380C8FCA4EC07FF91B5FC903807FE0FEB3FE0EBFF00EA03FC485A485A485A485A
A2485A177012FF90C7FCA2151FA36D133F007F14776D01E313603B3FE001C3F0E03B0FF0
0381F9C03A07F80F01FF2701FFFC00138026001FF0EB3E002C2E7CAC32>97
D<13FE12FFA3120312011200B315FF020713E091381F01F8913878007E4A7F6D48EB1FC0
4A6D7E4A6D7E91C77F16034981160183A28382A21880AB18005EA25FA24C5AA26D5D4C5A
6E495A6E5C01F94A5AD9F8F049C7FCD9F07813FE91383E03F89039E00FFFC090260001FE
C8FC31467EC437>I<EC7FC0903803FFF890380FC07E90393F000F80017EEB03C049EB01
E0D803F81307ED0FF04848131F120F485AA2485AED0FE0007FEC038092C7FC5BA212FFAB
127F7FA2123F16386C7E16786C6C147016F06C6C14E0000314016C6CEB03C06C6CEB0780
013FEB0F0090380FC07C903803FFF09038007F80252E7DAC2C>I<EE3F80ED3FFFA31500
167F163FB3EC3FC0903801FFF890380FE03E90383F800F90397E0003BF49EB01FF48487F
12034848147F4848143F121FA2485AA2127FA25B12FFAB127FA27F123FA2121F7F000F15
7F7F000715FF6C6C5B6C6C497FD8007E903807BFE06D90391E3FFF8090380FC07C903803
FFF09026007F80EB800031467DC437>I<14FF010713E090381F81F890387E00FC49137F
4848EB3F800003141F484814C04848EB0FE0A2121F49EB07F0123FA2007F15F85BA200FF
1403A390B6FCA20180C8FCA6127FA37F123F1638121F6D1478000F15706C6C14F016E06C
6C13016C6CEB03C0D8007EEB07806DEB1F0090380FC07C903803FFF09038007F80252E7D
AC2C>I<EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F495A
A2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467DC51E>I<
EE0FC0D901FEEB3FF090390FFFC0F0903A3F03F1C1F890397E01FF813A01FC00FE014848
137F4990383F00600007ED8000000F8149131FA2001F81A7000F5DA26D133F00075D0003
92C7FC6D5B6C6C13FE9038FE01F83903BF03F090388FFFC0260701FEC8FC90CAFCA47FA2
7F7F6CB512F8EDFF806C15F06C816D14FE48B7FC2707E000071380D80F80EB007F48C8EA
1FC0003E150F48150717E0481503A56C1507007C16C0007E150F003E16806CED1F006C6C
143ED807E014FCD801F8EB03F0D8007FEB1FC0011FB5C7FC010113F02D427DAC32>I<13
FE12FFA3120312011200B3ED7F80913803FFF091380781FC91381E00FE0238137F4A7F4A
805C01FF6E7E5CA291C7FCA35BB3A8486C4A7EB5D8FE1FB512C0A332457DC437>I<EA01
F0487E487E487EA56C5A6C5A6C5AC8FCAD13FE127FA3120312011200B3B0487EB512FCA3
16447DC31C>I<147C14FE497E491380A56D13006D5A147C91C7FCADEC7F80EB3FFFA313
00147F143FB3B3AA123E127F39FF807F00A2147EA25C6C485A383C01F0381F03E03807FF
80D801FEC7FC195885C31E>I<13FE12FFA3120312011200B3A292380FFFFEA3030313E0
94C7FCED01FC4B5A16E04B5A4B5A4BC8FC153E15785DEC03E04A5A140F4A7E4A7E147FEC
F3F89038FFE3FCECC1FE14804A7E496D7E49133F826F7E150F6F7E826F7E1501826F7E70
7EA217E0486C4A7EB5D8FC07EBFF80A331457EC435>I<13FE12FFA3120312011200B3B3
B3A5487EB512FEA317457DC41C>I<D801FCD97FC0EB07FC00FF902601FFF890381FFF80
91260780FE9038780FE0913C1E007F01E007F000030138903A3F838003F800014990391F
87000100004902CE804A14CC01FDDA0FFC6D7E4A5C13FF91C75BA3495DB3A8486C4A6C49
7EB5D8FE0FB500E0B512FEA34F2C7DAB54>I<D801FCEB7F8000FF903803FFF091380781
FC91381E00FE00030138137F0001497F000049805C01FD6E7E5C13FF91C7FCA35BB3A848
6C4A7EB5D8FE1FB512C0A3322C7DAB37>I<EC7FC0903803FFF890380FC07E90393F001F
80017E6D7E01F8EB03E000018148486D7E48486D7E000F8149147E001F157FA2003F1680
49143F007F16C0A400FF16E0AA007F16C0A36C6CEC7F80A2001F1600A26C6C14FE00075D
6D13016C6C495A00015DD8007EEB0FC06D495A90260FC07EC7FC903803FFF89038007FC0
2B2E7DAC32>I<01FE13FF00FF010713E091381F01F891387800FE000349137FC66C48EB
3FC04A6D7E4A6D7E91C76C7EA2496E7EA283160183A3701380AB4C1300A35F16035F1607
6D5D4C5A6E5C6E495A4C5AD9FEF049C7FC027813FE91383E03F891380FFFC0DA01FEC8FC
91CAFCAE487EB512FEA3313F7EAB37>I<91393FC001C0903901FFF803903807F03E9038
1FC00F90397F00038701FEEB01C74848EB00EF000315FF4848147F485A001F153F5B003F
151F5B127FA3485AAB6C7EA3123F7F121F6D143F120F6C6C147F16FF6C6C5B6C6CEB03DF
D8007FEB079F90393F800F1F90380FE07C903803FFF09038007FC091C7FCAEEE7FF0031F
B512C0A3323F7DAB35>I<3901FC01F800FFEB0FFEEC1E1F9138383F8000039038707FC0
000113E0000013C013FD1480ED3F8001FFEB0E0091C8FCA45BB3A67F487FB6FCA3222C7E
AB27>I<90381FF0183901FFFC383907E00F78390F8007F8381E00015A007C1300007814
78A212F81538A27E7EA26C6C1300EA7FE013FE383FFFF06C13FE6CEBFF806C14E0000114
F06C6C13F8010F13FCEB007FEC07FE140100E0EB00FF157F153F7E151FA27EA2151E7E15
3E6C143C6C147C6D13F839FBC001F039F0F00FC039E07FFF0038C00FF8202E7DAC27>I<
130EA6131EA4133EA2137EA213FE120112031207001FB512F8B6FCA2C648C7FCB3A4150E
AA017E131E017F131CA26D133C90381F8038ECC070903807E0E0903801FFC09038007F00
1F3E7EBC27>I<01FEEC1FC000FFEC1FFFA30003EC007F0001153F0000151FB3A8163FA3
167FA2017E14FF017F14DF6D01017F913980039FF0903B1FC0071FFFC0903807F01E9038
01FFF89026003FE0EBC000322D7DAB37>I<B500F090B5FCA3000790C7EA3FF86C48EC1F
E00001ED0FC00000168017007F6D140EA26D6C5BA26E133C011F1438A26D6C5BA26E13F0
01075CA26D6C485AA2ECFC0301015CA26D6C48C7FCA26E5AEC7F0EA2159EEC3F9CA2EC1F
F8A36E5AA26E5AA36E5AA2302C7EAA35>I<B500F0B539E03FFFE0A3000790280007FE00
071300D803FC6D48EB01FC03015D0001170003005D6C7E4B6C5CA2017F4C5A4B7E16BFD9
3F804B5A03071380041F1307D91FC093C7FC030F13C0DB0E0F5BD90FE0150E031E13E091
26F01C07131E0107161C033C13F09126F83803133C01031638037813F89126FC70011378
010116709238E000FC02FE15F001005E6E48137E177F027F5D4B133F023F5DA292C7121F
6E92C8FCA2021E80020E140E432C7EAA48>I<277FFFF803B5FCA30003D9E00013F0C649
EB7F806D4891C7FC6D6C137C011F14786D6C5B6E5B903807F8010103495A6D6C485AD900
FE90C8FC6E5AEC7F1EEC3FBCEC1FF85D140F14076E7E4A7EA24A7EEC1E7F023C7F913838
3FC0EC781F4A6C7ED901E07F49486C7EEC800301076D7ED90F007F496D7E013E80017E81
48B481000F6DEBFFF0B5D8C003EBFFC0A3322B7FAA35>I<B500F090B5FCA3000790C7EA
3FF8D801FEEC1FE0EE0FC0000016801700137F160E6E131E013F141CA26D6C5BA26E1378
010F1470A26D6C5BA2ECF80101035CA26D6C485AA2ECFE07010091C7FCA2EC7F0EA2159E
EC3F9CA2EC1FF8A36E5AA26E5AA36E5AA25DA2140792C8FCA2140EA2141E003C131C127E
B45BA25C14F0485B387C01C038780780D83E0FC9FCEA0FFCEA03F0303F7EAA35>I<003F
B612F0A29038E0001F018014E0003EC7EA3FC0003CEC7F8015FF003815000078495A1403
5D0070495A4A5AA24A5A4A5AC7127F5D4AC7FC5B5C495A495A130F5C49481370133F5C49
5A49C712E0A2485A485A1207491301485A001F14035B4848EB07C04848131F00FF14FF90
B6FCA2242B7DAA2C>I E /Fq 72 124 df<EC0FF8EC7FFF903901FC07C0903907E001E0
90391F8000F090393F0003F8017E130713FE5B12015B6F5A92C8FCA9ED01F8B7FCA33901
F800031501B3A8486C497E3B7FFFE07FFFE0A32B387FB72F>12 D<EC1F80EC7FC0ECF0F0
903803E0704A7E130790380F803C151CA2131F1400A21480153C1538157815705DA2ECC1
C090380FC38002C7CAFC14CE02FC91B512C06D5A5C94381FFC000103ED0FE06E6E5A0107
5E496C92C7FC011D5DD938FE141E0170151CD9E07F143CD801C05D00036D6C1370D80780
6D13F0260F001F495A48D90FE05B48ECF003003E0107495A007ED903F890C8FC6F5A00FE
903801FE1E02005BED7F784CEB03806C143F6F5A6F6C13076C6C6E14006D496C5B6C6CD9
3CFE130E6C6C9039F87F803E3C0FF807E03FE07C0003B539800FFFF8C69026FE000313E0
D91FF09038007F803A3B7DB842>38 D<121C127FEAFF80A213C0A3127F121C1200A31201
1380A2120313005A1206120E5A5A5A12600A1879B618>I<146014E0EB01C0EB0380EB07
00130E131E5B5B13F85B485AA2485AA212075B120F90C7FC5AA3123EA45AA612FCA25AAC
7EA2127CA67EA47EA37E7F12077F1203A26C7EA26C7E7F13787F7F130E7FEB0380EB01C0
EB00E01460135078BB21>I<12C07E12707E7E7E120F6C7E6C7E7F12016C7EA21378A213
7C133C133E131E131FA3EB0F80A4EB07C0A614E0A21303AC1307A214C0A6EB0F80A4EB1F
00A3131E133E133C137C1378A25BA2485A12035B485A48C7FC120E5A5A5A5A5A13507BBB
21>I<121C127FEAFF80A213C0A3127F121C1200A312011380A2120313005A1206120E5A
5A5A12600A18798818>44 D<B512F8A515057F931C>I<121C127FEAFF80A5EA7F00121C
0909798818>I<EB07FCEB1FFF90387E0FC09038F803E03903E000F84913780007147C48
487FA248C77EA2481580A2003E140F007E15C0A500FE15E0B2007E15C0A4007F141F6C15
80A26C1500A26D5B000F143E6C6C5BA26C6C5B3901F803F039007E0FC0D91FFFC7FCEB07
FC23377DB42A>48 D<EB01C01303130F133FEA01FFB5FC13DFEAFE1F1200B3B3A5497E00
7FB512F0A31C3579B42A>I<EB1FF0EB7FFE48B57E3907E03FE0390F800FF0391E0007F8
486D7E00386D7E127800706D7E12FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14
035D4A5A4A5A4A5A5D4AC7FC147E5CEB01F0495A495A495A90391F000380133E5B017813
0701E01400485A485A48C75A48B6FC5A5A485CB6FCA321357CB42A>I<EB07FC90383FFF
809038F80FE03901E007F048486C7E48486C7ED80F007FEB8000D81FE07F7FA56C5A6C48
485AC7FC5D14035D4A5A5DEC0F80023FC7FCEB1FFCECFF809038000FE0EC03F86E7E816E
7EED7F80A216C0153F16E0A3123F487E487EA316C0157F5B6CC71380007CECFF00123C00
3E495A390F8003FC3907F00FF00001B55A6C6C1380D90FFCC7FC23377DB42A>I<153815
7815F8A2140114031407A2140F141DA214391471146114E1EB01C1EB0381A2EB0701130E
A2131C13381330137013E0EA01C0A2EA0380EA0700A2120E5A5AA25A5AB712F8A3C73803
F800AA4A7E0103B512F8A325367EB52A>I<000C140C000F143C9038F003F890B5FC5D5D
158092C7FC14FC000E13E090C9FCA9EB07F8EB1FFE9038780F809038E007E0390FC003F0
496C7E01007F000E130081C8FC157FA31680A4123E127F487EA3160090C7FC485C00705C
A20078495A7E003E495A6C495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE02137
7CB42A>I<EC3FC0903801FFF0903807E03C90381F801E90383E000F495B49EB3F804848
137F1203485AA24848EB3F00001F141E4990C7FC123FA3127F90C9FCEB01FC903807FF80
39FF1E07E090383801F0496C7E0160137C01E0137E497F16805BED1FC0A390C713E0A47E
A56C7E16C0A2001F143F16806C7EED7F006C6C137E6C6C5B6C6C485A3900FE07F090387F
FFC0011F5BD903FCC7FC23377DB42A>I<1238123C123F90B612E0A316C05A1680160000
78C7120E0070141E5D5D00F014704814F04A5A4A5AC75B14074AC7FC141E141C143C5CA2
5CA213015C1303A2495AA2130FA3131FA25C133FA5137FA96DC8FC131E23387BB52A>I<
EB03FCEB1FFF90387C07C09038F001F048486C7E4848137C4848137E000F143E90C7FC81
5AA37FA26D5B6D133E6D137ED80FFC137C6D5B3907FF81F0ECE3E06CEBF7C06C01FFC7FC
6C6C5A6D6C7E010F13E0013F7F01F913FC3901F07FFE3907C03FFF380F800F48486C1380
48010113C0003EEB007F48143FED1FE000FC140F481407A21503A46C15C0007C1407007E
1580003E140F003FEC1F00D81FC0133E6C6C5B3903FC03F8C6B512E0013F1380D907FCC7
FC23377DB42A>I<EB07FCEB1FFF90387E07C03901F803E03903F001F83807E000484813
7C001F147E4848133E153F127F90C71380A248141F16C0A416E0A56C143FA36C7E157F12
1F6C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FC153F
1680A31600000F5C486C137E486C13FE5D4A5A140301805B6C48485A001EEB1FC0260FC0
7FC7FC3807FFFE000113F838003FC023377DB42A>I<121C127FEAFF80A5EA7F00121CC7
FCB0121C127FEAFF80A5EA7F00121C092279A118>I<913803FF80021F13F09138FE00FE
D903E0EB0F80D90780EB03C0011EC812F0491578498149814848814848ED0780484801FE
EB03C0903A0007FF8001000E903A1F81E000E0001E90263E007813F0001C01FC6D137026
3C01F86D1378003849010E13380103EC07F0267807E0153C00700303131C495AA200F017
1E484848150EA96C6C7E1270A26D7E00780307130C263803F0151C0101140F003C6D131F
261C00FC013F1338001E013EEB79F8000E90261F81E013706C903A07FF807FE0903B8000
FE001F806C6C90C9FC6C7E6C7E13786D163E6DED01FED90780EC0FF8D903E0EC7FC0D900
FE90381FFC00021FB512C0020301F0C7FC37397BB742>64 D<153CA2157EA315FFA34A7F
A3913803BFC0A202077F151FA2020F7FEC0E0FA2021C7F1507A24A6C7EA202787FEC7001
A202F07F4A7EA249486D7EA349486D7EA201078191B6FCA24981010EC7120FA2496E7EA3
496E7EA201788101701401A201F08182120100031780D80FFC4A13C0B56C013F13FFA338
397DB83F>I<B712E016FE707E000190C7EA7FE06C48EC0FF0707E707E707E8382A21880
A2177FA217FFA218005E5F4C5A4C5A4C5AEE3FC04BB45A90B600FCC7FC16FF49C7EA1FE0
EE07F0EE03FC707E707EEF7F80A218C0173F18E0A7EF7FC0A2EFFF80A24C13004C5AEE0F
FC486CEC3FF8B812E0178004F8C7FC33367DB53C>I<4AB46C13C0020FEBF001027FEBFC
03903A01FF803F07903A07FC000F87D90FF0EB03CFD91FC0EB01FFD97F807F49C8127F48
48153F4848151FA24848150F48481507A2485A1703123F5B007F1601A35B00FF93C7FCAC
127F6DED01C0A3123F7F001F160318806C7E17076C6C16006C6C5D170E6C6C151E6C6C5D
6D6C5CD91FC05CD90FF0495AD907FCEB07C0902701FF803FC7FC9039007FFFFE020F13F0
02011380323A7BB73D>I<B712E016FE707E0001903980007FE06C90C7EA0FF8EE03FC70
7EEE007FEF3F80EF1FC018E0170FEF07F0A218F8170318FCA2EF01FEA418FFAB18FEA317
0318FCA218F8170718F0170F18E0EF1FC0EF3F80EF7F0017FEEE03FCEE0FF8486DEB7FE0
B812804CC7FC16F038367DB541>I<B812FEA30001903880000F6C90C8FC177F838383A2
83A4EF038016E0A394C7FCA21501A21503150F91B5FCA3EC000F15031501A21500A21870
A393C712E0A51701A218C01703A21707170F171F177F486D903803FF80B9FCA334367DB5
3A>I<4AB46C13C0020FEBF001027FEBFC03903A01FF803F07903A07FC000F87D90FF0EB
03CFD91FC0EB01FFD97F807F49C8127F4848153F4848151FA24848150F48481507A2485A
1703123F5B007F1601A35B00FF93C7FCAA93B6FCA26C7E9338007FE0EF3FC0A2123F7F12
1FA26C7EA26C7E6C7EA26C7E6C6C157F6D7ED91FE014FF6D6CEB01EFD907FCEB07C3903A
01FF803F81903A007FFFFE00020F01F81300020113C0383A7BB742>71
D<B690B6FCA300010180010113806C90C81300B3A291B7FCA391C8FCB3A5486D491380B6
90B6FCA338367DB53F>I<B6FCA3000113806C1300B3B3AA481380B6FCA318367DB51E>I<
011FB512E0A39039000FFC006E5AB3B2121EEA7F80EAFFC0A44A5AA2EA7F80397E001FE0
00385C003C495A6C49C7FC3807C0FC3801FFF038007F8023387DB52B>I<B691B512C0A3
0001018091383FFC006C90C8EA1FE018804DC7FC173C5F4C5A4C5A4C5A4C5A4CC8FC163C
5E5EED03E04B5A4B5A4BC9FC153E157F4B7E4A7F140791380FBFE091381F1FF0023E7FEC
7C0F9138F007FC4A6C7E14C04A6C7E91C77F707EA2707E707E83160F707E707EA2707E70
7F717EA2717E84486DEC7FFCB60103B512E0A33B367DB542>I<B612C0A300010180C8FC
6C90C9FCB3AB171CA4173C1738A41778A217F8A2160116031607EE1FF0486D13FFB8FCA3
2E367DB535>I<B56C92380FFFF8A300016D92381FFC006C60D9EFE0153BA3D9E7F01573
A2D9E3F815E3A3D9E1FCEC01C3A2D9E0FEEC0383A3027FEC0703A26E6C130EA36E6C131C
A26E6C1338A36E6C1370A26E6C13E0A3913901FC01C0A2913900FE0380A392387F0700A2
ED3F8EA3ED1FDCA2ED0FF8A3486C6D5A487ED80FFE6D48497EB500E00203B512F8A2ED01
C045367CB54E>I<B50207B5FC8080C69238003FE06EEC0F8080D9EFF8EC0700A2EBE7FC
EBE3FEA2EBE1FF01E07F6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E1380A2ED7FC0ED3F
E016F0151FED0FF8ED07FCA2ED03FEED01FF178781EE7FC7EE3FE7A2EE1FF770B4FCA282
8282A28283487E83D807FC81B500E080A28338367DB53F>I<913803FF80021F13F09138
FF01FE903A03F8003F80D907E0EB0FC0D91FC0EB07F049486D7E49C76C7E01FE6E7E4848
157F4848ED3F80A24848ED1FC0000F17E049150F001F17F0A24848ED07F8A3007F17FC49
1503A300FF17FEAB007F17FC6D1507A3003F17F86D150F001F17F0A26C6CED1FE0A20007
17C06D153F6C6CED7F80000117006C6C15FE017F4A5A6D6C495A6D6C495AD907E0EB0FC0
D903F8EB3F80902700FF01FEC7FC91381FFFF002031380373A7BB742>I<B712E016FC16
FF0001D9800013C06C90C7EA1FE0EE07F8707E1601838382A21880A61800A25E5F4C5A5F
4C5AEE1FE0EEFF8091B548C7FC16F891CAFCB3A3487FB6FCA331367DB53A>I<913803FF
80021F13F09138FF01FE903A03F8003F80D907E0EB0FC0D91FC0EB07F049486D7E49C76C
7E01FE6E7E4848157F4848ED3F80A24848ED1FC0000F17E049150F001F17F0A24848ED07
F8A3007F17FCA2491503A200FF17FEAB007F17FCA26D1507A2003F17F8A26C6CED0FF0A2
000F17E06D017C131F000749B414C0903AF80383803F0003DA00C013806C6C489038E07F
002600FE06EB70FE017FEC71FCD93F86EB3BF8D91FC6EB3FF0D907E714C0D903FB5C903B
00FF81FE0006EC1FFF0203139F91C7001F130EEE0F80EFC01EEFE07EEFFFFC82A218F882
18F07013E07013C0EF3F0037477BB742>I<B7FC16F016FC000190388003FF6C90C7EA7F
C0EE1FE0707E707E707E83160183A65FA24C5AA24C5A4C5AEE1FC0EE7F80DB03FEC8FC91
B512F05E91380007F8ED01FEED007F707E83707EA2707EA583A51980F001C017FC1607A2
486D0103EB0380B614FE040113079339007F0F00CAEA1FFEEF03F83A387DB53E>I<D90F
F013C090387FFE0148B512833903F80FE33907E001F7390F80007F48C7123F48141F123E
007E140F007C140712FC1503A315017EA27E92C7FC6C7E13E0EA3FF8EBFF806C13F8ECFF
806C14E0000314F86C806C6C7F011F7F01001480020F13C01400ED7FE0151FA2ED0FF015
0712E0A21503A37EA216E06C14077E16C06C140F6CEC1F8001C0EB3F00D8FBF0137E39F1
FE01FC39F07FFFF0D8E01F5BD8C00190C7FC243A7BB72F>I<003FB812F0A3D9E003EB00
1F90260001FE1303007EEE01F8007C160000781778A200701738A548171CA4C71600B3AD
913807FF80010FB612C0A336357DB43D>I<B60107B5FCA3000101809038003FE06C90C8
EA0F80A2EF0700B3B05F6D6C140EA2171E013F151C6E143C011F15386D6C14786D6C5C4C
5AD901FC495A6D6CEB0F8091267FC07FC7FC91381FFFFC020713F09138007F8038387DB5
3F>I<B5D8F801B500F090387FFFC0A3000790C7000F90C7380FFE006C48DA07FCEC03F8
000103036F5A63707E6C6C61A2836D6C4D5A5E846D6C4DC7FC4C7F053F5C6D6C170E040F
7F6ED90E1F141E010F181C041E7F6ED91C0F143C01071838043C7F6ED938071478010318
7004787F6ED9700314F001016004F07F6ED9E00113016D60030114FF922681C000130302
7F5F03831583DBC380EB7F87023F94C8FC03C715C703E7C7EA3FCF021F16CE03EEEC1FEE
03FE15FE020F5E4B140F02075EA24B140702035EA24B140302015EA24B140102005E5238
7EB557>87 D<007FB590381FFFFCA3C601F8010313C0D97FE06D48C7FC013F15F86D6C6D
5A6E495A010F5D6D6C13036D6C495A4CC8FC6D6C130E6DEB801E5E91387FC03891383FE0
785E91381FF1E091380FF9C0EC07FF5E6E90C9FC80A26E7F6F7EA24B7E824A7FEC03CFED
87FC91380703FE140F91381E01FFDA1C007F143C4A6D7E02706D7E4A800101141F49486D
7E4A6D7E130749C76C7E011E6E7EA2017E6E7F01FF8200076D010313F0B500E0010FEBFF
C0A33A367EB53F>I<B500FE91381FFFF0A3000301E002071300C649EC03F8017F6F5A6E
5D013F4B5A6D6C5D17076D6C4AC7FC6D6C140E171E6D6C5C6E14386D15786D6D13706F5B
027F1301DA3FE05B6F485A021F1307DA0FF890C8FC5E913807FC1E913803FE1C163C6E6C
5A5E806F5A5E153FB24B7E023FB512C0A33C367FB53F>I<003FB71280A39026FC000113
0013E00180495A90C7485A123E003C4A5A007C4A5A12784B5A4B5AA200704A5A5C93C7FC
4A5AC712075D4A5AA24A5A4A5AA24A5A4A5AA24990C8FC495AA2495A4948EB01C0A2495A
133F5C495A01FF14035C4890C7FCA2485A4848EC0780A24848140F4848141FA24848147F
4848EB01FF150FB8FCA32A367BB534>I<EAFFFCA4EAF000B3B3B3B2EAFFFCA40E5078BB
18>I<EAFFFCA4EA003CB3B3B3B2EAFFFCA40E507FBB18>93 D<EB3FE03801FFFC3803E0
3F390F800FC06D6C7E486C6C7E8114018114006C5AC8FCA414FF130FEB7FC03801FC00EA
07F0EA0FC0485A48C7FC5A007E151C12FE5AA21401A26C1303007E147C007F010713183A
3F801E3E383A0FE0783FF03A03FFF01FE03A007F8007C026257DA32A>97
D<EA03F012FFA312071203AFEC1FE0ECFFFC9038F3F03F9039F7800FC09039FF0007E001
FC6D7E6F7E496D7E5B167E167FA2821780AAEE7F00A2167EA25E7F6D495A4B5A01EF495A
9039C7800F809026C3E03FC7FC903880FFFCC7EA1FE029387EB62F>I<EB03FE90381FFF
C090387E01F09038F8007CD803F013FC3907E001FEEA0FC0A2EA1F80123F90C712FC4814
00A2127E12FEAA127FA215076C7E001F140F6D130E000F141E6C6C133C6C6C13786C6C13
F039007E03E090381FFF80903803FC0020257DA326>I<ED07E0EC01FFA3EC000F1507AF
EB03FC90381FFF8790387E03E79038F800F7D803F0133F4848131F4848130F485A150748
C7FCA25AA212FEAA127E127FA27E6C6C130FA26C6C131F6C6C133F6C6C497E6C6C9038F7
FF8039007E07C790381FFF07D903FCEBE00029387DB62F>I<EB03FC90381FFF8090387E
07E03901F801F048486C7E4848137C4848137E4848133E153F48C77EA2481580A2127E00
FE140FA2B7FCA248C9FCA5127E127FA26CEC03807F001F14076C6C14005D6C6C131E6C6C
5BC66C5B90383F03E090380FFF80D901FEC7FC21257EA326>I<147F903803FFC0903807
C1F0EB1F8390383F07F8137EA213FCEC03F03901F801E091C7FCACB512FCA3D801F8C7FC
B3A9487E387FFFF0A31D387EB71A>I<ED03E090390FF00FF890393FFC3C7C9038F81F70
3A01F00FE0FC3A03E007C07C3A07C003E078000FECF000EB8001001F80A7000F5CEBC003
00075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C0
15FC6C14FF6C1580000715C03A0F80003FE0003FC7EA07F0007E1403007CEC01F812FC48
1400A4007CEC01F0007E14036CEC07E06C6CEB0FC0D807E0EB3F003901FC01FC39007FFF
F0010790C7FC26357EA32A>I<EA03F012FFA312071203AFEC0FF8EC3FFE9138F01F8090
39F1C00FC09039F38007E0EBF70001FE6D7E5B5BA35BB3A2486C497EB500C0B512C0A32A
377DB62F>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3A848
7EB51280A311367DB517>I<14E0EB03F8EB07FCA5EB03F8EB00E01400AA14FC133FA313
031300B3B11218127EB4FCEB01F8A214F038FE03E0EA7C07383E0F80380FFF00EA03F816
4684B51A>I<EA03F012FFA312071203B0913803FFFCA36E13C0913800FE005DEC01F04A
5A4A5A4AC7FC141E147C5CEBF1FC13F3EBF7FEEBFF7F496C7EEBFC1F496C7E01E07F6E7E
14036E7E816E7E157E81168016C0486C14F0B56CB5FCA328377DB62D>I<EA03F012FFA3
12071203B3B3AA487EB512C0A312377DB617>I<2707E00FF0EB1FE000FFD93FFCEB7FF8
913AF03F01E07E903BE3C01F87803F3D07E7000FCE001F80D803E614CC01EED907FCEB0F
C001FC5C495CA3495CB3A2486C496CEB1FE0B500C1B50083B5FCA340237CA247>I<3903
E00FF800FFEB3FFE9138F01F809039E1C00FC03A07E38007E03803E70001EE6D7E13FC5B
A35BB3A2486C497EB500C0B512C0A32A237DA22F>I<EB03FE90381FFFC090387E03F090
38F800F8D801E0133C48487F0007141F4848EB0F8048C7EA07C0A24815E0A2007EEC03F0
A300FE15F8A8007E15F0A2007F14076C15E0A26C15C06D130F6C6CEB1F80000715006C6C
133ED801F813FC39007E03F090381FFFC0D903FEC7FC25257EA32A>I<3903F01FE000FF
EBFFFC9038F3F03F9039F7800FC03A07FF0007E0D803FC6D7E6F7E498049130082167FA3
EE3F80A9167F1700A2167E16FE5E6D13016D495A5E01FF495A9039F7801F809026F3E07F
C7FC9038F0FFFCEC1FE091C9FCAA487EB512C0A329327EA22F>I<3803E01F00FFEB7FC0
9038E1E3E09038E387F03807E707EA03E613EE9038EC03E001FCC7FC5BA35BB3487EB512
E0A31C237EA221>114 D<EBFF83000313EF380F80FF383C003F00387F00787F127012F0
80A27E7E6C90C7FCEA7FC013FE383FFFC06C13F06C13FC00037FC67F01071380EB007FEC
1FC000E0130F1407A26C1303A37EEC07807E6CEB0F006C131E38F7C07C38E1FFF038C07F
801A257DA321>I<1370A613F0A41201A212031207120F48B5FCB6FCA2D803F0C7FCB1EC
0380A83801F8071500A23800FC0EEB7E1CEB1FF8EB07E019327EB021>I<D803F0EB03F0
00FF14FFA30007140700031403B3A21507A3150F12016D131F0000EC3BF86D903873FFC0
90383F01E390381FFF83903A03FE03F0002A247DA22F>I<B5EB1FFFA3D80FF8EB07F86C
48EB03F0000315E06D14C000011580A26C6CEB0700A26D5B017E130E017F131E6D131CA2
6D6C5AA2ECC078010F137015F06D6C5AA2903803F1C0A214FB01015BA26DB4C7FCA3147E
A2143CA228237EA12D>I<B53A07FFF01FFFA33C0FF0007F8007FC6C4890393F0003F0EF
01E06C7E18C092387F80036C6C1680A26D9038E7C0070000170016E090267E01C3130EA2
020313F0013F01815BA2020713F890261F87005BA2028EEB7C78D90FCE1470A202FCEB3E
F001075D163F6D486D5AA36D486D5AA36D486DC7FC38237EA13D>I<3A7FFF803FFFA33A
03FE001FF8000115C0D8007E5C017F011EC7FC6D6C5A011F133890380FC0786D6C5AECF1
E0903803FBC06DB45A6D90C8FC8080814A7E14FF903801E7E0ECC3F0903803C1F8903807
81FC49C67E011E137E497F017C6D7E496D7E000381D80FFC497EB46C90383FFFC0A32A22
7FA12D>I<B5EB1FFFA3D80FF8EB07F86C48EB03E0000315C07F000115806D1307000015
00A2017E130EA2017F131E6D131CEC803C011F1338A26D6C5AA26D6C5AA214F101035B14
F3903801FB80A26DB4C7FCA3147EA2143CA21438A21478147014F05C127C38FE01C0A249
5A13074848C8FCEA781EEA383CEA1FF0EA07C028327EA12D>I<003FB512FEA29038C001
FC383E0003003C14F8EC07F00038EB0FE00078131FEC3FC000701480EC7F0014FE130100
005B495A495A130F495A5C90383F8007EB7F005B5B485A4848130F12074848130E49131E
485A4848133E007F147E90380003FEB6FCA220227EA126>I<B81280A2290280952A>I
E /Fr 35 122 df<121C127FEAFF80A213C0A3127F121C1200A312011380A2120313005A
1206120E5A5A5A12600A1877881A>44 D<121C127FEAFF80A5EA7F00121C090977881A>
46 D<EB01C01303130F133FEA03FFB5FC13DFEAFC1F1200B3B3A5EB7FF0B612F8A31D35
77B42E>49 D<EB07FC90383FFF8048B512F03903F00FF839078003FE391F0001FF001E90
38007F804815C048143F0070EC1FE0127CB415F06D130FA56CC7FC121CC8FCED1FE0A216
C0153F1680157FEDFF004A5A5D4A5A4A5AEC0FC04A5A4AC7FC147C5C495A495AD9078013
7049C7FC131E4914F001F014E0485A485A4848130148B6FC5A5A4815C0B7FCA324357BB4
2E>I<150E151E153E157EA215FE14011403A2EC077E140E141CA21438147014E0A2EB01
C0EB0380EB0700130EA25B5B5BA25B485A485AA248C7FC120E5AA25A5A5AB8FCA3C8EAFE
00AA4A7E49B6FCA328367DB52E>52 D<00061403D80780131F01F813FE90B55A5D5D5D15
804AC7FCEB7FF890C9FCA9EB01FE90380FFFC090383E03F090387001F8496C7E49137E49
7F90C713800006EC1FC0C8FC16E0150FA216F0A4123E127F487EA316E090C7121F5A0070
15C00078143F16806CEC7F006C5C6C495A3907C003F83903F00FF06CB512C06C6C90C7FC
EB0FF824377BB42E>I<1238123C123F90B612FCA316F84815F0A216E00078C7EA03C000
70EC078016005D00F0141E485C5D1570C812F04A5A4A5A4A5A92C7FC5C141EA25CA2147C
5CA213015CA21303A21307A25CA2130FA5131FA96D5A6D5A26387AB52E>55
D<EB03FE90381FFFC090387C03F03901E000FC4848137E48487F48C7EA1F80150F001E15
C01507123EA3123F7F150F01E014806C6C131F01FC140001FF133E6C6D5A6CEBE1F06CEB
FBE06CEBFF806C91C7FC013F13C0010F13F0013F7F01F913FE3901F07FFF2607C01F1380
260F800713C048487E48010013E0003E143F48141FED0FF000FC1407481403A21501A46C
15E0007C1403007E15C06C14076C6CEB0F806DEB1F00D807E0137E3903FC03F8C6B55A01
3F13C0D907FCC7FC24377BB42E>I<150FA24B7EA34B7EA24B7EA34B7E15EF02017F15C7
A291380387FC158302077F1501A2020E7F81021E80021C137FA2023C800238133F027880
0270131FA202F0804A130FA249486D7EA201038191B6FCA2498191C712014981010E80A2
496F7EA2013C820138153FA2496F7EA201F0820001160F486C82D80FFCED3FFCB56C0103
B512F0A33C397CB844>65 D<DB7FE0130C912607FFFE131C021F9038FF803C913AFFE00F
E07C903A03FE0001F0D907F89038007CFCD91FE0143F4948140F4948140749C81203485A
4848150148481500A24848167C121F49163C123FA25B007F171CA348481600AC6C7E181C
A2123F7FA2001F173C6D1638120F6C6C167818706C6C16F06C6CED01E06C6C16C06D6C14
036D6CEC07806D6CEC1F00D907F8143ED903FE14F8903A00FFE007F0021FB512C0020749
C7FC9138007FF0363A7AB742>67 D<B712F8EEFF8017E00001903980003FF86C90C7EA03
FEEE00FFEF3F80717E717E717E717E717E84170084841980A3F03FC0A319E0AB19C0A3F0
7F80A3F0FF00601701604D5A17074D5A4D5A4D5A05FFC7FCEE03FE486DEB3FF8B812E017
8004F8C8FC3B367BB546>I<B6FCA3000113806C1300B3B3AA481380B6FCA318367BB522>
73 D<B56C93B51280A26E5D0001F1C0006C61D9EFE0ED03BFA2D9E7F0ED073FA2D9E3F8
150EA2D9E1FC151CA3D9E0FE1538A2027F1570A26E6C14E0A36E6CEB01C0A26E6CEB0380
A26E6CEB0700A36E6C130EA26E6C5BA26E6C5BA2037F5BA36F6C5AA292381FC1C0A29238
0FE380A3DB07F7C7FCA2ED03FEA2486C6D5AA2D80FFE4D7EB526E000F8013FB51280A216
7049367BB553>77 D<003FB9FCA3D9E000EBC00190C7397F80003F007EEF1F80007C170F
00781707A200701703A548EF01C0A4C892C7FCB3AD913801FFE00103B612F0A33A357CB4
42>84 D<B649B512C0A3000101809039000FF8006C90C8EA03E0A2715AB3B017036D6C5D
A2013F150795C7FC6D6C5C171E6D7E6D6C5C6D6C5C6D6C495A6DB4495A91393FC01F8002
0FB5C8FC020313FC9138007FE03A387BB544>I<007FB549B512C0A3C601F89039007FF8
00D93FF0EC3FC0011F6FC7FC6E141E010F5D6D6C14386D6C14786E5C6D6D485A6D5D9138
7FC0036F485A6E6C48C8FC021F131E91380FF81CEDFC3C6E6C5A02035B6E6C5A805E157F
6F7E6F7E82153F4B7EED73FEEDF3FFEC01E1DA03C07F4A486C7E03007F4A6D7E021E131F
4A6D7E02388002786D7E4A130349486D7E4948814A6D7F0107157F49C86C7E496F7E4982
01FF8200076D4A7EB500F049B512FCA33E367DB544>88 D<140E141FA34A7EA24A7EA3EC
E7E0A201017F14C3A290380381F8A201077F1400A249137E130EA2497FA2013C80013813
1F013FB5FC4980903870000F01F080491307A200016E7E5B12036F7E1207000F81486C49
7ED8FFF890381FFFE0A22B297DA832>97 D<B612C015F8390FE000FE6C48EB3F80ED1FC0
150FED07E016F0A21503A21507A216E0ED0FC0151FED3F0015FE90B512F8A29038C000FE
ED1F80ED0FC0ED07E016F0150316F8A616F0150716E0ED0FC0ED3F80486CEBFF00B612FC
15F025287BA730>I<91387F800C903903FFF01C90390FC07C3C90393E000E7C01FCEB07
FC484813034848130148481300485A001F157C5B003F153C90C8FC5A161CA212FE1600A9
007F151CA37E6D143C001F15387F000F15786C6C14F06C6C14E06C6CEB01C06C6CEB0380
013EEB0F0090380FC07E903803FFF89038007FC0262A7BA831>I<B712C0A2390FF0003F
6C4813071503A2150116E0A21500A3EC03801600A31407140F90B5FCA2EBE00F14071403
A491C71238A31670A416F0A21501ED07E0486C131FB7FCA225287BA72E>101
D<B712C0A2390FF0003F6C4813071503A2150116E0A21500A4913801C000A41403140790
B5FCA2EBE00714031401A491C8FCAA487EB512C0A223287CA72C>I<B590387FFF80A2D8
0FF0903807F8006C486D5AAF90B6FCA29038E00003B1486C497EB590387FFF80A229287C
A732>104 D<B5FCA2EA0FF0EA07E0B3B0EA0FF0B5FCA210287CA719>I<D8FFF0913803FF
C0A2D80FF8913807FC0000075EA2017C140EA26D141CA36D1438A26D6C1370A36D6C13E0
A2903903E001C0A3903901F00380A2903900F80700A3EC7C0EA26E5AA36E5AA2EC0FF0A3
486C6C5AA2D83FE049487E26FFF80390381FFFC0A232287BA73D>109
D<D8FFE090380FFF807F0007913803FE006DEB00F87F6D1470137E137F6D7E6D7E130F80
6D7E6D7E1301806D7E147E801580EC1FC0140F15E0EC07F0EC03F8140115FCEC00FE157F
153F16F0151F150F1507A2486C13031501D83FE01300EAFFF8167029287CA732>I<ECFF
C0010713F890381FC0FE90397E001F8001F8EB07C048486D7E48486D7E48486D7E000F81
49147C001F157E48C87EA2481680A2007E151FA200FE16C0A9007FED3F80A36C16006D5C
001F157E6D14FE000F5D6C6C495A6C6C495A6C6C495A6C6C495A017E495A90261FC0FEC7
FC903807FFF8010013C02A2A7BA835>I<B67E15F0390FF001FC3907E0007E81ED1F80ED
0FC0A216E0A616C0A2ED1F80ED3F00157E4A5A90B512F0158001E0C8FCAF487EB5FCA223
287BA72E>I<B512FEECFFE0390FF003F83907E0007E816F7E82150F82A55E151F5E4BC7
FC157EEC03F890B512E05D9038E007F0EC01F86E7E157E157F81A482A317E0A216C0151F
486CECE1C0B5EB07E3923803FF80C9EA7E002B297BA732>114 D<01FF13C0000313E138
0F80FB381E003F48131F0038130F007813070070130312F0A21401A27E6C90C7FCA2127F
13C0EA3FFC381FFFE06C13F86C7F000113FFD8001F138013019038001FC0140FEC07E014
03A200E01301A47EEC03C07EEC07807EB4EB0F0038F7E03C38E1FFF838C03FC01B2A7BA8
26>I<007FB71280A29039007F803F007C90383F000F0078150700701503A200F016C048
1501A5C791C7FCB3A54A7E013FB5FCA22A277DA631>I<B590380FFF80A2D80FF0903803
FE006C48EB00F8A21670B3A716F06C6C5CA200014A5A6C6C13036D495A017E49C7FC011F
131E90380FC078903803FFF09038007F8029297CA732>I<B5ECFFF8A2D80FF8EC3FC06C
48EC1F8000031600161E6C7E161C6D143C00001538A2017E5CA2017F14F06D5C1501D91F
805BA26D6C485AA2ECE007010791C7FCA2903803F00EA2ECF81E0101131C153C903800FC
38A2EC7E70A2EC7FF06E5AA26E5AA36E5AA26EC8FC2D297EA732>I<D8FFFED97FFFEB3F
FEA2D80FF8D90FF8EB0FF86C486D48EB07E0490103EC03C06C7E03071580826C6CEE0700
150FED0EFC6C6C160EED1EFEED1C7E017E5EED3C7FED383F6D5E03781380ED701FD91F80
5D9238E00FC018F0D90FC05D9139C1C007E017E1D907E15D9139E38003F117F3D903F35D
9139F70001FB17FF6DB492C7FC4A7FA201005D4A147EA2027C147C0278143C023814383F
297EA744>I<D87FFF90381FFF80A2D807FE90380FFC006C48EB07F0000115C06C6C495A
017E91C7FC017F131EEB3F806D6C5A010F5BECE070903807F0F0903803F9E0ECFBC06DB4
5A7F6EC8FCA26E7E81147F4A7EECE7F0903801E3F8EB03C1EC81FC49C67E49137F011E7F
011C80013C6D7E496D7E49130700018100036E7E000781001F4A7ED8FFFC90380FFFE0A2
2B287DA732>I<B5ECFFF8A2D80FFCEC3FC06C4815806C6CEC3E000001153C6C7E5E017F
5C6D6C5B90381FC0014B5AD90FE05B903807F0074BC7FC903803F80E903801FC1E5D9038
00FE38EC7F786E5A5D141F6E5AAE4A7E903801FFFEA22D287EA732>I
E /Fs 22 118 df<B612E0A61B067E9826>45 D<B812E017FE717EC601E0C7EA7FE06D48
EC1FF8013FED07FC717E717E71138019C0187F19E0183F19F0A3181FA2183FA219E0A218
7F19C0F0FF80A24D13004D5AEF0FF84D5AEF7FC0DC07FFC7FC91B612FCEFFFC002C0C7EA
1FF0EF07FCEF01FE943800FF80F07FC0F03FE0F01FF0A2F00FF819FC1807A219FEA719FC
180FA219F8181FF03FF019E0187F943801FFC04D1300017FED0FFE496CEC7FFCB912F018
8005F8C7FC3F447BC34D>66 D<B500F094381FFFFEA26E5FC6F2FE00017F61D93BFCEF77
F8A2D939FE17E7A3D938FFEE01C7A26E6CED0387A36E6CED0707A26E6C150EA26E6C151C
A36E6C1538A26E6C1570A36E6C15E0A26E6CEC01C0A36F6CEB0380A26F6CEB0700A26F6C
130EA36F6C5BA26F6C5BA36F6C5BA26F6C5BA36F6C485AA293387F8380A2DC3FC7C7FCA3
EE1FEEA2EE0FFCA3017C6E5AA248B46E484A7E000701C04D7EB500FE041FB512FE705AA2
57447BC363>77 D<ED0FFF92B512F0913903FC03FC913A1FE0007F80DA3F80EB1FC002FE
C7EA07F049486E7ED907F0EC00FE4948157F49486F7E013F8349486F7E49C96C7E491607
0001844848707E000784491601000F84A24848701380A34848EF7FC0A3007F19E0A24917
3FA200FF19F0AC007F19E0A26D177FA3003F19C0A26D17FF001F1980A2000F19006D5E00
07606DD901F813030003DA07FE5C6C6C903A0E078007F892381C01C06C6C903A1800E00F
F090267F80389038601FE0013F013001705BD91FC09138303F80D90FE0DA387FC7FCD907
F015FED903F8EC1DFC902600FE38EB1FF0DA7F185CDA1FFCEB7F80912703FE03FFC71218
0200B6FC030F130F92C77F05071438847213787213F0F0F801943803FC0795B5FC1AE083
1AC0A2711480721300725A725AF007F0455979C554>81 D<B712FCEEFFE017FCC69039F0
0007FF6D48010013C0013FED3FE0EF0FF8717E717E717E858385187FA285A661A218FF61
4D90C7FC604D5A4D5A4D5AEF3FC005FFC8FCEE0FFC91B612E05F9139E0000FF0EE03FCEE
00FF717EEF3FE0171F84717EA2717EA784A71A078483A21A0F496C6EEB800E496C80B600
F891387FC01C063F133C95380FF078CB3803FFE09538007F8048467BC350>I<B6D8C001
B66C90387FFFFCA3000301F8C7000701E0C7000713C0C601E06E0180020113004A6E705A
017F1B7C71177880013F711570187F6E1AF0011F715DA26E1901010F4C6C5DA26E190301
074B6D5D18CF6E1907010303036D92C7FC18876E616D03076D140E18036F181E6D030F6D
141CEF0E016F183C027F4A6C6D1338A26F1878023F4A6D6C1370A26F18F0021F4A6D6C5B
A26F1701020F4AD91FF05BA26E6C4D5A4C48EB0FF8A2DA03FE4DC8FC4C48EB07FCA2DA01
FF170E4CC7EA03FEA26E01875E048EEC01FFA2DB7FCE5E04DC6E13B8A2DB3FFC16F04C15
7FA2031F5F4C153FA2030F5F4C151FA203075F4C150FA2030394C9FC4C8166467DC36E>
87 D<B600F00203B512E0A3000149C9387FFC0026007FF8EE3FF0013FEF1FC06D6C5F01
0F95C7FC6E161E01075F6D6C16386F15786D5F6D6D5D6F1401027F5E6F4A5A023F15076E
6C92C8FC6F140E020F151E6E6C141C6F143C6E5D6E6D13707013F06E4A5A04E05B037F13
036F6C485A04F890C9FC031F5B92380FFC0E705A0307133C923803FF3817F86F5B6F5BA2
705AB3A516FF4B13F04AB612F0A34B447EC351>89 D<157015F8A34A7EA24A7EA34A7E81
A291380E3F80A2021E7FEC1C1FA24A6C7EA34A6C7EA202F07FECE003A249486C7EA34948
6C7EA201078091C77EA249B67EA24981011CC7121FA2013C810138140FA2496E7EA201F0
81491403120183486C140100074B7ED81FF84A7EB5027F13F8A335357CB43D>97
D<4AB4EB0180021FEBF00391B5EAFC0701039038007E0FD907F8EB0F9FD91FE0EB03DF49
48EB01FF01FFC8FC4848157F4848153FA24848151F4848150F121F491507123F5BA2007F
1603A3484892C7FCAB6C7EEF0380A2123FA27F001F16076D1600000F5E6C6C150E6C6C15
1E171C6C6C153C6C6C5DD93FC05C6D6CEB03E0D907F8495A902703FF807FC7FC0100EBFF
FC021F13F00201138031357BB33B>99 D<B7FC16F016FC3A03FE0003FF6C489038007F80
EE1FE0707E707E707E1601707E177FA21880173F18C0A2EF1FE0A418F0AA18E0A4EF3FC0
A21880177F180017FE16015F4C5AEE0FF04C5AEE7FC0486CD903FFC7FCB712FC16F093C8
FC34337BB23E>I<B812F0A3D803FEC7123F6C48EC07F816011600A21778A21738A3171C
1507A31700A25DA25D157F90B6FCA39038FC007F151F81A2811707A3170E92C7FCA4171E
A2173CA2177C17FC16011607486C143FB812F8A330337BB238>I<B812C0A3D803FEC7FC
6C48EC1FE0160716031601A21600A41770A2150EA21700A3151EA2153E15FE90B5FCA3EB
FC00153E151EA2150EA592C8FCAB48B4FCB512FEA32C337BB235>I<DA03FF1303021FEB
E00791B5EAF80F0103903800FE1FD90FF8EB1F3FD91FE0EB07BFD97F806DB4FC49C77E48
4880484881484881A2484881121F4981123F5BA2007F82A25B00FF93C7FCAA4BB512F86C
7EA2DB00011380003F6F1300837F121F7F120F6C7E7F12036C7E6C6C5DEB7FC0D91FE05B
D90FF8EB07DF903A03FF803F8F01009038FFFE07021FEBF80302030180C7FC35357BB340
>I<B5D8F803B512E0A3D803FEC7380FF8006C486E5AB390B7FCA301FCC71207B3A3486C
4A7EB5D8F803B512E0A333337BB23D>I<B512F8A33803FE006C5AB3B3A7487EB512F8A3
15337BB21E>I<B500F890380FFFF0A3D803FEC76C13806C48913803FC0017F04C5A5F4C
C7FC161E5E5E5EED03E04B5A4B5A4BC8FC153E5D15F014014A7E4A7E140F4A7EEC7CFF4A
6C7EEBFDF09039FFE03FC04A6C7EEC800FD9FE007F496D7E6F7EA26F7E6F7E8283707E70
7EA2707E707E83160383486C913807FF80B500F8011F13F8A335337BB23F>107
D<D8FFFEEE7FFFA26D93B5FC000318C06C1880D9DF80EC01DFA2D9CFC0EC039FA3D9C7E0
EC071FA2D9C3F0140EA3D9C1F8141CA2D9C0FC1438A3027E1470A26E14E0A391391F8001
C0A291390FC00380A3913907E00700A2913803F00EA36E6C5AA26E6C5AA3ED7E70A26F5A
A3486C6D5A487ED81FFC6D48EB3FC0B50080020FB5FCA2ED070040337BB24A>109
D<D8FFFC91383FFFE07FA2D801FF020713006EEB01FC6E6D5A1770EBDFE0EBCFF013C780
EBC3FC13C180EBC0FF80816E7E6E7EA26E7E6E7E1403816E7E140081ED7F80ED3FC0A2ED
1FE0ED0FF0150716F8ED03FC150116FEED00FF167F17F0163F161FA2160F1607486C1403
487ED81FFC1401B56C1300A2177033337BB23D>I<B612F8EDFF8016E03A03FE000FF86C
48EB03FEED00FF707E707E83161FA283A55FA24C5A5F4CC7FC16FEED03FCED1FF090B612
8003FCC8FC9038FC003FED0FC06F7E6F7E6F7E82150082A382A383A4EFC01CA2167FEFE0
3C486C023F1338B500F890381FF07893380FF8F0933803FFE0CAEA7F8036347BB23C>
114 D<90390FF0018090387FFE0348B512873907F00FEF390FC001FF48C7FC003E143F15
1F5A150F5A1507A36C1403A27E6C91C7FC6C7E7FEA3FF8EBFF806C13FC6CEBFFC06C14F0
6C80C614FE011F7F01031480D9001F13C014019138003FE0151F150FED07F0150312E015
01A37EA216E06C1403A26CEC07C06CEC0F806C6CEB1F0001E0133ED8FBFE13FC00F0B55A
D8E01F13E0D8C00390C7FC24357BB32E>I<007FB812C0A3903A8007FC003F277E0003F8
130F007C16070078160300701601A200F017E0A2481600A6C71600B3AA4A7E4A7E010FB5
12FEA333327CB13B>I<B500F890383FFFE0A3D803FEC7000713006C48EC01FC705A1770
B3AE000016F06D5DA2017E1401017F4A5A7F6D6C495A6E49C7FC6D6C131ED903F0137C90
3901FE03F89039007FFFE0021F1380DA03FCC8FC33347BB23D>I
E /Ft 36 122 df<B612FCAA1E0A7F9A26>45 D<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6
EA7FFEA2EA3FFCEA1FF8EA07E01010788F20>I<EC03C04A7E141F147FEB01FF131FB6FC
A413E1EA0001B3B3AD007FB7FCA5284178C039>49 D<903801FFE0011F13FE017F6D7E48
B612E048812607FE0713FC260FF0007FD81FC06D7E4848011F1380EA7FE06D6D13C0487E
6D6D13E0A26F13F0A46C5AA26C5A6C5AC8FC17E05DA217C05D17804B13005E4B5A5E4B5A
4B5A4A5B5E4A90C7FCEC07FC4A5A4A5A4A5A91397F8001F0ECFF005C495AD903F0EB03E0
495A495A495A49C71207017E140F90B7FC4816C05A5A5A5A5A5AB8FC1780A42C417AC039
>I<ECFFF80107EBFF80011F14E0017F14F8D9FFC07F3A01FE001FFED803F86D7E484815
80D80FFC6D13C07F6D15E0481380A66C130017C06C485B6C481580C8FC4B13005E4B5A4B
5A4B5A020713C00103B55A4BC7FC6F7E16E090C713F8ED3FFEED0FFF6F138017C06F13E0
17F0A26F13F8A217FCA2EA0FE0EA3FF8487EA2487EA317F8A25D4915F0127F494913E06C
4815C049491380D81FF84913006CB46CB45A000390B55A6C5D6C6C14E0011F91C7FC0101
13F02E427BC039>I<161F4C7E167FA216FF5D5D5DA25D5D5D5DA292B5FC5CEC03F7EC07
E7EC0FC71587141FEC3F07147E14FC14F81301EB03F0EB07E0EB0FC01480EB1F005B137E
5B5B485A1203485A485A5B48C7FC5A127E5AB912C0A5C8000FEB8000AB027FB612C0A532
417DC039>I<00061507D80FE0147F01FFEB0FFF91B6FC5E5E5E5E5E5E93C7FC5D15F815
E04AC8FC01C0C9FCA9EC7FF09038C7FFFE01DFEBFFC090B67E02C013F89039FC003FFC01
F0EB0FFE4980497F4915806CC714C0C8FC6F13E0A417F0A2EA0F80EA1FE0487E487E12FF
7FA317E05B5D6C4815C05B018015806CC74813006D5B6C6C495AD80FF0495A3A07FE03FF
F86CB612E06C5D6C6C91C7FC011F13F8010313802C427AC039>I<913801FFC0021F13F8
027F13FE49B6FC01079038C07F80903A0FFE001FC0D91FF813074948EB3FE04948137F49
48EBFFF048495A5A481300A25A5B001F6E13E0EE7FC0003FED3F8093C7FC5B127FA281EC
1FFF00FF4913E04A13F891B57E9039FDF00FFE9039FFC003FF17804A6C13C0020014E0A2
6F13F04915F8A44915FCA4127FA5123FA217F86C7EA3000F16F05D6C6C15E06C16C06C6D
481380DAE00713006C9038F81FFE013FB55A6D5C6D14E0010114809026003FFCC7FC2E42
7BC039>I<121F7F13FE90B8FCA45A17FE17FC17F817F017E0A217C048168090C8130000
7E5D007C4A5A15034B5A4B5A00FC4A5A485D4B5A157FC848C7FC4A5A5D14034A5AA2140F
5D141F4A5AA2147FA25D14FFA25BA35B5DA25BA65BAB6D90C8FC6D5AEB00F830447AC239
>I<EC7FF80103B57E010F14F0013F8090397FC01FFC9039FE0003FED801F86D7E48486D
13800007ED7FC049143F120FEE1FE0A2121F7FA27F13FE6D143F02C014C002F0137F02FC
14806C6D13FFDAFF8113006CECE3FEEDFFFC6C15F06C5D5E6C15F0013F806D8016FF4915
8090B712C048133F48486C14E02607FC0714F0380FF80148486C6C13F848487F150F4848
010313FC150000FF157F49141FA2160FA21607A217F87F127FEE0FF07F6C6CEC1FE07F6C
6CEC7FC06CB4903801FF806CD9E00F13006C90B55AC615F8013F14E0010F1480010001F8
C7FC2E427BC039>I<EC7FF80107B5FC011F14C0017F809039FFF03FF8489038C00FFC48
496C7E48496C7E485A001F6E138017C0485A007F16E08117F0A212FF17F8A617FCA4007F
5CA3123F5D6C7EA2000F5C6C6C5B6C5C6CEBC03E6CEBFFFC6D5B011F4913F801035B9038
00040091C7FCA217F05DEA07F0486C15E0487E487E4B13C0A217804B1300A249495A6C48
495A49495A6C48EBFFF0D9FC075B6CB612806C92C7FCC614FC013F13F0010790C8FC2E42
7BC039>I<EE0FC04C7EA24C7EA34C7EA24C7EA24B7FA34B7FA24B80A34B8016CF031F80
168F1687033F801603037F80157E8203FE804B7E0201814B137FA20203814B7F0207824B
7FA2020F824B7F021F824B7F023F82A292C77E4AB77EA291B87EA3D901FCC87F4A157F01
03835C840107844A81010F844A81A2011F844A81013F84496C81B600C0010FB612FCA54E
457CC457>65 D<B912C018FCF0FF8019E019F8D8001F90C700037F9438007FFE727E7213
807213C0841AE0A2841AF0A71AE0601AC0604E13801A004E5AF0FFFC050313F0053F5B92
B7C7FC18FCF0FFC019F892C86C7EF01FFF7213807213C07213E01AF07213F8A27213FCA3
1AFEA2197FA319FFA21AFCA2601AF8604E13F0A2061F13E04E13C04DB51280BAEAFE0061
19F0198006F0C7FC47447DC351>I<DCFFFC141C031FD9FFC0137C4AB600F813FC0207ED
FE01021FEDFF03027FD9F00113C749B5C7EA3FEF4901F8EC0FFF010F01E0140349018080
4990C9FC4948167F4948163F4849161F4849160F5C48180748491603A2485B19015A91CA
FC19005AA3491800A212FFAC127FA27F1A7CA27EA2806C19FC1AF86C7F19016C7F6CF003
F0806C6DEE07E06C6DEE0FC06D6C161F6D6CEE3F806D6DED7F006D01E0EC01FE010301F8
EC07FC6D01FFEC1FF86D6C9039F801FFE0021F90B65A020793C7FC020115FCDA001F14E0
030049C8FC46467AC453>I<B97E18F818FF19E019F8D8001F90C7000F13FE05007F061F
7F06077F7213F084727F737E737E737EA2731380A27313C0A21BE085A21BF0A51BF8A285
A961A21BF0A41BE0A2611BC0A2611B801B00614F5A62197F4F5A06035B4E5B061F5B95B5
C7FC050F5BBA12F819E0198006FCC8FC18804D447CC358>I<BA12FCA485D8001F903880
0001EF003F180F180318011800A2197F85A385A2177CA2F10F80A405FC90C7FCA3160116
03161F92B5FCA5ED801F160316011600F101F0A2177CF103E0A594C71207A21AC0A2190F
A2191FA2193FF17F8019FF601807181F4DB5FCBBFC1A00A444437DC24B>I<BA12E0A419
F0D8001F903880000F1700183F181F180F1807180319F81801A31800A3EE01F0197CA419
001603A31607160F163F92B5FCA5ED803F160F16071603A31601A693C9FCAEB712FCA53E
437CC248>I<DCFFFC1438033FD9FF8013F84AB6EAF001020FEDFC03023FEDFF0791B5D8
F003138F4991C7EA7FDF010701F8EC1FFF4901E01407490180804990C9FCD97FFC167F49
5A48183F4849161F4A160F5A48491607A2485B19035A91CAFC19015AA34994C8FC12FFAC
057FB612F8A2127F7FA2DD0001EBF8007EA2807EA26C7FA26C7F7E806C7F6C7F6D7E6D6C
5D6D13C06D6D5C6D01F85C010101FF143F6D9139F801FFDF023F90B6128F020F16030201
EDFC00DA003F02E01338030049C9FC4D467AC45A>I<B7D8F007B71280A5D8001F0180C8
01FCC7FCB3A792B8FCA50380C8FCB3AAB7D8F007B71280A551447CC35A>I<B712F0A5D8
001FEB8000B3B3B3A4B712F0A524447DC32B>I<B700F00103B512FCA5D8001F0180C838
1FFC00F10FF04F5AF13F8007FFC7FC4E5A4E5A4E5A4E5AF03FC04E5A4EC8FC4D5A4D5AEF
07F0EF1FE04D5A4D5A4DC9FC4C5AEE07F8160F161F4C7E4C7E93B5FC1583038780038F80
039F80DBBFCF7FEDFF0F4B6C7F4B6C7F4B6C7F15F0DBC0007F4B6D7F717FA2717F717F71
7FA2717F717F717FA2727F727F727F727FA2727F727F727FA286B700F0017F14FFA55044
7CC35A>75 D<B712FCA5D8001F0180C9FCB3B1F003E0A4180719C0A4180FA3181FA2F03F
80A2187F18FF5F5F170F173F4CB5FCBA1200A53B447CC345>I<B66C0207B61280818181
81D8001F6D91260001FEC7FC735A8181828202BF7F149F028F7F02877F8202837F148102
807F6F7F836F7F6F7F816F7F6F7F836F7F6F8082707F707F84707F707F82707F707F1980
7113C07113E0837113F07113F819FC7113FE7113FF838484A284848484A28484197F193F
191FA2496C160FB600F015071903190119001A7851447CC35A>78
D<923803FFE0037F13FF0203B612E0021F15FC027F9038007FFF902601FFF8010F13C049
01C001017F010F496D13F84948C8EA3FFC49486F7E49486F7E01FF8448496F7F4A814885
48496F7FA248496F7FA2488591CA127F4885A348854983A400FF1A80AD007F1A006D5FA3
6C61A26E16FF6C61A36C6D4B5BA26C6D4B5B6C616E5D6C6D4B5B6C6D4B5B6D6C4B90C7FC
6D6C4B5A6D6D4A5A6D01E001035B010301F8010F13E06D01FF017F5B6D6C90B6C8FC021F
15FC020715F0DA007F91C9FC030713F049467AC456>I<B812F8EFFFC018F818FF19C0D8
001F90C7003F7F050313F805007F727E727E84868684A286A762A24E5BA297C8FC4E5A4E
5A4D485A05075B053F13C092B7C9FC18FC18F018FC92C77F94383FFF80050F7F717F717F
85838583A685A61B0773EB0F80A372141F1A8072EC3F00B700E06D13C072EBF0FE72EBFF
FC06015C726C13E0CC0003138051457CC356>82 D<DAFFF8130701079038FF800F013FEC
E01F49ECF83F48B6EAFE7F48D9C00FB5FC3907FE00014848EB003FD81FF0801607484880
82484880A28312FF83A27F837F7F7F01FF92C7FC6C13C014FEECFFE06C14FF16F06C15FC
16FF6C16C06C826C826C826C82013F81010F811303D9003F15801403DA001F14C0150016
3F040F13E01603A200788100F881A3177F7EA218C07EA26CEEFF80A26D4A130013E06D4A
5A01FE4A5A6D6CEB1FF802FCEBFFF0486CB65AD8FC1F5DD8F80792C7FC48C614FC480107
13C033467AC440>I<003FBA12F8A5DA0007EBE000D87FF8EF1FFC01E0170F4917035B90
C71601007E1800A3007C197CA400FC197E48193EA5C81700B3B3A20103B812C0A547437C
C250>I<B700F0011FB512FEA5D8001F0180C83807F800735AB3B3A71907A26D6D5EA219
0F7F6F4B5A7F6F4B5A6D4DC7FC6D6D5D6E6C4A5A6E6CEC07FC91261FFFC0EB1FF8020790
39F801FFF06E90B612C0020093C8FC033F5C030714F0DB003F90C9FC4F457CC358>I<90
3801FFF8011FEBFF80017F14E090B612F8489038807FFC3A03FE001FFE486CEB07FF486E
7F0280806F7FA36F7F6C90C7FCA26C5AEA00F890C8FCA2150F021FB5FC0103B6FC131F01
7F13C03901FFFC004813E0000F13804890C7FC485A5B485AA2485AA45DA26C6C5BED07BF
6C6C010F13FC6CB490391F3FFFE06C9026C0FE1F13F06CEBFFFC6CECF007C66CD9E00113
E0010790C9FC342F7DAD38>97 D<EC1FFE49B512C0010714F0011F14FC90397FFC0FFE90
3AFFE003FF804849C613C0485B4890C7EA7FE048ED3FF0485AEE1FF8485AA2007F150F49
15FCA212FFA390B7FCA317F801F8C9FCA5127FA27FA2003F1638177C6C6C15FCA26C6CEC
01F86C6D13036CED07F06C6DEB0FE06C01F0EB3FC0903A3FFE01FF806DB5EAFE0001075C
010014F0020F90C7FC2E2F7DAD35>101 D<EB7FC0B5FCA512037EB1923803FF80031F13
F0037F7F92B57E9139C1FC1FFE9139C3E00FFF9126C7C0077FECCF0002DE7F02FC81A25C
5CA35CB3A7B600C1B61280A539457CC440>104 D<EB7FC0B5FCA512037EB3B3B3A3B612
80A519457CC420>108 D<90287FC003FF80EB07FFB5011F01F0013F13E0037F6D90B57E
92B56C4880913DC1FC1FFE03F83FFC913DC3E00FFF07C01FFE00039026C7C00790398F80
0FFF6CD9CF00EC9E0002DE6D01BC7F02FC03F81580A24A5D4A5DA34A5DB3A7B600C1B600
83B6FCA5582D7CAC5F>I<EC1FFE49B512E0010714F8011F14FE903A7FF807FF809026FF
E0017F48903980007FE04890C76C7E48486E7E000F8249140F001F82A2003F824980007F
1780A400FF17C0AA007F1780A46C6C4A1300A2001F5EA26C6C4A5A00075E6D143F6C6D49
5AC69039E001FFC090267FF8075B6DB6C7FC010F14FC010114E09026001FFEC8FC322F7D
AD39>111 D<90397F803FC0B5EBFFF0028313F8028713FC91388FE7FE91389F8FFF0003
EB9E0F6C13BCA214F8A29138F007FEED03FC9138E001F892C7FCA35CB3A5B612C0A5282D
7DAC2F>114 D<007FB5398007FFFCA5000101F0C7EA7F806CEE3E006E147E017F157C80
17FC013F5D6E1301011F5D6E13036D5DED80076D5DEDC00F6D5D15E0161F6D92C7FC6F5A
6D143EEDF87E027F137CEDFCFC023F5B15FF6E5BA36E5BA26E5BA26E5BA26E90C8FCA26E
5AA2157CA215FC5D1401000F5C383FC003D87FE05B1407D8FFF05B140F5D141F4AC9FC38
7FE07E495A383F87F8EBFFF06C5B00071380D801FCCAFC36407EAB3C>121
D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 967 478 a Ft(THE)65 b(CLASSIFICA)-10 b(TION)64
b(OF)h(DEHN)926 634 y(SUR)m(GERIES)g(ON)e(2-BRIDGE)j(KNOTS)980
1088 y Fs(Mark)37 b(Brittenham)g(and)g(Ying-Qing)g(Wu)296
1408 y Fr(Abstra)n(ct.)47 b Fq(W)-7 b(e)30 b(will)h(determine)e
(whether)h(a)g(giv)n(en)g(surgery)g(on)h(a)f(2-bridge)h(knot)f(is)h
(reducible,)296 1508 y(toroidal,)f(Seifert)d(\014b)r(ered,)h(or)h(h)n
(yp)r(erb)r(olic.)176 2034 y Fp(In)j([Th1])f(Th)m(urston)i(sho)m(w)m
(ed)g(that)e(if)g Fo(K)38 b Fp(is)32 b(a)f(h)m(yp)s(erb)s(olic)h(knot,)
f(then)h(all)f(but)h(\014nitely)f(man)m(y)57 2223 y(surgeries)48
b(on)f Fo(K)53 b Fp(are)47 b(h)m(yp)s(erb)s(olic.)86
b(In)47 b(particular,)i(for)f(the)f(Figure)g(8)g(knot,)i(it)e(w)m(as)g
(sho)m(wn)57 2412 y(that)42 b(exactly)f(9)h(non)m(trivial)f(surgeries)i
(are)f(non-h)m(yp)s(erb)s(olic.)72 b(Let)42 b Fo(K)2803
2430 y Fn(p=q)2971 2412 y Fp(b)s(e)h(a)f(2-bridge)g(knot)57
2602 y(asso)s(ciated)23 b(to)f(the)h(rational)f(n)m(um)m(b)s(er)h
Fo(p=q)t Fp(.)41 b(When)24 b Fo(p)k Fm(\021)g(\006)p
Fp(1)23 b(mo)s(d)e Fo(q)t Fp(,)k Fo(K)30 b Fp(is)22 b(a)h(torus)g
(knot,)h(on)f(whic)m(h)57 2791 y(the)41 b(surgeries)h(are)f(w)m(ell)g
(understo)s(o)s(d.)69 b(By)40 b([HT],)g(all)g(other)h(2-bridge)h(knots)
f(are)g(h)m(yp)s(erb)s(olic,)57 2980 y(admitting)27 b(no)j(reducible)g
(surgeries.)44 b(Moreo)m(v)m(er,)30 b Fo(K)2065 2998
y Fn(p=q)2220 2980 y Fp(admits)e(a)h(toroidal)f(surgery)i(if)f(and)h
(only)57 3170 y(if)42 b Fo(p=q)k Fp(=)c([)p Fo(r)539
3185 y Fl(1)584 3170 y Fo(;)17 b(r)674 3185 y Fl(2)718
3170 y Fp(])42 b(=)g(1)p Fo(=)p Fp(\()p Fo(r)1091 3185
y Fl(1)1163 3170 y Fm(\000)28 b Fp(1)p Fo(=r)1413 3185
y Fl(2)1458 3170 y Fp(\))41 b(for)i(some)e(in)m(tegers)h
Fo(r)2380 3185 y Fl(1)2425 3170 y Fo(;)17 b(r)2515 3185
y Fl(2)2559 3170 y Fp(.)70 b(See)43 b(Lemma)d(8)i(b)s(elo)m(w)g(for)g
(a)57 3359 y(complete)g(list)g(of)h(all)e(toroidal)h(surgeries.)73
b(The)43 b(Geometrization)f(Conjecture)i([Th2])e(asserts)57
3548 y(that)e(if)h(a)f(closed)i(orien)m(table)f(3-manifold)f(is)h
(irreducible)g(and)g(atoroidal,)g(then)h(it)e(is)h(either)g(a)57
3737 y(h)m(yp)s(erb)s(olic)26 b(manifold,)h(or)f(a)g(Seifert)h(\014b)s
(ered)g(space)h(whose)f(orbifold)f(is)g(a)g(2-sphere)i(with)e(at)g
(most)57 3927 y(three)33 b(cone)h(p)s(oin)m(ts,)e(called)h(a)g
Fk(smal)5 b(l)36 b(Seifert)e(\014b)-5 b(er)g(e)g(d)35
b(sp)-5 b(ac)g(e)p Fp(.)43 b(The)33 b(conjecture)i(has)e(b)s(een)h(pro)
m(v)m(ed)57 4116 y(for)f(t)m(w)m(o)g(large)f(classes)i(of)f(manifolds:)
43 b(the)34 b(Hak)m(en)e(manifolds)h([Th2],)f(and)h(those)g(admitting)f
(an)57 4305 y(orien)m(tation)i(preserving)h(p)s(erio)s(dic)g(map)f
(with)h(nonempt)m(y)f(\014xed)h(p)s(oin)m(t)g(set)g([Th3,Ho,K)m
(OS,Zh].)57 4495 y(It)g(can)g(b)s(e)h(sho)m(wn)g(that)f(surgery)g(on)h
(a)f(2-bridge)g(knot)g(yields)g(a)g(manifold)f(whic)m(h)i(admits)e(suc)
m(h)57 4684 y(a)g(p)s(erio)s(dic)h(map,)g(so)g(it)f(has)i(a)e
(geometric)g(decomp)s(osition.)49 b(Our)35 b(main)f(result)i(will)e
(classify)h(all)57 4873 y(surgeries)k(on)g(2-bridge)g(knots)g
(according)g(to)f(whether)h(they)g(are)g(reducible,)h(toroidal,)f
(Seifert)57 5062 y(\014b)s(ered,)34 b(or)f(h)m(yp)s(erb)s(olic)g
(manifolds.)p 57 5205 598 4 v 176 5300 a Fq(1991)d Fj(Mathematics)h
(Subje)l(ct)h(Classi\014c)l(ation)p Fq(.)42 b(57N10,)30
b(57M25,)e(57M50.)176 5400 y Fj(Key)e(wor)l(ds)f(and)h(phr)l(ases.)43
b Fq(Dehn)23 b(surgery)-7 b(,)25 b(2-bridge)f(knots,)h(Seifert)e(\014b)
r(ered)g(spaces,)i(h)n(yp)r(erb)r(olic)f(manifolds.)2980
5639 y(T)n(yp)r(eset)j(b)n(y)h Fi(A)3474 5656 y(M)3564
5639 y(S)p Fq(-T)3690 5656 y(E)3737 5639 y(X)1908 5878
y(1)p eop
%%Page: 2 2
2 1 bop 176 100 a Fp(W)-8 b(e)28 b(use)h([)p Fo(b)580
115 y Fl(1)624 100 y Fo(;)17 b(:)g(:)g(:)31 b(;)17 b(b)906
115 y Fn(n)959 100 y Fp(])28 b(to)f(denote)i(the)f(partial)f(fraction)h
(decomp)s(osition)f(1)p Fo(=)p Fp(\()p Fo(b)3125 115
y Fl(1)3180 100 y Fm(\000)11 b Fp(1)p Fo(=)p Fp(\()p
Fo(b)3450 115 y Fl(2)3507 100 y Fm(\000)g Fo(:)17 b(:)g(:)10
b Fm(\000)57 289 y Fp(1)p Fo(=b)200 304 y Fn(n)253 289
y Fp(\))17 b Fo(:)g(:)g(:)d Fp(\).)42 b(Recall)28 b(that)f(a)h
(2-bridge)g(knot)f Fo(K)35 b Fp(is)27 b(a)h Fk(twist)i(knot)37
b Fp(if)28 b(it)f(is)g(equiv)-6 b(alen)m(t)28 b(to)f(some)g
Fo(K)3675 307 y Fn(p=q)57 478 y Fp(with)34 b Fo(p=q)g
Fp(=)d([)p Fo(b;)17 b Fm(\006)p Fp(2])34 b(for)h(some)f(in)m(teger)h
Fo(b)p Fp(.)48 b(Since)36 b([)p Fo(b;)17 b Fm(\006)p
Fp(2])29 b(=)i([)p Fo(b)22 b Fm(\007)i Fp(1)p Fo(;)17
b Fm(\007)p Fp(2],)34 b(w)m(e)h(ma)m(y)e(assume)i(that)57
667 y Fo(b)g Fp(is)h(ev)m(en.)52 b(Let)36 b Fo(K)7 b
Fp(\()p Fo(\015)f Fp(\))34 b(b)s(e)i(the)g(manifold)f(obtained)h(b)m(y)
g Fo(\015)41 b Fp(surgery)36 b(on)g Fo(K)7 b Fp(.)51
b(W)-8 b(e)36 b(alw)m(a)m(ys)g(assume)57 857 y(that)31
b Fo(\015)h Fm(6)p Fp(=)d Fm(1)p Fp(,)h(that)h(is,)h(the)f(surgery)h
(is)f(non)m(trivial.)42 b(\(4\))31 b(and)h(\(5\))e(in)i(the)f(follo)m
(wing)g(theorem)g(are)57 1046 y(w)m(ell)i(kno)m(wn.)44
b(They)33 b(are)h(included)g(here)g(for)g(the)f(sak)m(e)h(of)f
(completeness.)57 1313 y Ft(Theorem)k(1.)58 b Fk(L)-5
b(et)36 b Fo(K)42 b Fk(b)-5 b(e)35 b(a)h(2-bridge)e(knot.)176
1508 y(\(1\))h(If)h Fo(K)e Fm(6)p Fp(=)28 b Fo(K)758
1526 y Fl([)p Fn(b)816 1536 y Fh(1)855 1526 y Fn(;b)914
1536 y Fh(2)952 1526 y Fl(])1015 1508 y Fk(for)35 b(any)h
Fo(b)1408 1523 y Fl(1)1453 1508 y Fo(;)17 b(b)1541 1523
y Fl(2)1585 1508 y Fk(,)35 b(then)g Fo(K)7 b Fp(\()p
Fo(\015)f Fp(\))34 b Fk(is)h(hyp)-5 b(erb)g(olic)35 b(for)g(al)5
b(l)37 b Fo(\015)6 b Fk(.)176 1703 y(\(2\))45 b(If)g
Fo(K)51 b Fp(=)45 b Fo(K)811 1721 y Fl([)p Fn(b)869 1731
y Fh(1)907 1721 y Fn(;b)966 1731 y Fh(2)1005 1721 y Fl(])1077
1703 y Fk(with)g Fm(j)p Fo(b)1374 1718 y Fl(1)1418 1703
y Fm(j)p Fo(;)17 b Fm(j)p Fo(b)1562 1718 y Fl(2)1605
1703 y Fm(j)45 b Fo(>)g Fp(2)p Fk(,)h(then)f Fo(K)7 b
Fp(\()p Fo(\015)f Fp(\))44 b Fk(is)g(hyp)-5 b(erb)g(olic)44
b(for)h(al)5 b(l)46 b(but)f(one)g Fo(\015)6 b Fk(,)57
1892 y(which)35 b(yields)h(tor)-5 b(oidal)36 b(manifold.)46
b(When)35 b(b)-5 b(oth)36 b Fo(b)1978 1907 y Fl(1)2058
1892 y Fk(and)g Fo(b)2295 1907 y Fl(2)2375 1892 y Fk(ar)-5
b(e)36 b(even,)f Fo(\015)f Fp(=)28 b(0)p Fk(.)47 b(If)35
b Fo(b)3271 1907 y Fl(1)3352 1892 y Fk(is)g(o)-5 b(dd)36
b(and)57 2081 y Fo(b)100 2096 y Fl(2)180 2081 y Fk(is)f(even,)f
Fo(\015)f Fp(=)28 b(2)p Fo(b)829 2096 y Fl(2)874 2081
y Fk(.)176 2277 y(\(3\))46 b(If)g Fo(K)53 b Fp(=)47 b
Fo(K)817 2295 y Fl([2)p Fn(n;)p Fg(\006)p Fl(2])1127
2277 y Fk(and)f Fm(j)p Fo(n)p Fm(j)g Fo(>)h Fp(1)p Fk(,)h
Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))44 b Fk(is)i(hyp)-5
b(erb)g(olic)45 b(for)h(al)5 b(l)47 b(but)f(\014ve)g
Fo(\015)6 b Fk(:)65 b Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))44
b Fk(is)57 2466 y(tor)-5 b(oidal)35 b(for)g Fo(\015)e
Fp(=)28 b(0)p Fo(;)17 b Fm(\007)p Fp(4)p Fk(,)35 b(and)g(is)g(Seifert)g
(\014b)-5 b(er)g(e)g(d)34 b(for)i Fo(\015)c Fp(=)d Fm(\007)p
Fp(1)p Fo(;)17 b Fm(\007)p Fp(2)p Fo(;)g Fm(\007)p Fp(3)p
Fk(.)176 2661 y(\(4\))34 b(If)h Fo(K)f Fp(=)28 b Fo(K)756
2679 y Fl([2)p Fn(;)p Fg(\000)p Fl(2])1006 2661 y Fk(is)34
b(the)g(Figur)-5 b(e)34 b(8)g(knot,)h Fo(K)7 b Fp(\()p
Fo(\015)f Fp(\))32 b Fk(is)i(hyp)-5 b(erb)g(olic)34 b(for)g(al)5
b(l)36 b(but)f(nine)e Fo(\015)6 b Fk(:)44 b Fo(K)7 b
Fp(\()p Fo(\015)f Fp(\))57 2850 y Fk(is)35 b(tor)-5 b(oidal)35
b(for)g Fo(\015)e Fp(=)28 b(0)p Fo(;)17 b Fp(4)p Fo(;)g
Fm(\000)p Fp(4)p Fk(,)34 b(and)h(is)g(Seifert)g(\014b)-5
b(er)g(e)g(d)34 b(for)i Fo(\015)c Fp(=)d Fm(\000)p Fp(1)p
Fo(;)17 b Fm(\000)p Fp(2)p Fo(;)g Fm(\000)p Fp(3)p Fo(;)g
Fp(1)p Fo(;)g Fp(2)p Fo(;)g Fp(3)p Fk(.)176 3045 y(\(5\))38
b(If)g Fo(K)g Fp(=)33 b Fo(K)772 3063 y Fl([)p Fn(b)p
Fl(])895 3045 y Fk(is)k(a)h Fp(\(2)p Fo(;)17 b(b)p Fp(\))37
b Fk(torus)h(knot,)g Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))36
b Fk(is)i(Seifert)f(\014b)-5 b(er)g(e)g(d)37 b(unless)h
Fo(\015)f Fp(=)c(2)p Fo(b)p Fk(.)52 b Fo(K)7 b Fp(\(2)p
Fo(b)p Fp(\))57 3235 y Fk(is)35 b(a)g(r)-5 b(e)g(ducible)35
b(manifold.)176 3501 y Fp(The)23 b(reader)g(is)g(referred)h(to)e([GO])g
(for)h(de\014nitions)h(and)f(basic)f(prop)s(erties)h(concerning)h
(essen)m(tial)57 3691 y(branc)m(hed)48 b(surfaces)g(and)f(essen)m(tial)
g(laminations,)h(whic)m(h)f(pla)m(y)f(a)g(cen)m(tral)h(role)f(in)h(the)
f(pro)s(of)57 3880 y(of)e(the)h(theorem.)78 b(In)44 b([De1,)j(De2])e
(Delman)e(constructed)j(essen)m(tial)f(branc)m(hed)i(surfaces)f(and)57
4069 y(laminations)31 b(in)h(2-bridge)h(knot)f(complemen)m(ts,)g(whic)m
(h)h(are)g(p)s(ersisten)m(t)h(in)e(the)h(sense)h(that)f(they)57
4258 y(remain)42 b(essen)m(tial)j(after)e(all)g(non)m(trivial)f
(surgeries.)76 b(Brittenham)42 b([Br])h(sho)m(w)m(ed)i(that)e(if)h
Fo(M)54 b Fp(is)57 4448 y(a)45 b(small)e(Seifert)j(\014b)s(ered)h
(space)f(con)m(taining)f(an)h(essen)m(tial)g(branc)m(hed)h(surface)f
Fm(F)10 b Fp(,)48 b(then)e(eac)m(h)57 4637 y(comp)s(onen)m(t)36
b(of)g Fo(M)f Fm(\000)25 b Fp(In)m(t)p Fo(N)11 b Fp(\()p
Fm(F)f Fp(\))35 b(is)h(an)g Fo(I)44 b Fp(bundle)38 b(o)m(v)m(er)e(a)g
(compact)g(surface)h Fo(G)p Fp(.)53 b(This)37 b(is)f(a)g(v)m(ery)57
4826 y(useful)g(criteria)d(in)i(determining)f(whic)m(h)h(manifolds)f
(are)g(small)f(Seifert)j(\014b)s(ered)f(spaces.)49 b(Before)57
5016 y(pro)m(ving)33 b(the)g(theorem,)g(w)m(e)g(need)i(to)e(review)g
(some)f(results)i(of)g([De1,)e(De2].)176 5211 y(F)-8
b(or)39 b(eac)m(h)i(rational)d(n)m(um)m(b)s(er)i Fo(p=q)t
Fp(,)g(there)g(is)g(asso)s(ciated)f(a)h(diagram)d Fo(D)s
Fp(\()p Fo(p=q)t Fp(\),)k(whic)m(h)f(is)f(the)57 5400
y(minimal)h(sub)s(diagram)i(of)h(the)h(Hatc)m(her-Th)m(urston)g
(diagram)e([HT,)g(Figure)h(4])g(that)f(con)m(tains)1908
5639 y Fq(2)p eop
%%Page: 3 3
3 2 bop 57 100 a Fp(all)44 b(minimal)f(paths)i(from)g(1)p
Fo(=)p Fp(0)g(to)f Fo(p=q)t Fp(.)81 b(See)46 b([HT,)e(Figure)h(5])g
(and)h([De1].)80 b Fo(D)s Fp(\()p Fo(p=q)t Fp(\))45 b(can)g(b)s(e)57
289 y(constructed)40 b(as)f(follo)m(ws.)61 b(Let)40 b
Fo(p=q)h Fp(=)d([)p Fo(a)1677 304 y Fl(1)1721 289 y Fo(;)17
b(:)g(:)g(:)30 b(;)17 b(a)2012 304 y Fn(k)2060 289 y
Fp(])39 b(b)s(e)g(a)g(partial)f(fraction)h(decomp)s(osition)f(of)57
478 y Fo(p=q)t Fp(.)67 b(T)-8 b(o)41 b(eac)m(h)h Fo(a)740
493 y Fn(i)814 478 y Fp(is)f(asso)s(ciated)g(a)g(\\fan")g
Fo(F)1835 493 y Fn(a)1878 503 y Ff(i)1956 478 y Fp(consisting)h(of)f
Fo(a)2599 493 y Fn(i)2673 478 y Fp(simplices,)h(see)g(Figure)g(1\(a\))
57 667 y(and)d(1\(b\))f(for)h(the)g(fans)g Fo(F)1089
682 y Fl(4)1172 667 y Fp(and)g Fo(F)1435 682 y Fg(\000)p
Fl(4)1542 667 y Fp(.)60 b(The)39 b(edges)h(lab)s(eled)f
Fo(e)2504 682 y Fl(1)2587 667 y Fp(are)g(called)g(initial)e(edges,)j
(and)57 857 y(the)31 b(ones)h(lab)s(eled)f Fo(e)830 872
y Fl(2)907 857 y Fp(are)g(called)g(terminal)f(edges.)44
b(The)32 b(diagram)d Fo(D)s Fp(\()p Fo(p=q)t Fp(\))i(can)h(b)s(e)f
(constructed)57 1046 y(b)m(y)j(gluing)f(the)h Fo(F)731
1061 y Fn(a)774 1071 y Ff(i)845 1046 y Fp(together)f(in)h(suc)m(h)h(a)f
(w)m(a)m(y)f(that)h(the)g(terminal)e(edge)j(of)f Fo(F)3060
1061 y Fn(a)3103 1071 y Ff(i)3173 1046 y Fp(is)g(glued)g(to)f(the)57
1235 y(initial)41 b(edge)j(of)f Fo(F)778 1250 y Fn(a)821
1260 y Ff(i)p Fh(+1)943 1235 y Fp(.)72 b(Moreo)m(v)m(er,)46
b(if)d Fo(a)1675 1250 y Fn(i)1707 1235 y Fo(a)1760 1250
y Fn(i)p Fl(+1)1938 1235 y Fo(<)h Fp(0)f(then)g Fo(F)2452
1250 y Fn(a)2495 1260 y Ff(i)2575 1235 y Fp(and)g Fo(F)2842
1250 y Fn(a)2885 1260 y Ff(i)p Fh(+1)3050 1235 y Fp(ha)m(v)m(e)g(one)g
(edge)h(in)57 1425 y(common,)29 b(and)i(if)g Fo(a)814
1440 y Fn(i)846 1425 y Fo(a)899 1440 y Fn(i)p Fl(+1)1061
1425 y Fo(>)d Fp(0)i(then)i(they)e(ha)m(v)m(e)h(a)g(2-simplex)e(in)i
(common.)41 b(See)32 b(Figure)e(1\(c\))g(for)57 1614
y(the)j(diagram)f(of)h([2)p Fo(;)17 b Fm(\000)p Fp(2)p
Fo(;)g Fm(\000)p Fp(4)p Fo(;)g Fp(2].)129 3151 y @beginspecial
180 @llx 565 @lly 548 @urx 686 @ury 3600 @rwi @setspecial
%%BeginDocument: Fig1.ai
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
0 A
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
225.5084 671.9491 m
187.9974 595.5003 l
263.0194 595.5003 l
225.5084 671.9491 l
s
207.7547 595.7503 m
225.5084 671.9491 l
243.2306 595.5003 l
S
217.1075 654.4296 m
222.2296 651.1673 229.1779 651.5202 233.7139 655.0268 c
S
0 To
1 0 0 1 190.75 633.5 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(e) Tx 
(\r) TX 
TO
0 To
1 0 0 1 250.9705 632.9001 0 Tp
TP
0 Tr
(e) Tx 
(\r) TX 
TO
0 To
1 0 0 1 196.75 630.75 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 256.5 629.25 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 217 567.75 0 Tp
TP
0 Tr
/_Helvetica 10 Tf
(\(a\)) Tx 
(\r) TX 
TO
0 R
0 G
323.1932 596.2967 m
360.2137 672.9939 l
284.9429 672.9946 l
323.1932 596.2967 l
s
341.7068 673.0775 m
323.1932 596.2967 l
303.9813 672.9162 l
S
331.2863 613.475 m
326.427 616.525 319.6201 616.8788 314.8794 613.1641 c
S
0 To
1 0 0 1 290.2773 631.3052 0 Tp
TP
0 Tr
0 O
0 g
(e) Tx 
(\r) TX 
TO
0 To
1 0 0 1 296.2773 628.5552 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 346.7626 632.2552 0 Tp
TP
0 Tr
/_Helvetica 10 Tf
(e) Tx 
(\r) TX 
TO
0 To
1 0 0 1 352.2921 628.6051 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 317.5 567.5 0 Tp
TP
0 Tr
/_Helvetica 10 Tf
(\(b\)) Tx 
(\r) TX 
TO
0 R
0 G
422.4411 595.1022 m
422.0503 671.75 l
517 671.75 l
517 595.5003 l
S
473.2372 671.5509 m
483.3964 595.5003 l
493.9464 671.75 l
S
394.3078 595.5003 m
422.0503 671.75 l
450.5743 595.5003 l
450.5743 671.9491 l
483.3964 595.5003 l
517 671.75 l
544.3518 595.5003 l
394.3078 595.5003 l
s
417.1661 658.2122 m
419.7059 656.8186 424.5901 656.8186 427.1299 658.2122 c
S
446.4715 606.45 m
453.7567 608.5379 459.8304 604.4948 462.2965 595.6994 c
S
471.4788 595.5003 m
471.4788 606.6491 482.4196 610.2326 488.476 606.6491 c
S
510.1621 655.8232 m
512.8972 654.4296 519.5398 654.2305 522.8611 655.6241 c
S
0 To
1 0 0 1 465.5 568 0 Tp
TP
0 Tr
0 O
0 g
(\(c\)) Tx 
(\r) TX 
TO
0 R
0 G
225.5084 671.9491 m
225.5 595.5 l
S
323.1932 596.2967 m
323.25 673 l
S
0 To
1 0 0 1 410 677 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 8 Tf
(0/1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 381 583 0 Tp
TP
0 Tr
(1/0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 446 583 0 Tp
TP
0 Tr
(1/2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 417 583 0 Tp
TP
0 Tr
(1/1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 446 678 0 Tp
TP
0 Tr
(1/3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 478 585 0 Tp
TP
0 Tr
(2/5) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 1747 3340 a(Figure)33 b(1)176 3683 y(T)-8
b(o)42 b(eac)m(h)i(v)m(ertex)e Fo(v)925 3698 y Fn(i)1001
3683 y Fp(of)h Fo(D)s Fp(\()p Fo(p=q)t Fp(\))g(is)f(asso)s(ciated)h(a)f
(rational)g(n)m(um)m(b)s(er)h Fo(r)2961 3698 y Fn(i)2994
3683 y Fo(=s)3091 3698 y Fn(i)3124 3683 y Fp(.)72 b(It)42
b(has)h(one)g(of)57 3872 y(the)30 b(three)h(p)s(ossible)f(parities:)42
b(o)s(dd/o)s(dd,)31 b(o)s(dd/ev)m(en,)g(or)f(ev)m(en/o)s(dd,)h(denoted)
g(b)m(y)g Fo(o=o)p Fp(,)f Fo(o=e)p Fp(,)h(and)57 4061
y Fo(e=o)p Fp(,)h(resp)s(ectiv)m(ely)-8 b(.)43 b(Note)31
b(that)g(the)h(three)g(v)m(ertices)g(of)g(an)m(y)f(simplex)g(in)g
Fo(D)s Fp(\()p Fo(p=q)t Fp(\))g(ha)m(v)m(e)h(m)m(utually)57
4251 y(di\013eren)m(t)i(parities.)176 4447 y(W)-8 b(e)31
b(consider)h Fo(D)s Fp(\()p Fo(p=q)t Fp(\))e(as)h(a)g(graph)g(on)f(a)h
(disk)g Fo(D)s Fp(,)g(with)f(all)g(v)m(ertices)h(on)g
Fo(@)6 b(D)s Fp(,)30 b(con)m(taining)h Fo(@)6 b(D)57
4636 y Fp(as)33 b(a)f(subgraph.)45 b(The)34 b(b)s(oundary)f(of)g
Fo(D)j Fp(forms)c(t)m(w)m(o)h(paths)g(from)g(the)g(v)m(ertex)f(1)p
Fo(=)p Fp(0)g(to)h(the)g(v)m(ertex)57 4825 y Fo(p=q)t
Fp(.)49 b(The)36 b(one)f(con)m(taining)g(the)h(v)m(ertex)e(0)p
Fo(=)p Fp(1)h(is)g(called)g(the)g Fk(top)i(p)-5 b(ath)p
Fp(,)35 b(and)h(the)f(one)h(con)m(taining)57 5015 y(the)h(v)m(ertex)h
(1)p Fo(=)p Fp(1)e(is)i(called)f(the)h Fk(b)-5 b(ottom)40
b(p)-5 b(ath)p Fp(.)56 b(Edges)38 b(on)g(the)g(top)f(path)h(are)f
(called)h Fk(top)h(e)-5 b(dges)p Fp(.)57 5204 y(Similarly)30
b(for)k Fk(b)-5 b(ottom)36 b(e)-5 b(dges)p Fp(.)176 5400
y(Let)36 b(\001)440 5415 y Fl(1)485 5400 y Fo(;)17 b
Fp(\001)613 5415 y Fl(2)692 5400 y Fp(b)s(e)36 b(t)m(w)m(o)g(simplices)
f(in)h Fo(D)s Fp(\()p Fo(p=q)t Fp(\))f(with)g(an)h(edge)g(in)g(common.)
50 b(Assume)35 b(that)g(the)1908 5639 y Fq(3)p eop
%%Page: 4 4
4 3 bop 57 100 a Fp(t)m(w)m(o)47 b(v)m(ertices)g(whic)m(h)h(are)f(not)g
(on)g(the)h(common)d(edge)j(are)f(of)g(parit)m(y)g Fo(o=o)p
Fp(.)86 b(Then)48 b(the)f(arcs)57 289 y(indicated)33
b(in)g(Figure)g(2\(a\))e(and)j(\(b\))e(are)h(called)g
Fk(channels)p Fp(.)43 b(A)33 b Fk(p)-5 b(ath)40 b Fo(\013)33
b Fp(in)f Fo(D)s Fp(\()p Fo(p=q)t Fp(\))h(is)g(a)f(union)h(of)57
478 y(arcs,)g(eac)m(h)h(of)g(whic)m(h)g(is)f(either)g(an)h(edge)g(of)f
Fo(D)s Fp(\()p Fo(p=q)t Fp(\))g(or)g(a)g(c)m(hannel.)309
1925 y @beginspecial 112 @llx 539 @lly 511 @urx 677 @ury
3240 @rwi @setspecial
%%BeginDocument: Fig2.ai
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
0 A
u
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
281.2657 608.2252 m
213.2498 673.7003 L
145.2338 608.2252 L
213.2498 542.7501 L
281.2657 608.2252 L
s
213.2498 608.2252 m
S
U
213.2498 673.7003 m
213.2498 542.7501 l
S
0.4 G
2 w
145.2338 608.2252 m
179.75 575 l
247.25 640.75 l
281.2657 608.2252 l
S
u
0 G
1 w
481.7659 608 m
413.75 673.4751 L
345.7341 608 L
413.75 542.5249 L
481.7659 608 L
s
413.75 608 m
S
U
413.75 673.4751 m
413.75 542.5249 l
S
0.4 G
2 w
345.7341 608 m
380.5 641.25 l
446 573.5 l
481.7659 608 l
S
0 To
1 0 0 1 123 605 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Helvetica 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(o/o) Tx 
(\r) TX 
TO
0 To
1 0 0 1 285.0518 604.4001 0 Tp
TP
0 Tr
(o/o) Tx 
(\r) TX 
TO
0 To
1 0 0 1 328.0518 602.4001 0 Tp
TP
0 Tr
(o/o) Tx 
(\r) TX 
TO
0 To
1 0 0 1 487.0518 603.4001 0 Tp
TP
0 Tr
(o/o) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 1747 2114 a(Figure)g(2)176 2431 y(Let)40
b Fo(\013)g Fp(b)s(e)g(a)f(path)h(in)f Fo(D)s Fp(\()p
Fo(p=q)t Fp(\).)63 b(Let)39 b Fo(v)44 b Fp(b)s(e)c(a)f(v)m(ertex)g(on)h
Fo(\013)p Fp(.)63 b(Let)40 b Fo(e)2805 2446 y Fl(1)2850
2431 y Fo(;)17 b(e)2941 2446 y Fl(2)3025 2431 y Fp(b)s(e)39
b(the)h(edges)h(of)f Fo(\013)57 2620 y Fp(inciden)m(t)28
b(to)e Fo(v)t Fp(.)42 b(Then)28 b(there)f(is)g(a)g(fan)g
Fo(F)1566 2635 y Fn(v)1641 2620 y Fp(in)g Fo(D)s Fp(\()p
Fo(p=q)t Fp(\))f(with)h Fo(e)2355 2635 y Fl(1)2400 2620
y Fo(;)17 b(e)2491 2635 y Fl(2)2562 2620 y Fp(as)28 b(initial)d(and)i
(terminal)f(edges.)57 2809 y(The)i(n)m(um)m(b)s(er)h(of)f(simplices)g
(in)g Fo(F)1314 2824 y Fn(v)1390 2809 y Fp(is)g(called)g(the)g
Fk(c)-5 b(orner)31 b(numb)-5 b(er)39 b Fp(of)28 b Fo(v)k
Fp(in)c Fo(\013)p Fp(,)h(denoted)h(b)m(y)e Fo(c)p Fp(\()p
Fo(v)t Fp(;)17 b Fo(\013)p Fp(\))57 2999 y(or)39 b(simply)g
Fo(c)p Fp(\()p Fo(v)t Fp(\).)63 b(A)40 b(path)g Fo(\013)g
Fp(from)f(1)p Fo(=)p Fp(0)g(to)h Fo(p=q)k Fp(is)39 b(an)h
Fk(al)5 b(lowable)43 b(p)-5 b(ath)48 b Fp(if)40 b(it)f(has)h(at)g
(least)f(one)57 3188 y(c)m(hannel,)34 b(and)g Fo(c)p
Fp(\()p Fo(v)t Fp(\))27 b Fm(\025)h Fp(2)33 b(for)g(all)g
Fo(v)k Fp(in)c Fo(\013)p Fp(.)176 3379 y(No)m(w)k(assume)g(that)g
Fo(K)k Fp(=)35 b Fo(K)1298 3397 y Fn(p=q)1461 3379 y
Fp(is)i(a)g(2-bridge)h(knot.)55 b(Then)38 b Fo(q)j Fp(is)c(an)h(o)s(dd)
f(n)m(um)m(b)s(er.)57 b(Recall)57 3568 y(that)41 b Fo(K)366
3586 y Fn(p=q)532 3568 y Fp(=)h Fo(K)736 3586 y Fn(p)777
3566 y Fe(0)803 3586 y Fn(=q)929 3568 y Fp(if)g Fo(p)1079
3532 y Fg(0)1148 3568 y Fm(\021)f Fo(p)1316 3532 y Fg(\006)p
Fl(1)1465 3568 y Fp(mo)s(d)f Fo(q)t Fp(,)j(and)f Fo(K)2103
3586 y Fg(\000)p Fn(p=q)2332 3568 y Fp(is)f(the)h(mirror)d(image)h(of)i
Fo(K)3441 3586 y Fn(p=q)3566 3568 y Fp(.)68 b(W)-8 b(e)57
3757 y(ma)m(y)34 b(assume)i(without)f(loss)g(of)h(generalit)m(y)f(that)
g Fo(p)h Fp(is)g(ev)m(en,)g(and)g(1)c Fo(<)g(p)g(<)g(q)t
Fp(.)51 b(This)36 b(is)f(b)s(ecause)57 3946 y Fo(K)142
3964 y Fl(\()p Fn(q)s Fg(\000)p Fn(p)p Fl(\))p Fn(=q)469
3946 y Fp(is)j(equiv)-6 b(alen)m(t)38 b(to)g(the)h(mirror)e(image)g(of)
h Fo(K)2168 3964 y Fn(p=q)2294 3946 y Fp(,)h(so)f(the)h(result)f(of)h
Fo(\015)k Fp(surgery)c(on)f(the)57 4136 y(\014rst)43
b(is)f(the)h(same)f(as)h(that)f(of)h Fm(\000)p Fo(\015)48
b Fp(surgery)43 b(on)g(the)g(second.)74 b(Note)42 b(that)g
Fo(q)33 b Fm(\000)c Fo(p)42 b Fp(and)h Fo(p)g Fp(ha)m(v)m(e)57
4325 y(di\013eren)m(t)37 b(parit)m(y)-8 b(,)36 b(since)h
Fo(q)j Fp(is)d(o)s(dd.)53 b(The)37 b(follo)m(wing)f(result)g(is)h(due)g
(to)f(Delman.)52 b(See)37 b([De1])f(and)57 4514 y([De2,)c(Prop)s
(osition)h(3.1].)57 4768 y Ft(Lemma)28 b(2.)58 b Fk(Given)27
b(an)h(al)5 b(lowable)29 b(p)-5 b(ath)28 b Fo(\013)g
Fk(of)f Fo(D)s Fp(\()p Fo(p=q)t Fp(\))p Fk(,)i(ther)-5
b(e)27 b(is)g(an)h(essential)f(br)-5 b(anche)g(d)27 b(surfac)-5
b(e)57 4957 y Fm(F)45 b Fk(in)35 b Fo(S)363 4921 y Fl(3)430
4957 y Fm(\000)22 b Fo(K)43 b Fk(which)35 b(r)-5 b(emains)35
b(essential)g(after)g(al)5 b(l)36 b(nontrivial)f(sur)-5
b(geries)35 b(on)g Fo(K)7 b Fk(.)102 b Fd(\003)57 5211
y Ft(Lemma)50 b(3.)58 b Fk(If)45 b(ther)-5 b(e)45 b(is)g(an)h(al)5
b(lowable)46 b(p)-5 b(ath)46 b Fo(\013)f Fk(in)h Fo(D)s
Fp(\()p Fo(p=q)t Fp(\))f Fk(such)g(that)h Fo(c)p Fp(\()p
Fo(v)t Fp(\))f Fo(>)h Fp(2)g Fk(for)f(some)57 5400 y(vertex)35
b Fo(v)40 b Fk(in)35 b Fo(\013)p Fk(,)g(then)h Fo(K)7
b Fp(\()p Fo(\015)f Fp(\))34 b Fk(is)h(not)g(a)h(smal)5
b(l)37 b(Seifert)d(\014b)-5 b(er)g(e)g(d)35 b(sp)-5 b(ac)g(e)35
b(for)g(any)h Fo(\015)6 b Fk(.)1908 5639 y Fq(4)p eop
%%Page: 5 5
5 4 bop 57 100 a Fk(Pr)-5 b(o)g(of.)49 b Fp(It)37 b(w)m(as)g(sho)m(wn)h
(in)f([Br,)g(Corollary])e(that)i(if)g Fm(F)46 b Fp(is)37
b(an)h(essen)m(tial)f(branc)m(hed)i(surface)g(in)e(a)57
289 y(small)g(Seifert)j(\014b)s(ered)g(space)g Fo(M)11
b Fp(,)39 b(then)g(eac)m(h)h(comp)s(onen)m(t)f(of)g Fo(M)d
Fm(\000)27 b Fp(In)m(t)p Fo(N)11 b Fp(\()p Fm(F)f Fp(\))38
b(is)h(an)g Fo(I)8 b Fp(-bundle)57 478 y(o)m(v)m(er)33
b(a)f(compact)h(surface)h Fo(G)p Fp(,)f(suc)m(h)h(that)f(the)g(v)m
(ertical)f(surface)i Fo(@)2578 493 y Fn(v)2626 478 y
Fo(N)11 b Fp(\()p Fm(F)f Fp(\))31 b(\(also)i(called)g(cusps\))h(is)57
667 y(the)h Fo(I)8 b Fp(-bundle)36 b(o)m(v)m(er)e Fo(@)6
b(G)p Fp(.)48 b(It)35 b(has)g(b)s(een)h(sho)m(wn)f(in)g([De1])f(that)g
(for)h(eac)m(h)h(v)m(ertex)e Fo(v)39 b Fp(of)c Fo(\013)f
Fp(there)i(is)57 857 y(a)g(comp)s(onen)m(t)g Fo(W)749
872 y Fn(v)833 857 y Fp(of)h Fo(S)1017 821 y Fl(3)1086
857 y Fm(\000)24 b Fp(In)m(t)q Fo(N)11 b Fp(\()p Fm(F)f
Fp(\))35 b(suc)m(h)j(that)e Fo(W)2142 872 y Fn(v)2226
857 y Fp(is)g(a)g(solid)g(torus)h(whose)g(meridian)f(disk)57
1046 y(in)m(tersects)h(the)g(cusps)h Fo(c)p Fp(\()p Fo(v)t
Fp(\))e(times.)53 b(In)36 b(particular,)h(if)g Fo(c)p
Fp(\()p Fo(v)t Fp(\))32 b Fo(>)i Fp(2)i(then)h Fo(W)2910
1061 y Fn(v)2994 1046 y Fp(is)f(not)h(an)f Fo(I)44 b
Fp(bundle)57 1235 y(as)31 b(ab)s(o)m(v)m(e.)44 b(Since)32
b Fm(F)42 b Fp(is)31 b(an)h(essen)m(tial)g(branc)m(hed)i(surface)f(in)f
Fo(K)7 b Fp(\()p Fo(\015)f Fp(\),)29 b(it)i(follo)m(ws)h(that)f
Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))30 b(is)i(not)57 1425
y(a)h(small)e(Seifert)j(\014b)s(ered)h(space.)100 b Fd(\003)57
1697 y Ft(Lemma)32 b(4.)57 b Fk(Supp)-5 b(ose)31 b Fo(p)g
Fk(is)f(even,)g Fo(q)35 b Fk(is)30 b(o)-5 b(dd,)31 b(and)g
Fp(1)c Fo(<)h(p)g(<)g(q)15 b Fm(\000)c Fp(1)p Fk(.)45
b(If)31 b Fo(p=q)k Fk(do)-5 b(es)30 b(not)h(have)f(p)-5
b(artial)57 1886 y(fr)g(action)37 b(de)-5 b(c)g(omp)g(osition)37
b(of)h(typ)-5 b(e)38 b Fp([)p Fo(r)1476 1901 y Fl(1)1520
1886 y Fo(;)17 b(r)1610 1901 y Fl(2)1654 1886 y Fp(])p
Fk(,)39 b(then)f Fo(D)s Fp(\()p Fo(p=q)t Fp(\))g Fk(has)g(an)g(al)5
b(lowable)40 b(p)-5 b(ath)38 b Fo(\013)g Fk(such)h(that)57
2076 y(some)c(vertex)h Fo(v)j Fk(on)d Fo(\013)g Fk(has)f
Fo(c)p Fp(\()p Fo(v)t Fp(\))27 b Fo(>)h Fp(2)p Fk(.)57
2348 y(Pr)-5 b(o)g(of.)49 b Fp(Let)43 b([)p Fo(a)639
2363 y Fl(1)683 2348 y Fo(;)17 b(:)g(:)g(:)30 b(;)17
b(a)974 2363 y Fn(n)1027 2348 y Fp(])42 b(b)s(e)h(the)g(partial)e
(fraction)h(decomp)s(osition)g(of)g Fo(p=q)47 b Fp(suc)m(h)d(that)d
(all)h Fo(a)3768 2363 y Fn(i)57 2537 y Fp(are)e(ev)m(en.)66
b(Then)41 b Fo(a)837 2552 y Fl(1)921 2537 y Fm(\025)f
Fp(2.)66 b(If)40 b Fo(a)1341 2552 y Fn(i)1414 2537 y
Fp(=)g(2)g(for)h(all)e Fo(i)p Fp(,)j(then)f Fo(p=q)j
Fp(=)c(\()p Fo(q)30 b Fm(\000)e Fp(1\))p Fo(=q)t Fp(,)41
b(con)m(tradicting)g(our)57 2727 y(assumption.)i(Th)m(us)35
b(either)e(some)g Fo(a)1460 2742 y Fn(i)1520 2727 y Fo(<)c
Fp(0,)j(or)h(some)g Fo(a)2161 2742 y Fn(i)2221 2727 y
Fo(>)c Fp(4.)43 b(W)-8 b(e)34 b(separate)g(the)f(t)m(w)m(o)h(cases.)176
2924 y(CASE)f(1.)44 b Fk(Some)36 b Fo(a)924 2939 y Fn(i)984
2924 y Fo(<)29 b Fp(0)p Fk(.)176 3121 y Fp(Let)37 b Fo(a)411
3136 y Fn(i)480 3121 y Fp(b)s(e)g(the)g(\014rst)f(negativ)m(e)g(n)m(um)
m(b)s(er.)54 b(Then)38 b Fo(a)2126 3136 y Fn(i)p Fg(\000)p
Fl(1)2293 3121 y Fo(>)c Fp(0,)j(so)f(there)h(is)f(a)h(sign)f(c)m
(hange.)55 b(By)57 3310 y([De2])36 b(there)i(is)f(a)g(c)m(hannel)h
Fo(\013)1199 3325 y Fl(0)1281 3310 y Fp(in)f Fo(F)1465
3325 y Fn(a)1508 3335 y Ff(i)p Fe(\000)p Fh(1)1657 3310
y Fm([)25 b Fo(F)1812 3325 y Fn(a)1855 3335 y Ff(i)1929
3310 y Fp(starting)36 b(at)h(a)g(b)s(ottom)e(edge)j(and)f(ending)h(at)f
(a)57 3499 y(top)29 b(edge,)h(where)g Fo(F)829 3514 y
Fn(a)872 3524 y Ff(i)938 3499 y Fp(is)f(the)h(fan)g(in)f
Fo(D)s Fp(\()p Fo(p=q)t Fp(\))g(corresp)s(onding)h(to)f
Fo(a)2626 3514 y Fn(i)2659 3499 y Fp(.)42 b(Let)30 b
Fo(\013)2968 3514 y Fl(1)3042 3499 y Fp(b)s(e)f(the)h(part)f(of)g(the)
57 3689 y(b)s(ottom)e(path)j(of)g Fo(D)s Fp(\()p Fo(p=q)t
Fp(\))f(from)g(the)h(v)m(ertex)f(1)p Fo(=)p Fp(0)g(to)g(the)h(initial)e
(p)s(oin)m(t)h(of)h Fo(\013)2960 3704 y Fl(0)3004 3689
y Fp(,)g(and)g(let)g Fo(\013)3457 3704 y Fl(2)3530 3689
y Fp(b)s(e)g(the)57 3878 y(part)f(of)g(the)h(top)e(path)i(from)e(the)i
(end)g(p)s(oin)m(t)f(of)g Fo(\013)1959 3893 y Fl(0)2033
3878 y Fp(to)f(the)i(v)m(ertex)e Fo(p=q)t Fp(.)43 b(Then)30
b Fo(\013)e Fp(=)g Fo(\013)3351 3893 y Fl(1)3409 3878
y Fm([)14 b Fo(\013)3553 3893 y Fl(0)3612 3878 y Fm([)g
Fo(\013)3756 3893 y Fl(2)57 4067 y Fp(is)34 b(an)h(allo)m(w)m(able)f
(path)h(in)g Fo(D)s Fp(\()p Fo(p=q)t Fp(\).)48 b(W)-8
b(e)35 b(need)h(to)e(sho)m(w)h(that)g(if)g Fo(c)p Fp(\()p
Fo(v)t Fp(\))29 b(=)i(2)j(for)h(all)f(v)m(ertices)h Fo(v)k
Fp(on)57 4256 y(this)33 b(path,)g(then)h Fo(p=q)e Fp(=)c([)p
Fo(r)1092 4271 y Fl(1)1136 4256 y Fo(;)17 b(r)1226 4271
y Fl(2)1270 4256 y Fp(])33 b(for)g(some)g Fo(r)1778 4271
y Fl(1)1823 4256 y Fo(;)17 b(r)1913 4271 y Fl(2)1957
4256 y Fp(.)176 4454 y(Consider)42 b(the)g(v)m(ertices)g(on)f
Fo(\013)1359 4469 y Fl(1)1404 4454 y Fp(.)68 b(Since)42
b Fo(c)p Fp(\()p Fo(v)1898 4469 y Fn(i)1932 4454 y Fp(\))f(=)g(2)h(for)
f(all)g Fo(v)2577 4469 y Fn(i)2610 4454 y Fp(,)i(eac)m(h)g(v)m(ertex)e
Fo(v)3272 4469 y Fn(i)3346 4454 y Fp(is)h(inciden)m(t)57
4643 y(to)g(exactly)f(one)i(non)g(b)s(oundary)g(edge)h
Fo(e)1676 4658 y Fn(i)1752 4643 y Fp(of)e Fo(D)s Fp(\()p
Fo(p=q)t Fp(\),)j(whic)m(h)e(m)m(ust)f(ha)m(v)m(e)h(the)g(other)g(end)h
(on)57 4832 y(a)j(v)m(ertex)g Fo(v)522 4796 y Fg(0)518
4858 y Fn(i)599 4832 y Fp(in)g(the)h(top)f(path.)86 b(If)48
b(some)f(of)g(these)h Fo(v)2245 4796 y Fg(0)2241 4858
y Fn(i)2322 4832 y Fp(are)f(di\013eren)m(t,)52 b(then)c(since)g(all)f
(faces)57 5021 y(of)42 b Fo(D)s Fp(\()p Fo(p=q)t Fp(\))g(are)h
(triangles,)h(it)d(is)i(clear)f(that)g(some)g Fo(v)2149
5036 y Fn(j)2233 5021 y Fp(on)h Fo(\013)2445 5036 y Fl(1)2531
5021 y Fp(w)m(ould)g(ha)m(v)m(e)g(at)f(least)g(t)m(w)m(o)g(non)57
5211 y(b)s(oundary)d(edges,)i(whic)m(h)e(w)m(ould)g(b)s(e)g(a)g(con)m
(tradiction.)61 b(Similarly)-8 b(,)37 b(eac)m(h)i(v)m(ertex)g(on)g
Fo(\013)3485 5226 y Fl(2)3568 5211 y Fp(has)g(a)57 5400
y(unique)h(non)g(b)s(oundary)g(edge,)i(leading)d(to)g(a)h(common)e(v)m
(ertex)h(on)h(the)g(b)s(ottom)d(path,)42 b(so)d(the)1908
5639 y Fq(5)p eop
%%Page: 6 6
6 5 bop 57 100 a Fp(diagram)37 b Fo(D)s Fp(\()p Fo(p=q)t
Fp(\))i(lo)s(oks)f(exactly)g(as)i(in)f(Figure)g(3\(a\).)61
b(It)39 b(is)g(the)h(union)f(of)h(t)m(w)m(o)f(fans)h
Fo(F)3520 115 y Fn(r)3557 125 y Fh(1)3640 100 y Fp(and)57
289 y Fo(F)121 304 y Fn(r)158 314 y Fh(2)235 289 y Fp(with)33
b Fo(r)507 304 y Fl(1)579 289 y Fo(>)28 b Fp(0,)33 b(and)h
Fo(r)1034 304 y Fl(2)1106 289 y Fo(<)28 b Fp(0.)44 b(Therefore,)34
b Fo(p=q)e Fp(=)c([)p Fo(r)2166 304 y Fl(1)2210 289 y
Fo(;)17 b(r)2300 304 y Fl(2)2344 289 y Fp(].)176 481
y(CASE)33 b(2.)44 b Fk(Some)36 b Fo(a)924 496 y Fn(i)984
481 y Fm(\025)29 b Fp(4)p Fk(.)176 673 y Fp(In)40 b(this)f(case)g
(there)h(is)f(a)f(c)m(hannel)j Fo(\013)1611 688 y Fl(0)1694
673 y Fp(with)e(b)s(oth)g(ends)h(on)f(the)g(b)s(ottom)f(path.)61
b(Construct)57 862 y(an)36 b(allo)m(w)m(able)g(path)h
Fo(\013)c Fp(=)g Fo(\013)1140 877 y Fl(1)1209 862 y Fm([)24
b Fo(\013)1363 877 y Fl(0)1432 862 y Fm([)g Fo(\013)1586
877 y Fl(2)1667 862 y Fp(with)36 b Fo(\013)1961 877 y
Fl(1)2006 862 y Fo(;)17 b(\013)2115 877 y Fl(2)2195 862
y Fp(in)36 b(the)h(b)s(ottom)d(path.)54 b(Similar)34
b(to)i(Case)57 1052 y(1,)e(it)f(can)i(b)s(e)g(sho)m(wn)g(that)f(eac)m
(h)h(v)m(ertex)f(on)g Fo(\013)1841 1067 y Fn(i)1908 1052
y Fp(has)h(a)f(unique)h(non)f(b)s(oundary)h(edge)g(leading)f(to)57
1241 y(a)f(common)f(v)m(ertex)h Fo(v)893 1205 y Fg(0)889
1267 y Fn(i)956 1241 y Fp(on)h(the)g(top)g(path,)f(so)h
Fo(D)s Fp(\()p Fo(p=q)t Fp(\))g(lo)s(oks)e(lik)m(e)h(that)g(in)h
(Figure)g(3\(b\).)45 b(In)34 b(this)57 1430 y(case)g
Fo(p=q)d Fp(=)d([)p Fo(r)621 1445 y Fl(1)666 1430 y Fo(;)17
b(r)756 1445 y Fl(2)800 1430 y Fp(],)32 b(with)h(b)s(oth)g
Fo(r)1395 1445 y Fn(i)1456 1430 y Fo(>)28 b Fp(0.)99
b Fd(\003)309 2731 y @beginspecial 63 @llx 563 @lly 465
@urx 675 @ury 3240 @rwi @setspecial
%%BeginDocument: Fig3.ai
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
0 A
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
422.3166 671.677 m
401.8832 594.1665 l
S
376.2637 594.3652 m
422.3166 671.677 l
424.3832 594.1665 l
S
1 j
154.5743 671.9491 m
154.3964 595.0003 l
221 671.75 l
S
155.3518 595.2503 m
65.5578 595.2503 l
126.0503 671.75 l
154.5743 595.5003 l
S
150.4715 606.45 m
155.1119 607.7799 159.0579 606.8252 161.9487 603.6837 c
S
97.1911 595.6022 m
126.2875 671.5509 l
221.2372 671.5509 l
S
82.5 595.25 m
126.0503 671.75 l
126 595 l
S
181.9872 671.8009 m
154.3964 595.0003 l
201.1964 671.5 l
S
0 To
1 0 0 1 109.5 611.5 0 Tp
TP
0 Tr
0 O
0 g
0 j
/_Helvetica 12 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(...) Tx 
(\r) TX 
TO
0 To
1 0 0 1 158.5 653.25 0 Tp
TP
0 Tr
(...) Tx 
(\r) TX 
TO
0 R
0.5 G
1 j 2 w
65.5578 595.2503 m
140.25 595.25 l
140.25 671.75 l
221 671.75 l
S
0 G
1 w
116.6661 660.2122 m
120 657.75 127 656.5 130.3799 658.9622 c
S
0 To
1 0 0 1 130 566 0 Tp
TP
0 Tr
0 O
0 g
0 j
(\(a\)) Tx 
(\r) TX 
TO
0 R
0 G
330.7397 671.6149 m
422.3166 671.677 l
459.8832 594.1665 l
298.75 594.3697 l
338.3221 594.1022 l
S
376.2637 594.3652 m
S
330.8036 671.5025 m
S
327.4443 594.1046 m
330.8036 671.5025 l
352.8221 594.1022 l
S
323.6694 657.4646 m
333.6971 655.8522 343.9441 662.0818 347.8832 671.5896 c
S
330.7397 671.6149 m
S
407.0666 671.677 m
410.0666 660.427 415.5666 655.427 429.5666 656.927 c
S
289.1834 593.8802 m
330.7397 671.6149 l
376.2637 594.3652 l
S
0.5 G
2 w
289.1834 593.8802 m
339.5666 594.177 l
358.5666 624.177 l
376.2637 594.3652 l
418.3832 594.1665 l
459.8166 593.927 l
S
0 To
1 0 0 1 370.3166 565.927 0 Tp
TP
0 Tr
0 O
0 g
1 w
(\(b\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 309.25 609.25 0 Tp
TP
0 Tr
(...) Tx 
(\r) TX 
TO
0 To
1 0 0 1 433.25 609 0 Tp
TP
0 Tr
(...) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 1747 2921 a Fp(Figure)33 b(3)57 3244 y Ft(Lemma)42
b(5.)57 b Fk(L)-5 b(et)39 b Fo(K)h Fp(=)34 b Fo(K)1109
3262 y Fn(p=q)1273 3244 y Fk(b)-5 b(e)38 b(a)g(two)h(bridge)f(knot)g
(such)h(that)g Fo(p=q)e Fp(=)c([)p Fo(r)3001 3259 y Fl(1)3046
3244 y Fo(;)17 b(r)3136 3259 y Fl(2)3180 3244 y Fp(])p
Fk(,)38 b(and)h Fm(j)p Fo(r)3547 3259 y Fn(i)3579 3244
y Fm(j)33 b(\025)h Fp(3)57 3433 y Fk(for)h Fo(i)28 b
Fp(=)g(1)p Fo(;)17 b Fp(2)p Fk(.)44 b(Then)36 b(no)g(sur)-5
b(gery)35 b(on)h Fo(K)42 b Fk(is)35 b(a)h(smal)5 b(l)37
b(Seifert)d(\014b)-5 b(er)g(e)g(d)35 b(sp)-5 b(ac)g(e.)57
3691 y(Pr)g(o)g(of.)49 b Fp(Since)41 b Fo(K)46 b Fp(is)39
b(a)h(knot,)g Fo(q)k Fp(is)c(o)s(dd,)h(so)e(at)h(least)f(one)h(of)g
(the)g Fo(r)2684 3706 y Fn(i)2757 3691 y Fp(is)f(an)h(ev)m(en)h(n)m(um)
m(b)s(er.)63 b(W)-8 b(e)57 3880 y(assume)44 b(without)f(loss)h(of)h
(generalit)m(y)e(that)h Fo(r)1860 3895 y Fl(1)1950 3880
y Fp(=)i(2)p Fo(n)e Fp(for)g(some)f(in)m(teger)i Fo(n)p
Fp(,)h(since)f Fo(K)3465 3898 y Fl([)p Fn(r)3525 3908
y Fh(1)3563 3898 y Fn(;r)3624 3908 y Fh(2)3662 3898 y
Fl(])3734 3880 y Fp(is)57 4069 y(equiv)-6 b(alen)m(t)32
b(to)f Fo(K)734 4087 y Fl([)p Fn(r)794 4097 y Fh(2)832
4087 y Fn(;r)893 4097 y Fh(1)932 4087 y Fl(])959 4069
y Fp(,)h(b)m(y)g(turning)g(the)g(standard)h(diagram)d(for)i(the)h
(\014rst)f(knot)f(upside)i(do)m(wn.)176 4261 y(Let)51
b Fo(L)56 b Fp(=)g Fo(k)681 4276 y Fl(1)759 4261 y Fm([)34
b Fo(k)911 4276 y Fl(2)1006 4261 y Fp(b)s(e)50 b(a)g(2-bridge)h(link)f
(asso)s(ciated)g(to)g(the)g(rational)f(n)m(um)m(b)s(er)i
Fo(p)3513 4225 y Fg(0)3541 4261 y Fo(=q)3639 4225 y Fg(0)3723
4261 y Fp(=)57 4451 y([2)p Fo(;)17 b(r)225 4466 y Fl(2)268
4451 y Fo(;)g Fm(\000)p Fp(2].)89 b(See)50 b(Figure)e(4,)k(where)e
Fo(r)1586 4466 y Fl(2)1683 4451 y Fp(=)k Fm(\000)p Fp(6.)90
b(Notice)48 b(that)h(after)f Fm(\000)p Fp(1)p Fo(=n)h
Fp(surgery)g(on)f Fo(k)3728 4466 y Fl(1)3773 4451 y Fp(,)57
4640 y(the)29 b(other)h(comp)s(onen)m(t)f Fo(k)1038 4655
y Fl(2)1112 4640 y Fp(b)s(ecomes)h(the)f(knot)g Fo(K)35
b Fp(=)28 b Fo(K)2208 4658 y Fl([2)p Fn(n;r)2381 4668
y Fh(2)2419 4658 y Fl(])2446 4640 y Fp(.)43 b(Therefore,)31
b(doing)e Fo(\015)35 b Fp(surgery)30 b(on)57 4829 y Fo(K)40
b Fp(is)33 b(the)g(same)g(as)g(doing)h Fm(\000)p Fp(1)p
Fo(=n)f Fp(surgery)g(on)h Fo(k)1910 4844 y Fl(1)1954
4829 y Fp(,)f(then)h(doing)f(some)g Fo(\015)2821 4793
y Fg(0)2881 4829 y Fp(surgery)h(on)f Fo(k)3424 4844 y
Fl(2)3469 4829 y Fp(.)176 5021 y(By)j(considering)i(the)g(mirror)d
(image)h(of)h Fo(K)43 b Fp(if)38 b(necessary)g(w)m(e)f(ma)m(y)f(assume)
h(that)f Fo(r)3411 5036 y Fl(2)3490 5021 y Fo(<)e Fp(0.)55
b(If)57 5211 y Fo(r)102 5226 y Fl(2)176 5211 y Fp(is)30
b(ev)m(en,)h(then)g([2)p Fo(;)17 b(r)917 5226 y Fl(2)960
5211 y Fo(;)g Fm(\000)p Fp(2])30 b(is)g(a)f(partial)g(fraction)i
(decomp)s(osition)e(with)g(ev)m(en)i(co)s(e\016cien)m(t,)g(and)57
5400 y Fo(r)102 5415 y Fl(2)174 5400 y Fm(\024)d(\000)p
Fp(4.)43 b(There)30 b(is)g(an)f(allo)m(w)m(able)g(path)g(in)h
Fo(D)s Fp(\()p Fo(p)1935 5364 y Fg(0)1963 5400 y Fo(=q)2061
5364 y Fg(0)2089 5400 y Fp(\))f(with)g(t)m(w)m(o)g(c)m(hannels,)i(as)f
(sho)m(wn)g(in)g(Figure)1908 5639 y Fq(6)p eop
%%Page: 7 7
7 6 bop 57 100 a Fp(5\(a\),)29 b(where)h Fo(r)621 115
y Fl(2)693 100 y Fp(=)f Fm(\000)p Fp(4.)43 b(If)29 b
Fo(r)1137 115 y Fl(2)1212 100 y Fp(is)g(o)s(dd,)h(then)g
Fo(p)1802 63 y Fg(0)1831 100 y Fo(=q)1929 63 y Fg(0)1984
100 y Fp(=)e([2)p Fo(;)17 b(r)2257 115 y Fl(2)2315 100
y Fp(+)e(1)p Fo(;)i Fp(2],)29 b(in)g(whic)m(h)i(case)f
Fo(D)s Fp(\()p Fo(p)3412 63 y Fg(0)3440 100 y Fo(=q)3538
63 y Fg(0)3566 100 y Fp(\))f(also)57 289 y(has)k(an)h(allo)m(w)m(able)e
(path)i(with)f(t)m(w)m(o)g(c)m(hannels.)46 b(See)34 b(Figure)f(5\(b\))g
(for)g(the)h(case)g Fo(r)3180 304 y Fl(2)3252 289 y Fp(=)28
b Fm(\000)p Fp(3.)1029 1490 y @beginspecial 110 @llx
598 @lly 320 @urx 703 @ury 1800 @rwi @setspecial
%%BeginDocument: Fig4.ai
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
0 A
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
194.3357 675.362 m
185.5953 699.9488 188.4207 636.2655 179.3119 666.8306 c
S
u
289.6612 626.9131 m
290.5249 624.8111 291.0023 622.5094 291.0049 620.0964 C
291.0049 620.0964 L
291.0159 610.1554 282.9654 602.0876 273.0248 602.0766 C
133.0246 601.9228 L
123.084 601.9119 115.0159 609.962 115.0049 619.903 C
115.0049 619.903 L
115.0025 622.1687 115.4187 624.3369 116.1806 626.3347 C
S
121.0318 633.3633 m
124.2082 636.1951 128.3952 637.9178 132.9851 637.9228 C
272.9853 638.0766 L
277.1274 638.0812 280.9443 636.6862 283.9887 634.3379 C
S
203.0049 619.9997 m
S
U
231.4555 665.031 m
232.9593 661.5327 234.2143 657.0341 237.9643 657.0382 c
253.9493 657.0007 l
259.5292 656.4317 261.7851 650.0657 263.5988 642.7833 c
S
265.788 633.7647 m
267.9218 625.7866 270.9481 619.1147 278.7547 620.3329 c
285.671 621.4122 291.4581 639.0984 291.2151 656.3467 c
290.9721 673.5964 283.9955 680.5888 269.6885 680.5731 c
238.4385 680.5387 l
234.6885 680.5346 232.1792 680.3159 y
228.1155 679.1067 228.3389 641.0423 220.938 665.8763 c
S
225.7115 674.6464 m
216.9711 699.2333 219.7966 635.55 210.6877 666.115 c
S
167.0406 657.8543 m
151.0557 657.921 l
145.1111 657.4132 143.2955 650.39 141.6325 642.6485 c
S
139.3818 633.1374 m
137.2816 626.1505 133.8425 620.6677 125.6513 621.6649 c
S
125.6513 621.6649 m
118.0019 622.6563 113.2575 640.6368 113.7837 657.8789 c
114.3099 675.1224 122.6874 681.4116 136.4567 681.3381 c
166.9523 681.3597 l
170.7017 681.294 174.4635 675.2854 y
S
214.8362 674.8845 m
206.07 699.5443 208.9477 635.7004 199.8124 666.3531 c
S
u
204.8357 675.3735 m
196.0953 699.9603 198.9207 636.2771 189.8119 666.8421 c
S
U
184.3346 676.351 m
179.2232 690.7295 178.0672 674.92 176.1667 665.4262 c
174.8174 658.6859 171.4632 657.9651 167.0406 657.8543 c
S
0 To
1 0 0 1 302 613.75 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(k) Tx 
(\r) TX 
TO
0 To
1 0 0 1 300.875 657.5251 0 Tp
TP
0 Tr
(k) Tx 
(\r) TX 
TO
0 To
1 0 0 1 307 610.5 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 306.75 653.25 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 1747 1679 a(Figure)33 b(4)489 3027 y @beginspecial
34 @llx 561 @lly 384 @urx 676 @ury 2880 @rwi @setspecial
%%BeginDocument: Fig5.ai
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
0 A
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
333.4872 670.5509 m
S
311.1464 594.5003 m
S
321.6964 670.75 m
S
311.1464 594.5003 m
344.75 670.75 l
378.3518 594.2503 l
245.3078 594.2503 l
278.8003 670.75 l
310.8243 594.5003 l
310.8243 670.9491 l
S
273.1661 657.4622 m
276.3726 655.7028 282.7567 655.6844 284.6299 656.7122 c
S
337.9121 654.8232 m
340.6472 653.4296 348.2898 653.9805 351.6111 655.3741 c
S
278.6911 594.6022 m
278.8003 670.75 l
344.75 670.75 l
344.75 594.5003 l
S
0.5 G
2 w
245.3078 594.2503 m
295 594.25 l
295 670.75 l
330.25 670.75 l
330.25 594.2503 l
378.8518 594.2506 l
S
0 G
1 w
306.7215 605.45 m
309.9972 606.3888 313.028 606.088 315.596 604.6731 c
S
136.1166 669.5 m
S
65.8363 655.7122 m
68.3761 654.3186 72.75 653.5 76.0501 655.9622 c
S
99.8917 603.95 m
107.1769 606.0379 116 602 116.4667 593.4494 c
S
71.1113 593.3522 m
70.9705 669.5 l
159.1702 669.5 l
159.1702 593.2503 l
S
130.9074 669.5509 m
105.0666 592.7503 l
S
104.9945 669.4491 m
105.0666 592.7503 l
159.1702 669.5 l
202.772 669.5003 l
159.25 593.0003 l
39.478 593.0003 l
70.9705 669.5 l
104.7445 593.2503 l
S
0.5 G
2 w
39.478 593.0003 m
90.4202 593 l
90.4147 669.4491 l
118.6647 669.4491 l
139.4202 641.2503 l
159.1702 669.5 l
203.272 669.5006 l
S
0 G
1 w
147.75 593 m
148.2583 600.1167 156.5 607.75 166 604.75 c
S
0 To
1 0 0 1 101 564 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(\(a\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 305 568 0 Tp
TP
0 Tr
(\(b\)) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 1747 3216 a(Figure)g(5)176 3507 y(Let)g
Fm(F)42 b Fp(b)s(e)33 b(the)h(essen)m(tial)f(branc)m(hed)i(surface)f
(in)e(the)h(link)f(exterior)h(asso)s(ciated)f(to)h(the)g(ab)s(o)m(v)m
(e)57 3696 y(allo)m(w)m(able)26 b(path)i(in)f Fo(D)s
Fp(\()p Fo(p)993 3660 y Fg(0)1021 3696 y Fo(=q)1119 3660
y Fg(0)1147 3696 y Fp(\),)h(as)f(constructed)i(in)e([De2].)41
b(There)28 b(is)g(one)f(solid)g(torus)h(comp)s(onen)m(t)57
3886 y Fo(V)115 3901 y Fn(i)177 3886 y Fp(in)h Fo(S)356
3850 y Fl(3)413 3886 y Fm(\000)13 b Fp(In)m(t)q Fo(N)e
Fp(\()p Fm(F)f Fp(\))28 b(for)h(eac)m(h)h Fo(k)1330 3901
y Fn(i)1363 3886 y Fp(,)f(con)m(taining)g Fo(k)1952 3901
y Fn(i)2014 3886 y Fp(as)g(a)f(cen)m(tral)h(curv)m(e.)44
b(F)-8 b(rom)27 b(the)i(construction)57 4075 y(of)36
b Fm(F)45 b Fp(one)37 b(can)f(see)h(that)f(eac)m(h)h(c)m(hannel)g(con)m
(tributes)g(t)m(w)m(o)f(cusps,)i(one)f(on)f(eac)m(h)h
Fo(@)6 b(V)3317 4090 y Fn(i)3350 4075 y Fp(.)52 b(Actually)57
4264 y(from)31 b([De2,)g(Figure)h(3.5])f(w)m(e)i(see)f(that)g(the)g(t)m
(w)m(o)g(cusps)h(are)f(around)h(t)m(w)m(o)f(p)s(oin)m(ts)g(of)g
Fo(L)f Fp(on)h(a)g(lev)m(el)57 4454 y(sphere)40 b(with)e(same)g(orien)m
(tation.)60 b(Since)40 b(eac)m(h)f Fo(k)1969 4469 y Fn(i)2041
4454 y Fp(in)m(tersects)h(the)f(sphere)h(at)e(t)m(w)m(o)h(p)s(oin)m(ts)
g(with)57 4643 y(di\013eren)m(t)34 b(orien)m(tations,)f(those)h(t)m(w)m
(o)f(cusps)i(m)m(ust)e(b)s(e)h(around)g(di\013eren)m(t)g(comp)s(onen)m
(ts)g(of)g Fo(L)p Fp(.)44 b(See)57 4832 y([W)-8 b(u])33
b(for)g(more)g(details)g(ab)s(out)g(surgery)g(on)h(2-bridge)f(links.)
176 5021 y(As)41 b(the)f(allo)m(w)m(able)g(path)h(ab)s(o)m(v)m(e)f(has)
h(t)m(w)m(o)g(c)m(hannels,)i(eac)m(h)e Fo(V)2585 5036
y Fn(i)2659 5021 y Fp(has)g(t)m(w)m(o)f(meridional)f(cusps.)57
5211 y(Th)m(us)33 b Fm(F)42 b Fp(remains)32 b(an)h(essen)m(tial)g
(branc)m(hed)h(surface)g(after)f(surgery)g(on)g Fo(L)p
Fp(.)43 b(Moreo)m(v)m(er,)33 b(since)g(the)57 5400 y(surgery)43
b(on)h Fo(k)620 5415 y Fl(1)708 5400 y Fp(has)f(co)s(e\016cien)m(t)i
Fm(\000)p Fp(1)p Fo(=n)p Fp(,)g(whic)m(h)f(is)f(non-in)m(tegral,)j
(after)e(surgery)f Fo(V)3349 5415 y Fl(1)3438 5400 y
Fp(b)s(ecomes)1908 5639 y Fq(7)p eop
%%Page: 8 8
8 7 bop 57 100 a Fp(a)40 b(solid)f(torus)i(whose)f(meridional)f(disk)h
(in)m(tersects)h(the)g(cusps)g(at)f(least)g(four)g(times.)64
b(By)39 b([Br,)57 289 y(Corollary],)31 b(the)i(surgered)i(manifold)d
(is)h(not)g(a)g(small)f(Seifert)i(\014b)s(ered)h(space.)100
b Fd(\003)57 554 y Ft(Lemma)31 b(6.)57 b Fk(L)-5 b(et)31
b Fo(L)c Fp(=)h Fo(k)1021 569 y Fl(1)1076 554 y Fm([)10
b Fo(k)1204 569 y Fl(2)1279 554 y Fk(b)-5 b(e)30 b(a)g(2-bridge)f(link)
h(asso)-5 b(ciate)g(d)28 b(to)i(the)g(r)-5 b(ational)30
b(numb)-5 b(er)31 b Fo(p)3542 518 y Fg(0)3570 554 y Fo(=q)3668
518 y Fg(0)3723 554 y Fp(=)57 743 y([2)p Fo(;)17 b Fp(2)p
Fo(;)g Fm(\000)p Fp(2])p Fk(.)41 b(L)-5 b(et)32 b Fo(L)p
Fp(\()p Fo(\015)829 758 y Fl(1)873 743 y Fo(;)17 b(\015)970
758 y Fl(2)1013 743 y Fp(\))32 b Fk(b)-5 b(e)30 b(the)i(manifold)f
(obtaine)-5 b(d)30 b(by)h Fo(\015)2338 758 y Fn(i)2403
743 y Fk(sur)-5 b(gery)31 b(on)g Fo(k)2937 758 y Fn(i)2970
743 y Fk(.)44 b(If)32 b Fo(\015)3198 758 y Fl(1)3269
743 y Fp(=)d Fm(\000)p Fp(1)p Fo(=n)i Fk(and)57 933 y
Fo(\015)109 948 y Fl(2)181 933 y Fp(=)d Fm(\000)p Fp(1)p
Fk(,)35 b Fm(\000)p Fp(2)h Fk(or)g Fm(\000)p Fp(3)p Fk(,)f(then)h
Fo(L)p Fp(\()p Fo(\015)1345 948 y Fl(1)1389 933 y Fo(;)17
b(\015)1486 948 y Fl(2)1529 933 y Fp(\))36 b Fk(is)f(a)g(smal)5
b(l)37 b(Seifert)d(\014b)-5 b(er)g(e)g(d)35 b(sp)-5 b(ac)g(e.)57
1198 y(Pr)g(o)g(of.)49 b Fp(By)37 b(de\014nition)h Fo(L)p
Fp(\()p Fm(1)p Fo(;)17 b(\015)1282 1213 y Fl(2)1324 1198
y Fp(\))38 b(is)f(the)h(manifold)f(obtained)h(from)e
Fo(S)2818 1161 y Fl(3)2900 1198 y Fp(b)m(y)i Fo(\015)3095
1213 y Fl(2)3177 1198 y Fp(surgery)g(on)f Fo(k)3728 1213
y Fl(2)3773 1198 y Fp(.)57 1387 y(After)26 b Fm(\000)p
Fp(1)g(surgery)g(on)g Fo(k)991 1402 y Fl(2)1036 1387
y Fp(,)h(the)f(knot)f Fo(k)1529 1402 y Fl(1)1600 1387
y Fp(b)s(ecomes)h(a)f(trefoil)h(knot)f(in)h Fo(L)p Fp(\()p
Fm(1)p Fo(;)17 b Fm(\000)p Fp(1\))26 b(=)i Fo(S)3295
1351 y Fl(3)3340 1387 y Fp(.)42 b(Since)26 b(the)57 1576
y(exterior)35 b(of)h(a)f(torus)h(knot)f(is)h(a)f(Seifert)i(\014b)s
(ered)g(space)g(with)e(orbifold)h(a)f(disk)h(with)f(t)m(w)m(o)h(cones,)
57 1765 y(it)44 b(is)h(easy)h(to)e(see)i(that)f(all)g(but)g(one)h
(surgeries)g(yield)f(Seifert)h(\014b)s(ered)h(spaces,)i(eac)m(h)d(ha)m
(ving)57 1955 y(an)38 b(orbifold)h(a)g(disk)f(with)h(at)f(most)f(three)
j(cones.)61 b(F)-8 b(or)38 b(this)h(trefoil,)g(the)g(exceptional)f
(surgery)57 2144 y(has)c(co)s(e\016cien)m(t)i Fm(\000)p
Fp(6,)e(yielding)g(a)g(reducible)i(manifold.)46 b(Th)m(us)36
b Fo(L)p Fp(\()p Fm(\000)p Fp(1)p Fo(=n;)17 b Fm(\000)p
Fp(1\))33 b(is)h(a)g(small)f(Seifert)57 2333 y(\014b)s(ered)h(space)h
(for)e(an)m(y)g Fo(n)p Fp(.)176 2528 y(After)28 b Fm(\000)p
Fp(2)f(surgery)g(on)h Fo(k)1116 2543 y Fl(2)1160 2528
y Fp(,)g Fo(k)1268 2543 y Fl(1)1340 2528 y Fp(b)s(ecomes)f(a)g(knot)f
(in)h Fc(R)5 b Fo(P)2284 2492 y Fl(3)2363 2528 y Fp(=)28
b Fo(L)p Fp(\()p Fm(1)p Fo(;)17 b Fm(\000)p Fp(2\).)40
b(The)28 b(link)e Fo(L)h Fp(is)g(dra)m(wn)57 2717 y(in)h(Figure)h
(6\(a\),)f(where)i(the)f(curv)m(e)g Fo(C)36 b Fp(is)28
b(a)h(curv)m(e)g(on)g Fo(@)6 b(N)11 b Fp(\()p Fo(k)2341
2732 y Fl(2)2385 2717 y Fp(\))28 b(of)h(slop)s(e)f Fm(\000)p
Fp(2,)i(so)f(it)f(b)s(ounds)h(a)g(disk)57 2907 y(in)e
Fo(L)p Fp(\()p Fm(1)p Fo(;)17 b Fm(\000)p Fp(2\).)41
b(Th)m(us)28 b(a)g(band)g(sum)f(of)h Fo(k)1586 2922 y
Fl(1)1658 2907 y Fp(and)g Fo(C)35 b Fp(forms)27 b(a)g(knot)g
Fo(k)2577 2870 y Fg(0)2574 2931 y Fl(1)2646 2907 y Fp(isotopic)g(to)g
Fo(k)3174 2922 y Fl(1)3246 2907 y Fp(in)h Fo(L)p Fp(\()p
Fm(1)p Fo(;)17 b Fm(\000)p Fp(2\).)57 3096 y(The)29 b(link)g
Fo(L)518 3060 y Fg(0)573 3096 y Fp(=)f Fo(k)733 3060
y Fg(0)730 3121 y Fl(1)789 3096 y Fm([)14 b Fo(k)921
3111 y Fl(2)994 3096 y Fp(is)29 b(sho)m(wn)h(in)f(Figure)h(6\(b\).)42
b(Using)29 b(Kirb)m(y)g(Calculus)g(one)h(can)f(sho)m(w)h(that)57
3285 y Fo(L)p Fp(\()p Fm(\000)p Fp(1)p Fo(=n;)17 b Fm(\000)p
Fp(2\))35 b(=)i Fo(L)829 3249 y Fg(0)857 3285 y Fp(\()p
Fm(\000)p Fp(2)26 b Fm(\000)g Fp(1)p Fo(=n;)17 b Fm(\000)p
Fp(2\).)59 b(The)39 b(exterior)f(of)h Fo(k)2368 3249
y Fg(0)2365 3310 y Fl(1)2448 3285 y Fp(in)g Fo(S)2637
3249 y Fl(3)2720 3285 y Fp(is)g(a)f(Seifert)i(\014b)s(ered)g(space)57
3474 y(with)e(orbifold)h(a)f(disk)h(with)f(t)m(w)m(o)h(cones,)h(in)f
(whic)m(h)h Fo(k)2156 3489 y Fl(2)2239 3474 y Fp(is)e(a)h(singular)f
(\014b)s(er)i(of)f(index)f(3.)61 b(Th)m(us)57 3664 y(after)33
b Fm(\000)p Fp(2)g(surgery)g(on)g Fo(k)994 3679 y Fl(2)1039
3664 y Fp(,)f(the)h(manifold)f Fo(L)p Fp(\()p Fm(1)p
Fo(;)17 b Fm(\000)p Fp(2\))j Fm(\000)i Fp(In)m(t)p Fo(N)11
b Fp(\()p Fo(k)2531 3628 y Fg(0)2528 3688 y Fl(1)2572
3664 y Fp(\))33 b(is)g(still)e(Seifert)j(\014b)s(ered,)g(with)57
3853 y(orbifold)g(a)g(disk)g(with)g(t)m(w)m(o)g(cones.)49
b(The)34 b(\014b)s(er)h(slop)s(e)g(on)f Fo(@)6 b(N)11
b Fp(\()p Fo(k)2518 3817 y Fg(0)2515 3878 y Fl(1)2559
3853 y Fp(\))34 b(is)g(6.)47 b(It)34 b(follo)m(ws)g(that)g(all)f(but)57
4042 y(the)39 b(6)g(surgery)h(on)f Fo(k)881 4006 y Fg(0)878
4067 y Fl(1)962 4042 y Fp(in)g Fo(L)p Fp(\()p Fm(1)p
Fo(;)17 b Fm(\000)p Fp(2\))38 b(yield)g(small)g(Seifert)i(\014b)s(ered)
h(manifolds.)61 b(In)39 b(particular,)57 4232 y Fo(L)p
Fp(\()p Fm(\000)p Fp(1)p Fo(=n;)17 b Fm(\000)p Fp(2\))26
b(=)i Fo(L)811 4195 y Fg(0)839 4232 y Fp(\()p Fm(\000)p
Fp(2)22 b Fm(\000)h Fp(1)p Fo(=n;)17 b Fm(\000)p Fp(2\))32
b(are)h(small)f(Seifert)i(\014b)s(ered)g(manifolds)f(for)h(all)e
Fo(n)p Fp(.)176 4426 y(The)47 b(pro)s(of)f(for)g Fo(\015)884
4441 y Fl(2)978 4426 y Fp(=)j Fm(\000)p Fp(3)d(is)g(similar.)81
b(One)47 b(can)f(sho)m(w)h(that)f(the)g(band)h(sum)e(of)i
Fo(k)3550 4441 y Fl(1)3640 4426 y Fp(and)57 4615 y(the)38
b(curv)m(e)h Fo(C)46 b Fp(of)39 b(slop)s(e)f Fm(\000)p
Fp(3)h(on)f Fo(@)6 b(N)11 b Fp(\()p Fo(k)1547 4630 y
Fl(2)1591 4615 y Fp(\))38 b(is)g(isotopic)g(to)g(the)g(curv)m(e)i
Fo(k)2774 4579 y Fg(0)2771 4640 y Fl(1)2853 4615 y Fp(sho)m(wn)g(in)e
(Figure)g(6\(c\),)57 4805 y(whic)m(h)45 b(is)g(a)g(\(3)p
Fo(;)17 b Fm(\000)p Fp(2\))43 b(torus)i(knot.)79 b(By)44
b(the)h(same)f(argumen)m(t)g(as)h(ab)s(o)m(v)m(e)g(one)g(can)h(sho)m(w)
f(that)57 4994 y Fo(L)p Fp(\()p Fm(\000)p Fp(1)p Fo(=n;)17
b Fm(\000)p Fp(3\))26 b(=)i Fo(L)p Fp(\()p Fm(\000)p
Fp(3)22 b Fm(\000)h Fp(1)p Fo(=n;)17 b Fm(\000)p Fp(3\))32
b(are)h(small)f(Seifert)i(\014b)s(ered)g(manifolds)f(for)h(all)e
Fo(n)p Fp(.)99 b Fd(\003)1908 5639 y Fq(8)p eop
%%Page: 9 9
9 8 bop 129 1144 a @beginspecial 72 @llx 284 @lly 519
@urx 426 @ury 3600 @rwi @setspecial
%%BeginDocument: Fig6.ai
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
0 A
0 To
1 0 0 1 349.1523 382.9302 0 Tp
TP
0 Tr
0 O
0 g
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(1) Tx 
(\r) TX 
TO
u
0.7 g
143.875 334.125 m
143.875 339.625 L
129.375 339.625 L
129.375 334.125 L
143.875 334.125 L
f
136.625 336.875 m
F
U
0 R
0 G
147.7851 328.2795 m
148.5738 330.7109 149 333.3056 149 335.9999 C
149 398.0001 L
149 401.1001 148.4357 404.0684 147.4043 406.8077 C
S
143.9412 413.0802 m
139.3766 419.1068 132.1429 423 124 423 C
124 423 L
110.1931 423 99 411.807 99 398.0001 C
99 371.625 L
S
99 356.625 m
99 335.9999 L
99 322.193 110.1931 311 124 311 C
124 311 L
132.4028 311 139.8374 315.1457 144.3701 321.5033 C
S
124 367 m
S
u
0.5 G
142.2074 327.712 m
143.3586 330.237 144 333.0435 144 335.9997 C
144 398.0003 L
144 401.0561 143.3147 403.9517 142.0894 406.542 C
S
138.0164 412.2668 m
134.4075 415.8128 129.4591 418 124 418 C
124 418 L
112.9545 418 104 409.046 104 398.0003 C
104 376.5 L
S
104 356.25 m
104 335.9997 L
104 324.9539 112.9545 316 124 316 C
124 316 L
129.9379 316 135.2715 318.5876 138.9344 322.6968 C
S
124 367 m
S
U
u
0 G
181 398.5 m
181 398.5 L
181 404.8512 175.8513 410 169.5 410 C
140.5 410 L
134.1487 410 129 404.8512 129 398.5 C
129 398.5 L
129 392.1488 134.1487 387 140.5 387 C
141 387 L
S
152.5 387 m
155 387 L
S
155 398.5 m
S
U
181 398.5 m
181 374.75 l
181 370.875 167 367.75 167 365.25 c
167 364.0988 168.4625 363.1997 170.4585 362.3966 c
S
178.1213 359.7405 m
180.0764 358.9602 181.5 358.0967 181.5 357 c
181.4999 336.875 L
181.4999 336.75 L
181.4999 330.3988 175.8512 325.25 169.5 325.25 C
140.5 325.25 L
134.1488 325.25 129.0001 330.3988 129.0001 336.75 C
129.0001 336.75 L
129.0001 343.1012 134.1488 348.25 140.5 348.25 C
S
152.25 348.25 m
S
152.25 348.25 m
155 348.25 L
166.75 348.25 167 351.625 167 352.875 c
167 354.125 167 357 y
167 360.375 181.25 361.75 181.25 365 c
181.25 366.1712 179.7103 367.1205 177.6254 368.0009 c
S
169.9048 370.9413 m
167.9282 371.829 166.4905 372.8134 166.4862 374.032 c
166.4818 375.2898 166.5 377.5625 166.5 379.25 c
166.5 384 163.5 387 155 387 c
S
155 336.75 m
S
99.1517 361.7501 m
99.1189 367.125 L
S
0.5 G
104 356.25 m
103.9824 359.125 93.4155 359.465 93.4018 361.715 c
93.3962 362.6271 95.1597 363.1597 97.2577 363.6454 c
S
101.3872 364.6271 m
102.957 365.0885 104.1279 365.6629 104.1226 366.5305 c
104.1051 369.4055 93.2333 368.8391 93.2165 371.589 c
93.2095 372.739 95.1078 373.3104 97.318 373.7871 c
S
101.8466 374.8075 m
103.1493 375.2104 104.0665 375.7304 104.0616 376.5303 c
S
0 To
1 0 0 1 184.75 390.25 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 10 Tf
(k) Tx 
(\r) TX 
TO
0 To
1 0 0 1 85.5 395.9001 0 Tp
TP
0 Tr
(k) Tx 
(\r) TX 
TO
0 To
1 0 0 1 83 362.75 0 Tp
TP
0 Tr
(C) Tx 
(\r) TX 
TO
0 To
1 0 0 1 190.5 387.75 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 91.5 392.75 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
u
0 R
0 G
309.7858 410.2717 m
305.4966 417.8699 297.3473 423 288 423 C
288 423 L
274.1931 423 263 411.807 263 398.0001 C
263 335.9999 L
263 322.193 274.1931 311 288 311 C
288 311 L
301.8069 311 313 322.193 313 335.9999 C
313 392.125 L
S
312.9804 398.9989 m
312.9112 400.76 312.6598 402.4744 312.2445 404.1237 C
S
288 367 m
S
U
u
338 379.75 m
338 386.5 L
338 397.5455 329.0454 406.5 317.9999 406.5 C
308.0001 406.5 L
296.9546 406.5 288 397.5455 288 386.5 C
288 346.5 L
288 335.4545 296.9546 326.5 308.0001 326.5 C
308.375 326.5 L
S
314.5 326.5 m
317.9999 326.5 L
329.0454 326.5 338 335.4545 338 346.5 C
338 352.125 L
S
313 366.5 m
S
U
u
328 378.875 m
328 381.5 L
328 389.7841 321.2841 396.5 313 396.5 C
313 396.5 L
304.7158 396.5 298 389.7841 298 381.5 C
298 351.5 L
298 344.0704 303.4018 337.9022 310.4922 336.7087 C
S
316.1093 336.8227 m
322.9014 338.2544 328 344.2819 328 351.5 C
328 352.75 L
S
313 366.5 m
S
U
u
335.789 372.8553 m
346.25 365.5 319.5 365.25 330.75 358 c
S
338.1501 379.7451 m
338.1501 375.7893 328.3548 372.5992 328.3548 370.0471 c
328.3548 368.8718 329.378 367.954 330.7746 367.1341 c
S
u
335.6359 354.7977 m
337.0038 354.0012 337.9999 353.1196 337.9999 352.0001 c
S
U
u
327.9798 352.7501 m
327.9798 356.1954 337.95 357.5991 337.95 360.9168 c
337.95 362.1124 336.8727 363.0816 335.414 363.9803 c
S
U
330.3872 375.857 m
329.0043 376.7632 327.9983 377.7681 327.9953 379.0121 c
S
U
0 To
1 0 0 1 249.2773 392.7552 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 10 Tf
(k) Tx 
(\r) TX 
TO
0 To
1 0 0 1 255.2773 389.6051 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 344.4023 387.4302 0 Tp
TP
0 Tr
/_Helvetica 10 Tf
(k') Tx 
(\r) TX 
TO
0 To
1 0 0 1 506.2148 382.4302 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(1) Tx 
(\r) TX 
TO
0 R
0 G
466.8483 409.7717 m
462.5591 417.3699 454.4098 422.5 445.0625 422.5 C
445.0625 422.5 L
431.2556 422.5 420.0625 411.307 420.0625 397.5001 C
420.0625 335.4999 L
420.0625 321.693 431.2556 310.5 445.0625 310.5 C
445.0625 310.5 L
458.8694 310.5 470.0625 321.693 470.0625 335.4999 C
470.0625 385.25 L
S
470.0625 391.75 m
470.0625 394.375 L
S
469.911 400.2685 m
469.785 401.4118 469.5819 402.532 469.307 403.6237 C
S
445.0625 366.5 m
S
495.0625 374.75 m
495.0625 386 L
495.0625 397.0455 486.1079 406 475.0624 406 C
465.0626 406 L
454.0171 406 445.0625 397.0455 445.0625 386 C
445.0625 346 L
445.0625 335.2265 453.5815 326.4423 464.2505 326.0162 C
S
472.25 326 m
475.0624 326 L
486.1079 326 495.0625 334.9545 495.0625 346 C
495.0625 354.375 L
S
470.0625 366 m
S
0 To
1 0 0 1 406.3398 392.2552 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 10 Tf
(k) Tx 
(\r) TX 
TO
0 To
1 0 0 1 412.3398 389.1051 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 501.4648 386.9302 0 Tp
TP
0 Tr
/_Helvetica 10 Tf
(k') Tx 
(\r) TX 
TO
0 R
0 G
480.25 375.5 m
480.25 379.125 L
480.25 384.7168 475.7168 389.25 470.125 389.25 C
470.125 389.25 L
464.5332 389.25 460 384.7168 460 379.125 C
460 352.875 L
460 348.4725 462.81 344.7262 466.7342 343.3318 C
S
473.4768 343.318 m
477.4214 344.7014 480.25 348.4579 480.25 352.875 C
480.5 356.75 L
S
0 O
0 g
470.125 366 m
F
0 R
0 G
487.5 375.5 m
487.5 382.5002 L
487.5 390.7841 480.7842 397.5 472.5 397.5 C
467.75 397.5 L
459.4658 397.5 452.75 390.7841 452.75 382.5002 C
452.75 348.7498 L
452.75 341.2349 458.2768 335.0104 465.4875 333.9195 C
S
473.6317 333.7921 m
481.3873 334.3706 487.5 340.8466 487.5 348.7498 C
487.5 355.25 L
S
470.125 365.625 m
S
480.25 375.5 m
480.25 371.75 496.25 368.5 496.25 365 c
496.25 363.535 494.717 362.2452 492.9344 360.9657 c
S
488.5053 357.4791 m
487.89 356.7777 487.5 356.0417 487.5 355.25 c
S
495.0625 354.375 m
495.1875 359.875 480.2352 362.2516 480.125 366 c
480.0778 367.6038 481.1165 368.7804 482.4283 369.8388 c
S
486.7872 373.4726 m
487.2275 374.075 487.5 374.7375 487.5 375.5 c
S
480.5 356.75 m
480.5 358.1939 481.1664 359.5692 482.214 360.8979 c
S
485.8217 364.4386 m
486.9564 365.3892 488.1598 366.3248 489.3098 367.2548 c
S
492.9582 370.5387 m
494.2279 371.9201 495.0625 373.3135 495.0625 374.75 c
S
0 To
1 0 0 1 128 289 0 Tp
TP
0 Tr
0 O
0 g
/_Helvetica 12 Tf
(\(a\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 292 287 0 Tp
TP
0 Tr
(\(b\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 451 287 0 Tp
TP
0 Tr
(\(c\)) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 1747 1333 a Fp(Figure)33 b(6)57 1710 y Ft(Corollary)38
b(7.)58 b Fk(L)-5 b(et)36 b Fo(K)42 b Fk(b)-5 b(e)35
b(a)h(non-torus)f(2-bridge)g(knot.)176 1913 y(\(1\))g
Fo(K)43 b Fk(admits)35 b(a)h(smal)5 b(l)36 b(Seifert)f(\014b)-5
b(er)g(e)g(d)35 b(sur)-5 b(gery)35 b(if)g(and)h(only)g(if)f(it)g(is)g
(a)h(twist)f(knot;)176 2116 y(\(2\))40 b(If)g Fo(K)j
Fp(=)37 b Fo(K)785 2134 y Fn(p=q)951 2116 y Fk(is)i(a)i(twist)f(knot)g
(with)g Fo(p=q)g Fp(=)d([2)p Fo(n;)17 b Fm(\006)p Fp(2])p
Fk(,)40 b(then)g Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))38
b Fk(is)i(a)g(smal)5 b(l)42 b(Seifert)57 2305 y(\014b)-5
b(er)g(e)g(d)34 b(sp)-5 b(ac)g(e)35 b(for)g Fo(\015)e
Fp(=)28 b Fm(\007)p Fp(1)p Fk(,)36 b Fm(\007)p Fp(2)g
Fk(and)f Fm(\007)p Fp(3)p Fk(.)176 2508 y(\(3\))g Fo(K)7
b Fp(\()p Fo(\015)f Fp(\))34 b Fk(is)h(not)h(Seifert)e(\014b)-5
b(er)g(e)g(d)35 b(unless)h Fo(\015)41 b Fk(is)35 b(an)g(inte)-5
b(ger.)57 2798 y(Pr)g(o)g(of.)49 b Fp(As)24 b(noticed)g(b)s(efore,)i
(up)f(to)e(taking)g(the)h(mirror)f(image)f(w)m(e)i(ma)m(y)f(assume)g
(that)h Fo(K)34 b Fp(=)29 b Fo(K)3648 2816 y Fn(p=q)3773
2798 y Fp(,)57 2987 y(where)40 b(1)d Fo(<)h(p)f(<)h(q)t
Fp(,)i Fo(p)g Fp(is)f(ev)m(en,)h(and)g Fo(q)j Fp(is)c(o)s(dd.)62
b(Note)38 b(that)h(if)g Fo(p=q)j Fp(=)c(\()p Fo(q)29
b Fm(\000)e Fp(1\))p Fo(=q)42 b Fp(then)e Fo(K)46 b Fp(is)39
b(a)57 3176 y(\(2)p Fo(;)17 b(q)t Fp(\))32 b(torus)j(knot.)46
b(Hence)35 b(if)f Fo(K)41 b Fp(is)34 b(a)g(non-torus)h(knot)e
(admitting)f(some)i(small)e(Seifert)j(\014b)s(ered)57
3366 y(surgery)-8 b(,)32 b(then)h(b)m(y)f(Lemma)f(3)h(and)g(Lemma)f(4)h
(w)m(e)h(m)m(ust)f(ha)m(v)m(e)g Fo(p=q)g Fp(=)c([)p Fo(b)2829
3381 y Fl(1)2873 3366 y Fo(;)17 b(b)2961 3381 y Fl(2)3005
3366 y Fp(])32 b(for)g(some)g(in)m(tegers)57 3555 y Fo(b)100
3570 y Fl(1)144 3555 y Fo(;)17 b(b)232 3570 y Fl(2)276
3555 y Fp(.)48 b(Note)34 b(that)h Fo(b)855 3570 y Fn(i)918
3555 y Fm(6)p Fp(=)30 b Fm(\006)p Fp(1,)35 b(otherwise)g
Fo(K)41 b Fp(is)35 b(a)f(torus)h(knot.)48 b(Therefore)36
b(b)m(y)f(Lemma)e(5)h(one)h(of)57 3744 y(the)e Fo(b)271
3759 y Fn(i)337 3744 y Fp(m)m(ust)g(b)s(e)h Fm(\006)p
Fp(2.)44 b(In)34 b(other)f(w)m(ords,)h Fo(K)40 b Fp(is)33
b(a)g(t)m(wist)g(knot.)176 3947 y(Consider)k(the)f(case)g
Fo(p=q)f Fp(=)e([)p Fo(b;)17 b Fp(2].)49 b(The)36 b(pro)s(of)g(for)g
Fo(p=q)f Fp(=)e([)p Fo(b;)17 b Fm(\000)p Fp(2])34 b(is)h(similar.)50
b(Since)36 b([)p Fo(b;)17 b Fp(2])30 b(=)57 4136 y([)p
Fo(b)22 b Fm(\000)g Fp(1)p Fo(;)17 b Fm(\000)p Fp(2],)33
b(w)m(e)h(ma)m(y)e(further)j(assume)f(that)f Fo(b)28
b Fp(=)h(2)p Fo(n)k Fp(is)h(ev)m(en.)46 b(Let)34 b Fo(L)28
b Fp(=)h Fo(k)2941 4151 y Fl(1)3008 4136 y Fm([)23 b
Fo(k)3149 4151 y Fl(2)3227 4136 y Fp(b)s(e)34 b(a)f(2-bridge)57
4326 y(link)24 b(asso)s(ciated)h(to)f(the)h(rational)f(n)m(um)m(b)s(er)
h Fo(p)1754 4290 y Fg(0)1782 4326 y Fo(=q)1880 4290 y
Fg(0)1936 4326 y Fp(=)j([2)p Fo(;)17 b Fp(2)p Fo(;)g
Fm(\000)p Fp(2].)39 b(Notice)24 b(that)h(after)g Fm(\000)p
Fp(1)p Fo(=n)f Fp(surgery)57 4515 y(on)38 b Fo(k)252
4530 y Fl(1)297 4515 y Fp(,)i(the)f(knot)f Fo(k)829 4530
y Fl(2)912 4515 y Fp(b)s(ecomes)h(the)g(knot)f Fo(K)43
b Fp(=)37 b Fo(K)2053 4533 y Fl([)p Fn(b;)p Fl(2])2240
4515 y Fp(in)i Fo(S)2429 4479 y Fl(3)2510 4515 y Fp(=)e
Fo(L)p Fp(\()p Fm(\000)p Fp(1)p Fo(=n;)17 b Fm(1)p Fp(\).)58
b(Therefore)41 b(b)m(y)57 4704 y(Lemma)30 b(6,)i Fo(K)7
b Fp(\()p Fo(\015)f Fp(\))26 b(=)i Fo(L)p Fp(\()p Fm(\000)p
Fp(1)p Fo(=n;)17 b(\015)6 b Fp(\))30 b(are)i(small)f(Seifert)h(\014b)s
(ered)i(spaces)f(for)g Fo(\015)f Fp(=)c Fm(\000)p Fp(1,)33
b Fm(\000)p Fp(2)f(and)h Fm(\000)p Fp(3.)176 4907 y(P)m(art)g(\(3\))g
(follo)m(ws)g(from)f([Br].)98 b Fd(\003)57 5197 y Ft(Lemma)38
b(8.)57 b Fk(L)-5 b(et)36 b Fo(K)43 b Fk(b)-5 b(e)35
b(a)g(non-torus)h(2-bridge)e(knot.)45 b(Supp)-5 b(ose)36
b Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))34 b Fk(is)h(tor)-5
b(oidal.)45 b(Then)176 5400 y(\(1\))35 b Fo(K)g Fp(=)28
b Fo(K)654 5418 y Fl([)p Fn(b)712 5428 y Fh(1)750 5418
y Fn(;b)809 5428 y Fh(2)848 5418 y Fl(])911 5400 y Fk(for)35
b(some)g Fo(b)1367 5415 y Fl(1)1412 5400 y Fo(;)17 b(b)1500
5415 y Fl(2)1544 5400 y Fk(.)1908 5639 y Fq(9)p eop
%%Page: 10 10
10 9 bop 176 100 a Fk(\(2\))30 b(If)g Fm(j)p Fo(b)509
115 y Fn(i)542 100 y Fm(j)d Fo(>)h Fp(2)j Fk(for)e Fo(i)f
Fp(=)g(1)p Fo(;)17 b Fp(2)p Fk(,)30 b(ther)-5 b(e)30
b(is)g(exactly)h(one)f(such)g Fo(\015)6 b Fk(.)43 b(When)30
b(b)-5 b(oth)30 b Fo(b)3048 115 y Fn(i)3111 100 y Fk(ar)-5
b(e)30 b(even,)g Fo(\015)j Fp(=)28 b(0)p Fk(.)57 289
y(When)35 b Fo(b)388 304 y Fl(1)468 289 y Fk(is)g(o)-5
b(dd)35 b(and)g Fo(b)994 304 y Fl(2)1075 289 y Fk(is)f(even,)h
Fo(\015)e Fp(=)28 b(2)p Fo(b)1724 304 y Fl(2)1768 289
y Fk(.)176 478 y(\(3\))41 b(If)g Fo(K)j Fp(=)38 b Fo(K)789
496 y Fl([2)p Fn(n;)p Fl(2])1032 478 y Fk(and)j Fm(j)p
Fo(n)p Fm(j)36 b Fo(>)i Fp(1)p Fk(,)k Fo(K)7 b Fp(\()p
Fo(\015)f Fp(\))39 b Fk(is)i(tor)-5 b(oidal)40 b(if)g(and)h(only)h(if)e
Fo(\015)j Fp(=)38 b(0)j Fk(or)g Fm(\000)p Fp(4)p Fk(.)61
b(F)-8 b(or)57 667 y Fo(K)34 b Fp(=)28 b Fo(K)366 685
y Fl([2)p Fn(n;)p Fg(\000)p Fl(2])631 667 y Fk(,)35 b
Fo(\015)e Fp(=)28 b(0)35 b Fk(or)h Fp(4)p Fk(.)176 857
y(\(4\))f(If)h Fo(K)e Fp(=)28 b Fo(K)758 875 y Fl([2)p
Fn(;)p Fg(\000)p Fl(2])974 857 y Fk(,)35 b Fo(\015)d
Fp(=)d(0)p Fk(,)35 b Fp(4)p Fk(,)g(or)g Fm(\000)p Fp(4)p
Fk(.)57 1093 y(Pr)-5 b(o)g(of.)49 b Fp(W)-8 b(e)23 b(refer)h(the)f
(reader)g(to)f([HT])g(for)h(notations.)40 b(If)23 b Fo(K)7
b Fp(\()p Fo(\015)f Fp(\))21 b(is)i(toroidal,)g(there)h(is)e(an)h
(essen)m(tial)57 1283 y(punctured)38 b(torus)e Fo(T)50
b Fp(in)37 b(the)f(knot)g(exterior.)52 b(By)35 b(Theorem)h(1)g(of)g
([HT],)f Fo(T)50 b Fp(is)36 b(carried)h(b)m(y)f(some)57
1472 y(\006[)p Fo(b)200 1487 y Fl(1)244 1472 y Fo(;)17
b(:)g(:)g(:)30 b(;)17 b(b)525 1487 y Fn(k)574 1472 y
Fp(],)34 b(where)i([)p Fo(b)1025 1487 y Fl(1)1069 1472
y Fo(;)17 b(:)g(:)g(:)30 b(;)17 b(b)1350 1487 y Fn(k)1398
1472 y Fp(])35 b(is)f(an)h(expansion)g(of)g Fo(p=q)t
Fp(.)49 b(By)34 b(the)h(pro)s(of)g(of)g(Theorem)f(2)g(of)57
1661 y([HT],)39 b(w)m(e)j(ha)m(v)m(e)f(0)f(=)h(2)27 b
Fm(\000)h Fp(2)p Fo(g)43 b Fp(=)e Fo(n)p Fp(\(2)26 b
Fm(\000)i Fo(k)s Fp(\).)67 b(Therefore)42 b Fo(k)h Fp(=)e(2.)67
b(This)41 b(pro)m(v)m(es)h(\(1\).)66 b(The)41 b(rest)57
1851 y(follo)m(ws)25 b(b)m(y)g(determining)g(all)f(the)h(p)s(ossible)h
(expansions)g(of)f(t)m(yp)s(e)g([)p Fo(b)2598 1866 y
Fl(1)2642 1851 y Fo(;)17 b(b)2730 1866 y Fl(2)2774 1851
y Fp(])25 b(for)g Fo(p=q)t Fp(.)42 b(The)25 b(b)s(oundary)57
2040 y(slop)s(es)39 b(of)f(the)h(surfaces)h(can)f(b)s(e)g(calculated)g
(using)g(Prop)s(osition)e(2)i(of)f([HT].)f(By)h(the)h(pro)s(of)f(of)57
2229 y([Pr,)e(Corollary)f(2.1],)h(an)g(incompressible)h(punctured)i
(torus)e Fo(T)50 b Fp(in)37 b(the)f(exterior)g(of)h(a)f(2-bridge)57
2418 y(knot)c(will)h(b)s(ecome)g(an)g(essen)m(tial)h(torus)f(after)h
(surgery)f(along)g(the)h(slop)s(e)f(of)g Fo(@)6 b(T)14
b Fp(.)99 b Fd(\003)57 2655 y Ft(Lemma)26 b(9.)58 b Fk(If)26
b Fo(K)33 b Fk(is)25 b(a)i(nontorus)f(2-bridge)f(knot,)i(then)g
Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))24 b Fk(has)i(a)g(ge)-5
b(ometric)26 b(de)-5 b(c)g(omp)g(osition,)57 2844 y(i.e.)34
b(it)h(is)g(either)g(tor)-5 b(oidal,)35 b(or)g(Seifert)g(\014b)-5
b(er)g(e)g(d,)34 b(or)i(hyp)-5 b(erb)g(olic.)57 3081
y(Pr)g(o)g(of.)49 b Fp(A)42 b Fo(p=q)k Fp(2-bridge)c(knot)g(can)h(b)s
(e)f(obtained)g(b)m(y)h(taking)e(t)m(w)m(o)h(arcs)g(of)h(slop)s(e)f
Fo(p=q)k Fp(on)c(the)57 3270 y(\\pillo)m(w)m(case",)37
b(then)h(joining)f(the)g(ends)h(with)f(t)m(w)m(o)g(trivial)e(arcs.)55
b(F)-8 b(rom)36 b(this)h(picture)g(it)g(is)g(easy)57
3460 y(to)31 b(see)h(that)f Fo(K)38 b Fp(is)32 b(a)f(strongly)f(in)m(v)
m(ertible)i(knot,)f(i.e,)g(there)h(is)f(an)h(in)m(v)m(olution)f
Fo(')h Fp(of)f Fo(S)3319 3424 y Fl(3)3395 3460 y Fp(suc)m(h)i(that)57
3649 y Fo(')p Fp(\()p Fo(K)7 b Fp(\))32 b(=)i Fo(K)7
b Fp(,)37 b(and)f(the)h(\014xed)g(p)s(oin)m(t)g(set)g(of)f
Fo(')h Fp(is)f(a)h(circle)f Fo(S)43 b Fp(in)m(tersecting)37
b Fo(K)43 b Fp(at)36 b(t)m(w)m(o)h(p)s(oin)m(ts.)54 b
Fo(')57 3838 y Fp(restricts)25 b(to)g(an)g(in)m(v)m(olution)g(of)g
Fo(E)6 b Fp(\()p Fo(K)h Fp(\))27 b(=)h Fo(S)1690 3802
y Fl(3)1740 3838 y Fm(\000)6 b Fp(In)m(t)q Fo(N)11 b
Fp(\()p Fo(K)c Fp(\),)26 b(whic)m(h)g(can)g(b)s(e)f(extended)h(to)f(an)
h(in)m(v)m(olu-)57 4028 y(tion)41 b Fb(b)-68 b Fo(')29
b Fp(of)g(the)g(surgered)i(manifold.)55 b Fb(b)-69 b
Fo(')29 b Fp(has)h(nonempt)m(y)e(\014xed)i(p)s(oin)m(t.)42
b(Since)30 b Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))27 b(is)i(irreducible)57
4217 y([HT],)i(the)h(result)h(follo)m(ws)f(from)f(Th)m(urston's)j
(orbifold)e(geometrization)f(theorem)g([Th3],)h(whic)m(h)57
4406 y(sa)m(ys)j(that)g(if)g(an)g(irreducible,)h(closed)g(3-manifold)e
(admits)g(an)h(orien)m(table)g(preserving)h(p)s(erio)s(dic)57
4595 y(map)g(with)g(nonempt)m(y)g(\014xed)i(p)s(oin)m(t)e(set,)i(then)f
Fo(M)48 b Fp(has)37 b(a)f(geometric)g(decomp)s(osition.)54
b(See)37 b(the)57 4785 y(thesis)d(of)f(Q.)g(Zhou)h([Zh])f(for)g(a)g
(pro)s(of.)100 b Fd(\003)57 5021 y Fk(Pr)-5 b(o)g(of)33
b(of)h(The)-5 b(or)g(em)35 b(1.)89 b Fp(P)m(art)32 b(\(5\))f(is)h(w)m
(ell)g(kno)m(wn:)44 b(If)32 b Fo(K)39 b Fp(is)32 b(a)g(\()p
Fo(p;)17 b(q)t Fp(\))31 b(torus)i(knot,)e(then)i Fo(E)6
b Fp(\()p Fo(K)h Fp(\))31 b(is)57 5211 y(a)j(Seifert)h(\014b)s(ered)g
(space,)g(so)f(all)g(but)g(one)h(Dehn)g(\014lling)f(are)g(Seifert)h
(\014b)s(ered.)48 b(The)35 b(exceptional)57 5400 y(one)e(is)g(the)g
(one)g(with)g(slop)s(e)g Fo(pq)t Fp(,)g(pro)s(ducing)g(a)g(connected)i
(sum)d(of)h(t)m(w)m(o)g(lens)h(spaces.)45 b(See)34 b([Mo].)1886
5639 y Fq(10)p eop
%%Page: 11 11
11 10 bop 176 100 a Fp(P)m(art)43 b(\(4\))g(is)h(also)f(w)m(ell)g(kno)m
(wn:)65 b(If)44 b Fo(K)50 b Fp(is)43 b(the)h(Figure)g(8)f(knot,)i(b)m
(y)f([Th1])f Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))41 b(is)j(h)m(yp)s(er-)57
289 y(b)s(olic)j(unless)i Fo(\015)k Fp(is)48 b(an)g(in)m(teger)g(b)s
(et)m(w)m(een)h Fm(\000)p Fp(4)g(and)f(4.)88 b(Since)48
b Fo(K)59 b Fp(=)53 b Fo(K)2920 307 y Fl([2)p Fn(;)p
Fg(\000)p Fl(2])3187 289 y Fp(=)f Fo(K)3401 307 y Fl([)p
Fg(\000)p Fl(2)p Fn(;)p Fl(2])3616 289 y Fp(,)g(b)m(y)57
478 y(Corollary)36 b(7)i(and)g(Lemma)e(8)i Fo(K)7 b Fp(\()p
Fo(\015)f Fp(\))36 b(is)i(toroidal)f(for)h Fo(\015)j
Fp(=)36 b(0)p Fo(;)17 b Fm(\000)p Fp(4)p Fo(;)g Fp(4,)37
b(and)i(is)e(Seifert)i(\014b)s(ered)g(for)57 667 y Fo(\015)32
b Fp(=)d Fm(\000)p Fp(3)p Fo(;)17 b Fm(\000)p Fp(2)p
Fo(;)g Fm(\000)p Fp(1)p Fo(;)g Fp(1)p Fo(;)g Fp(2)p Fo(;)g
Fp(3.)176 857 y(If)37 b Fo(K)43 b Fp(is)36 b(not)g(a)f(torus)i(knot)e
(or)h(t)m(wist)g(knot,)g(then)h(b)m(y)f(Corollary)e(7)i(and)h(Lemma)d
(8,)i Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))35 b(is)57 1046
y(not)d(Seifert)g(\014b)s(ered,)i(and)e(it)g(is)g(toroidal)e(if)j(and)f
(only)f(if)i Fo(K)38 b Fp(and)33 b Fo(\015)k Fp(are)32
b(as)g(describ)s(ed)i(in)e(\(2\).)43 b(So)57 1235 y(\(1\))32
b(and)i(\(2\))e(follo)m(ws)i(from)e(Lemma)g(9.)176 1425
y(It)d(remains)g(to)h(pro)m(v)m(e)g(\(3\).)42 b(Consider)30
b(the)g(knot)f Fo(K)34 b Fp(=)28 b Fo(K)2345 1443 y Fl([2)p
Fn(n;)p Fl(2])2547 1425 y Fp(.)43 b(Using)29 b(Corollary)f(7,)i(Lemmas)
57 1614 y(8)d(and)h(9,)g(w)m(e)g(need)h(only)e(sho)m(w)h(that)g
Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))25 b(is)j(h)m(yp)s(erb)s(olic)g(if)f
Fo(\015)33 b Fp(is)28 b(an)f(in)m(teger)h(not)g(b)s(et)m(w)m(een)h(0)e
(and)57 1803 y Fm(\000)p Fp(4.)59 b(Since)40 b Fo(K)j
Fp(=)37 b Fo(K)864 1821 y Fl([2)p Fn(n;)p Fl(2])1104
1803 y Fp(is)h(a)h(h)m(yp)s(erb)s(olic)f(knot)g([HT],)f(and)i(since)g
Fo(K)7 b Fp(\(0\))38 b(in)g(non)h(h)m(yp)s(erb)s(olic,)57
1993 y(the)49 b(2)p Fo(\031)t Fp(-theorem)e(of)i(Gromo)m(v-Th)m(urston)
f(\(see)h([BH]\))e(and)i(Lemma)e(9)h(imply)f(that)h Fo(K)7
b Fp(\()p Fo(\015)f Fp(\))47 b(is)57 2182 y(h)m(yp)s(erb)s(olic)33
b(unless)h(\001\(0)p Fo(;)17 b(\015)6 b Fp(\))26 b(=)i
Fm(j)p Fo(\015)6 b Fm(j)26 b Fo(<)i Fp(23.)176 2371 y(Let)23
b Fo(L)k Fp(=)h Fo(k)596 2386 y Fl(1)641 2371 y Fm([)p
Fo(k)759 2386 y Fl(2)827 2371 y Fp(b)s(e)22 b(the)h(2-bridge)g(link)e
(asso)s(ciated)i(to)f(the)g(rational)f(n)m(um)m(b)s(er)i
Fo(p=q)32 b Fp(=)c([2)p Fo(;)17 b Fp(2)p Fo(;)g Fm(\000)p
Fp(2].)57 2560 y(W)-8 b(e)38 b(use)i Fo(L)p Fp(\()p Fm(\000)p
Fo(;)17 b(\015)692 2575 y Fl(2)735 2560 y Fp(\))39 b(to)f(denote)h(the)
f(manifold)g(obtained)h(b)m(y)f(remo)m(ving)g Fo(k)2908
2575 y Fl(1)2991 2560 y Fp(and)g(p)s(erforming)g Fo(\015)3756
2575 y Fl(2)57 2750 y Fp(surgery)33 b(on)h Fo(k)600 2765
y Fl(2)644 2750 y Fp(.)44 b(As)33 b(in)h(the)f(pro)s(of)h(of)f(Lemma)f
(6,)g(w)m(e)i(ha)m(v)m(e)g Fo(K)2453 2768 y Fl([2)p Fn(n;)p
Fl(2])2655 2750 y Fp(\()p Fo(\015)6 b Fp(\))26 b(=)i
Fo(L)p Fp(\()p Fm(\000)p Fp(1)p Fo(=n;)17 b(\015)6 b
Fp(\).)176 2939 y(Neumann)41 b(and)h(Reid)g([NR])f(pro)m(v)m(ed)h(that)
f Fo(L)p Fp(\()p Fm(\000)p Fo(;)17 b(\015)6 b Fp(\))39
b(is)i(h)m(yp)s(erb)s(olic)h(unless)g Fo(\015)47 b Fp(is)41
b(an)g(in)m(teger)57 3128 y(b)s(et)m(w)m(een)28 b(0)e(and)h
Fm(\000)p Fp(4.)42 b(Since)27 b Fo(L)p Fp(\()p Fm(1)p
Fo(;)17 b(\015)6 b Fp(\))24 b(is)i(a)g(lens)h(space,)i(hence)f(non)e(h)
m(yp)s(erb)s(olic,)i(the)f(2)p Fo(\031)t Fp(-theorem)57
3318 y(and)34 b(Lemma)e(9)i(imply)e(that)h(if)h Fo(\015)39
b Fp(is)34 b(not)g(b)s(et)m(w)m(een)h(0)f(and)g Fm(\000)p
Fp(4,)g(then)g Fo(L)p Fp(\()p Fm(\000)p Fp(1)p Fo(=n;)17
b(\015)6 b Fp(\))32 b(is)i(h)m(yp)s(erb)s(olic)57 3507
y(unless)44 b(\001\()p Fm(1)p Fo(;)17 b Fm(\000)p Fp(1)p
Fo(=n)p Fp(\))41 b(=)j Fm(j)p Fo(n)p Fm(j)f Fo(<)h Fp(23.)72
b(Com)m(bining)42 b(this)g(with)h(the)g(ab)s(o)m(v)m(e)f(result,)j(w)m
(e)f(see)f(that)57 3696 y Fo(K)142 3714 y Fl([2)p Fn(n;)p
Fl(2])344 3696 y Fp(\()p Fo(\015)6 b Fp(\))36 b(is)i(h)m(yp)s(erb)s
(olic)h(unless)g Fm(j)p Fo(n)p Fm(j)c Fo(<)h Fp(23)i(and)g
Fm(j)p Fo(\015)6 b Fm(j)35 b Fo(<)h Fp(23,)i(so)h(there)f(are)h(only)e
(\014nitely)h(man)m(y)57 3885 y(surgeries)29 b(left)g(to)f(c)m(hec)m
(k.)44 b(Finally)-8 b(,)27 b(w)m(e)i(use)h(Je\013)f(W)-8
b(eeks')29 b Fk(SnapPe)-5 b(a)35 b Fp(program)27 b([W)-8
b(e])29 b(to)f(c)m(hec)m(k)i(this)57 4075 y(\014nite)35
b(set)g(of)f(surgeries.)49 b(It)35 b(has)g(b)s(een)g(v)m(eri\014ed)h
(that)e(if)h Fm(j)p Fo(n)p Fm(j)29 b Fo(>)h Fp(1)35 b(then)g
Fo(K)2874 4093 y Fl([2)p Fn(n;)p Fl(2])3076 4075 y Fp(\()p
Fo(\015)6 b Fp(\))33 b(is)i(h)m(yp)s(erb)s(olic)57 4264
y(unless)f Fo(\015)f Fp(=)28 b(0)p Fo(;)17 b Fm(\000)p
Fp(1)p Fo(;)g Fm(\000)p Fp(2)p Fo(;)g Fm(\000)p Fp(3)p
Fo(;)g Fm(\000)p Fp(4.)176 4453 y(The)46 b(knot)e Fo(K)54
b Fp(=)48 b Fo(K)983 4471 y Fl([2)p Fn(n;)p Fg(\000)p
Fl(2])1292 4453 y Fp(is)d(the)h(mirror)d(image)h(of)h
Fo(K)2420 4471 y Fl([)p Fg(\000)p Fl(2)p Fn(n;)p Fl(2])2684
4453 y Fp(,)j(so)d Fo(K)2979 4471 y Fl([2)p Fn(n;)p Fg(\000)p
Fl(2])3243 4453 y Fp(\()p Fo(\015)6 b Fp(\))44 b(is)h(home-)57
4643 y(omorphic)e(to)h Fo(K)723 4661 y Fl([)p Fg(\000)p
Fl(2)p Fn(n;)p Fl(2])987 4643 y Fp(\()p Fo(\015)6 b Fp(\).)75
b(Therefore,)47 b(if)e Fm(j)p Fo(n)p Fm(j)f Fo(>)i Fp(1)e(then)h
Fo(K)7 b Fp(\()p Fo(\015)f Fp(\))42 b(is)i(h)m(yp)s(erb)s(olic)g
(unless)h Fo(\015)51 b Fp(=)57 4832 y(0)p Fo(;)17 b Fp(1)p
Fo(;)g Fp(2)p Fo(;)g Fp(3)p Fo(;)g Fp(4.)95 b Fd(\003)176
5106 y Fk(A)-5 b(cknow)5 b(le)-5 b(dgment.)58 b Fp(W)-8
b(e)39 b(are)f(grateful)g(to)f(Alan)g(Reid)i(for)f(some)f(v)m(ery)h
(useful)h(commen)m(ts)e(to)57 5296 y(an)c(earlier)g(v)m(ersion)g(of)h
(this)f(pap)s(er.)1886 5639 y Fq(11)p eop
%%Page: 12 12
12 11 bop 1638 100 a Fs(References)57 259 y Fq([BH])103
b(S.)21 b(Bleiler)h(and)g(C.)f(Ho)r(dgson,)k Fj(Spheric)l(al)f(sp)l(ac)
l(e)g(forms)g(and)g(Dehn)g(\014l)t(ling)p Fq(,)g(Knot)d('90,)i(W)-7
b(alter)22 b(de)f(Gruyter)331 359 y(&)28 b(Co.,)f(Berlin,)i(New)f(Y)-7
b(ork,)28 b(1992,)i(pp.)d(425)j({)e(433.)57 458 y([Br])133
b(M.)27 b(Brittenham,)h Fj(Smal)t(l)i(Seifert-\014b)l(er)l(e)l(d)i(sp)l
(ac)l(es)e(and)g(Dehn)g(sur)l(gery)h(on)f(2-bridge)h(knots,)p
Fq(,)e(preprin)n(t.)57 558 y([De1])81 b(C.)21 b(Delman,)h
Fj(Essential)j(laminations)f(and)g(Dehn)g(sur)l(gery)g(on)g(2-bridge)h
(knots)p Fq(,)e(T)-7 b(op)r(ology)23 b(and)f(its)h(Appl..)57
658 y([De2])p 331 658 255 4 v 349 w(,)k Fj(Constructing)33
b(essential)f(laminations)e(which)h(survive)h(al)t(l)e(Dehn)g(sur)l
(geries)p Fq(,)f(preprin)n(t.)57 757 y([GO])94 b(D.)31
b(Gabai)j(and)e(U.)g(Oertel,)g Fj(Essential)j(laminations)g(in)f
(3-manifolds)p Fq(,)e(Annals)i(of)e(Math.)g Fa(130)h
Fq(\(1989\),)331 857 y(41{73.)57 956 y([HT])102 b(A.)41
b(Hatc)n(her)g(and)h(W.)e(Th)n(urston,)45 b Fj(Inc)l(ompr)l(essible)e
(surfac)l(es)g(in)g(2-bridge)g(knot)h(c)l(omplements)p
Fq(,)g(In)n(v.)331 1056 y(Math.)27 b Fa(79)h Fq(\(1985\),)h(225{246.)57
1156 y([Ho])121 b(C.)37 b(Ho)r(dgson,)k Fj(Ge)l(ometric)f(structur)l
(es)h(on)e(3-dimensional)f(orbifolds:)56 b(Notes)41 b(on)d(Thurston)-9
b('s)40 b(pr)l(o)l(of,)p Fq(,)331 1255 y(preprin)n(t.)57
1355 y([K)n(OS])49 b(S.)31 b(Ko)5 b(jima,)32 b(K.)f(Ohshik)-5
b(a)33 b(and)g(T.)e(Soma,)i Fj(T)-7 b(owar)l(ds)33 b(a)h(pr)l(o)l(of)e
(of)i(Thurston)-9 b('s)35 b(ge)l(ometrization)g(the)l(or)l(em)331
1455 y(for)30 b(orbifolds)p Fq(,)e(Hyp)r(erb)r(olic)i(Geometry)d(and)i
(Three)e(Manifolds,)j(Res.)e(Inst.)h(Math.)e(Sci.,)h(Kokyuroku.)57
1554 y([Mo])106 b(L.)27 b(Moser,)h Fj(Elementary)j(sur)l(gery)f(along)h
(a)f(torus)h(knot)p Fq(,)d(P)n(aci\014c)g(J.)g(Math.)g
Fa(38)f Fq(\(1971\),)i(737{745.)57 1654 y([NR])101 b(W.)43
b(Neumann)h(and)g(A.)g(Reid,)k Fj(A)n(rithmetic)g(of)d(Hyp)l(erb)l
(olic)g(manifolds)p Fq(,)i(T)-7 b(op)r(ology)46 b('90,)i(W)-7
b(alter)44 b(de)331 1753 y(Gruyter,)27 b(Berlin,)h(New)h(Y)-7
b(ork)29 b(1992,)g(pp.)f(273{310.)57 1853 y([Pr])135
b(J.)31 b(Przyt)n(yc)n(ki,)e Fj(Inc)l(ompr)l(essibility)34
b(of)f(surfac)l(es)h(after)h(Dehn)e(sur)l(gery)p Fq(,)e(Mic)n(higan)h
(Math.)f(J.)h Fa(30)g Fq(\(1983\),)331 1953 y(289)d({)f(308.)57
2052 y([Th1])76 b(W.)27 b(Th)n(urston,)i Fj(The)i(Ge)l(ometry)f(and)g
(T)-7 b(op)l(olo)l(gy)30 b(of)g(3-manifolds)p Fq(,)d(Princeton)h(Univ)n
(ersit)n(y,)g(1978.)57 2152 y([Th2])p 331 2152 V 344
w(,)h Fj(Thr)l(e)l(e)j(dimensional)g(manifolds,)g(Kleinian)g(gr)l(oups)
g(and)f(hyp)l(erb)l(olic)g(ge)l(ometry)p Fq(,)f(Bull.)h(Amer.)331
2252 y(Math.)c(So)r(c.)h Fa(6)g Fq(\(1982\),)h(357{381.)57
2351 y([Th3])p 331 2351 V 344 w(,)e Fj(Thr)l(e)l(e-manifolds)j(with)h
(symmetry)p Fq(,)d(preprin)n(t.)57 2451 y([W)-7 b(e])108
b(J.)28 b(W)-7 b(eeks,)27 b Fj(Snapp)l(e)l(a)p Fq(.)57
2550 y([W)-7 b(u])99 b(Y-Q.)28 b(W)-7 b(u,)27 b Fj(Dehn)k(sur)l(gery)f
(on)h(arb)l(or)l(esc)l(ent)g(links)p Fq(,)d(preprin)n(t.)57
2650 y([Zh])127 b(Q.)27 b(Zhou,)h Fj(Thr)l(e)l(e)j(dimensional)f(ge)l
(ometric)i(c)l(one)f(structur)l(es)p Fq(,)e(UCLA)g(thesis)g(\(1990\).)
176 2869 y Fr(Dep)-5 b(ar)g(tment)32 b(of)f(Ma)-5 b(thema)g(tics,)33
b(University)h(of)d(Texas)i(a)-5 b(t)31 b(A)n(ustin,)i(A)n(ustin,)g(TX)
f(78712)176 2969 y Fj(E-mail)e(addr)l(ess)6 b Fq(:)42
b(britten@math.utexas.edu)176 3188 y Fr(Dep)-5 b(ar)g(tment)32
b(of)f(Ma)-5 b(thema)g(tics,)33 b(University)h(of)d(Io)n(w)-7
b(a,)32 b(Io)n(w)-7 b(a)31 b(City,)i(IA)e(52242)176 3288
y Fj(E-mail)f(addr)l(ess)6 b Fq(:)42 b(wu@math.uio)n(w)n(a.edu)1886
5639 y(12)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
