%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: norcvr3a.dvi
%%CreationDate: Fri Oct 27 11:20:52 2000
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips norcvr3a
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.10.27:1120
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (norcvr3a.dvi)
@start
%DVIPSBitmapFont: Fa cmtt8 8 14
/Fa 14 118 df<123E127FEAFF80A5EA7F00123E0909738823>46
D<EB07F0EB1FFCEB7FFE48B5FC4814803907FC1FC0380FE0079038C0FFE0EA1F83485AEA
3E0FD87E1F13F0007C138FEB3F0738783E0338F87C01A212F0EB7800A5EB7C0112F8A239
783E03E0387C3F0790381F8FC0007E13FFD83E0F1380D83F071300381F83FE390FC0F9E0
9038E007F03807FC0F6CB5FC6C14C06C6C138090381FFE00EB07F81C297DA823>64
D<3803FF80000F13E04813F8487F80EB80FFEC3F80381F001FC7FC140F14FF137F0003B5
FC120F5A387FF00F130012FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E000713C7
3901FE01FC1F1D7D9C23>97 D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B512E015F0
9038FE0FF8EBF8039038F001FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803
F89038FE0FF090B5FC15E001DF138001CF1300380383F81F297FA823>I<ECFF8015C0A4
1407A7EB7F873801FFE74813F7000F13FF5A13E0383F803F387F001F007E130FA2481307
A25AA56C130FA2127E141F007F133F383F807FEBE0FF6CB512FE7E000313F76C13C73800
7F031F297EA823>100 D<EB3FC0EBFFF800037F4813FF481480381FF07F393F801FC0EB
000F007E130715E05AB6FCA415C000F8C8FC7EA2007EEB01C0007FEB03E0383F800713E0
391FF81FC06CB5FC6C14800001EBFE006C6C5AEB1FE01B1D7D9C23>I<B47E7FA41207A7
EBC1FCEBC7FF01DF138090B512C0A29038FE0FE0EBF807EBF00313E0A313C0AD39FFFE1F
FF5CA38020297FA823>104 D<133813FEA5133890C7FCA6EA7FFC487EA3127FEA003EB3
387FFFFEB6FCA36C13FE182A7AA923>I<EA7FFEB5FCA37EEA001FB3AD007FB512C0B612
E0A36C14C01B297CA823>108 D<397E1F01F039FF7FC7FC9038FFEFFE14FF6C80390FE1
FE1FEBC1FC01C07FEB80F8A2EB00F0AE3A7FE3FE3FE026FFF3FF13F0A3267FE3FE13E024
1D819C23>I<38FF81FCEBC7FF01DF138090B512C0A23907FE0FE0EBF807EBF00313E0A3
13C0AD39FFFE1FFF5CA380201D7F9C23>I<397FF00FE039FFF87FF8ECFFFC13FB6CB5FC
C613F8ECC078EC800091C7FC5BA25BA35BAA387FFFFCB57EA36C5B1E1D7E9C23>114
D<137013F8A7007FB51280B612C0A36C1480D800F8C7FCACEC01C0EC03E0A3EBFC07140F
9038FE1FC0EB7FFF158090383FFE00EB0FFCEB07F01B257EA423>116
D<39FF807FC001C013E0A400071303B01407140FEBE03F90B6FC7EA2C613F3EB3FC1201D
7F9C23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb msbm8 8 1
/Fb 1 74 df<B512FEA2380701C000031380B3B3A4000713C0B512FEA2172E7EAD27>73
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy7 7 2
/Fc 2 49 df<B712FEA327037A8F34>0 D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F
13C0A3EA1F80A21300A25A123EA35AA3127812F8A25A12100D1E7D9F13>48
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi7 7 3
/Fd 3 111 df<4B7E1503150782150F151FA2153FA2156F15CF82EC0187140315071406
140E140C02187FA2EC30031460A214C013011480D903007F91B5FC5B90380C0001A25B13
380130805B01E013005B12011203000F4A7ED8FFF890381FFFE0A22B2A7DA932>65
D<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12C0A2EA
01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A11287DA6
17>105 D<3907801FC0390FE07FF03918F0E0F83930F1807CEBFB00D860FE133C5B5B00
C1147C5B1201A248485BA34A5AEA07C01660EC03E0A23A0F8007C0C0A2EDC180913803C3
00D81F0013C7EC01FE000EEB00F8231B7D9929>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe msbm10 10 1
/Fe 1 91 df<0007B712FC5AA23B0E1FF003C038903A3F0007807801FC4A5AD80FF0495B
49EB0E01D81F80011E5BED3C0390C738380780001E027890C7FCED700FEDF00E001C9038
01E01E4B5A02031338C7EB80780207137091380F00F091380E01E0021E5BEC1C03023C5B
EC3807027890C8FC4A5AECE01E0101131CECC03C0103133890380780784A5A495BEB0E01
011E49EB0180D93C0314039038380780017890C7FCD9700F1407EBF00E3801E01E4948EC
0F0000031338D980785C00071370D900F05C48495CD81E0115F7261C03C0EB01E7003C49
495AD83807EC0F8E007890C7EA3F0E4848EB01FEB812FEA331397DB83E>90
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff msam10 10 1
/Ff 1 4 df<007FB812F8B912FCA300F0CA123CB3B3ACB912FCA36C17F836387BB741>3
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmsy8 8 4
/Fg 4 84 df<B812C0A32A037A9137>0 D<173017F0160116031607A2160FA2161F161B
163B1633167316E3A2ED01C316831503EE03F81507150EA2ED1C011538A2157015E0A2EC
01C0EC0380A2DA07007F140E92B5FC141F5C5C0270C7FC4A801301382003C038700780D8
780FC8127FEAFE3FD8FFFE160449169C49ED3FF86C4816E06C4816C06C48ED1F000007CB
FC36337EAF38>65 D<0378172003F81760020118E01A01A26FEE03C01A071A0F0203171F
1A3F037E167FF2FF80A2DA073EED01EFDA063FED03DFF1079FF10F1FDA0E1F151E020C6D
023E1300197C19F84A6C6C49485A19E0F003C0DA3007EC078070EB0F00181E02604B133E
6F6C137C02E05D02C04A48137E6F6C485AD901804A5A70485A0103010049C7FC91C7EAFE
3E49EC7EFC0106EC7FF8010E6E5A010C5DD8301C6E5AD83C385DD87FF86EC8EA7F084902
0C16F8484891C913E01BC06C48F03E006C4895C7FC000FCEFC4D317FAD54>77
D<ED1FF0913801FFFE0207EBFF80021F14C0EC3C039138F0007F4948131F4948130F1307
5C010F1500160E011F91C7FC80A28080EB0FFC80903807FFC06D13F0010013FC6EB4FC02
0F13C002037F02007FED3FF8150FD801C06D7ED807801303001FC71201123E481400A25E
12FC6C5D15016C5D6D495A6C6C495A01F0011EC7FCD83FFE13FC6CB512F06C14C0000349
C8FC38007FE02A2F7EAD2B>83 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmti8 8 47
/Fh 47 122 df<ED3FF8913801FFFE913903F00F8091390FC003C0EC1F00160F143EA214
7E027CEB070093C7FCA214FC5CA5017FB512FEA2903901F0007E167CA213034A13FC5EA3
0107130102C05BA31503010F5C1480A2923807E18016C3131FA2140016C7EE87005B013E
148EED03DEED01FC6F5A017E91C7FC137CA3EA38F812FCA25B12FDEAF1E0EAF3C0EA7F80
001ECAFC2A3D81AE28>12 D<ED3FE0913901FFF8F8913807E03E91380F801E91381F003F
EE7FF0143EA2027E133B027CEB03E0A3160702FC14C05CA2160F1780017FB6FCA2903901
F0001F1700A213034A5B163EA30107147E4A137CA316FC5E130F5C03011360EEF0E0A213
1F140016F1EEE1C05BEEE380013EEB00F7EE7F00163E017E91C7FC137CA3EA3878EAFCF8
A25BA2EAF1E0EAF3C0EA7F80001ECAFC2D3D81AE2A>I<1338137C13FC1201EA03F8EA07
E0EA0FC0EA1F80EA3E005A5A12E012400E0D69AD24>19 D<EA0780EA0FC0EA1FE0123FA3
121F120FEA00C0A212011380120313005A120E5A5A5A5A5A0B1571AD16>39
D<EA0380EA0FE0121FA213F0A213E0EA0760120013E013C0120113801203EA0700120612
0E5A5A12F012C00C157B8716>44 D<387FFFC0A2B5FCA26C130012057A901A>I<121C12
7F12FFA412FE12380808788716>I<EC7F80903801FFE0903807C0F890381E007C49133C
49133E49131EEA01E613C701C3133E120313831387D801CE137E01FC137CD8007813F890
C7FCEC01F0EC03E0EC0F80EC3F00EB0FFCA2EB001E141FEC0F80A215C0A41218127C141F
00FC1480A248133F00E01400147E6C5B387001F8387803F0383C0FC0D80FFFC7FCEA03F8
1F2D79AB24>51 D<13F0EA01F812031207A3EA03F0EA01C0C7FCAD121C127F5AA45A1238
0D1D789C16>58 D<16E01501821503A21507150FA2151FA2153B157B157315E382EC01C1
14031581EC0701A2140EA2141C143C143802707F15005C13015C49B5FCA249C7FCA2130E
131E131C4980167E5B13F0485AA21203D80FF014FFD8FFFC011F13F0A22C2F7CAE35>65
D<011FB512FCEEFF80903A00FE000FC0EE03E04AEB01F017F80101140017FC5CA2130317
F84A1301A20107EC03F017E04AEB07C0EE0F80010FEC3F0016FE9138C007F891B512E049
14F89138C0007C4A7F82013F1580A291C7120FA25BA2017E141FA213FEEE3F005B167E00
015D4B5A49495A4B5A0003EC3F80B600FEC7FC15F82E2D7BAC32>I<DA01FE133091390F
FFC07091393F01E0F09138F80079D903E0133D4948EB1FE0D91F80130F49C7FC017E1407
4915C0485A485A5B00071680485AA2485A170048CAFCA25A127EA312FE5AA51638481578
16707E16F0007C5D15014B5A6C5D4BC7FC6C140E6C6C133C6C6C5B6C6C485A3900F80FC0
D97FFFC8FCEB0FF82C2F75AD33>I<011FB512FCEEFF80903A00FE000FC0EE03E04AEB01
F0EE00F80101157C173C4A143E171E0103151FA25CA21307A25CA2130FA24A143FA2131F
173E4A147EA2013F157C17FC91C8FC17F849EC01F0A2017EEC03E0A201FEEC07C0EE0F80
49EC1F00163E00015D5E49495AED07C00003023FC7FCB612FC15E0302D7BAC36>I<011F
B612FEA2903900FE0001EE007E4A143EA20101151E171C5CA21303A25C16E00107130117
0002E05B1503130F15074A485A91B5FC5BECC01F4A6CC7FCA2133FA2DA000E13E0A24914
01030013C0017E1403178001FE14071700495C161E12015E49147CED01FC0003EC0FF8B7
FC5E2F2D7CAC30>I<011FB612F8A2903900FE000716014A13001778130117705CA21303
A25C16E001071301170002E05B1503130F15074A485A91B5FC5BECC01F4A6CC7FCA2133F
A2EC000EA25B92C8FC137EA213FEA25BA21201A25BA21203B512F0A22D2D7CAC2E>I<03
FF1318020FEBC03891393F00F07802F8EB38F8D903F0131CD907C0EB0FF0EB1F8049C712
07137E49EC03E0485A485AA2484815C0485AA2485A178048CAFCA25A127EA312FE5AA292
B512E0A2923801FE006F5A15015EA3007C14035E127E123E001E1407001F5D6C6C130F6C
6C133F6C6C13793A00F803F1C090383FFF80D907FCC8FC2D2F75AD37>I<90381FFFF8A2
903800FE00A25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA2
91C7FCA25BA2137EA213FEA25BA21201A25BA21203B512C0A21D2D7CAC1B>73
D<90261FFFF8EBFFFEA2D900FEC7EA1FE018804AEC3E005F01015DEE01E04A495AEE0F80
01034AC7FC163C4A5B4B5A0107EB03C04B5A4A48C8FC153E010F137E15FEECC1FF14C790
381FCF3F02DE7FECFC1F02F87FEB3FE04A6C7E1480EC000749801503017E80A201FE6D7E
A2491300820001157E167F5B831203B539C007FFF8A2372D7BAC37>75
D<D91FFFED0FFF600100EE3FC0A2F07F8018EF902601EF8014FF943801DF0014CFEF039F
01034B5A183E028F140E171C0107167EDA87C0EB387C14071770010FEDE0FC60010EEC01
C0EE0380011E158193380701F090381C03E0160E013CEC1C036001381438A20178EC7007
04E05B90387001F0EDF1C001F09038F3800F6001E0EBF700A2000102FE131F4B91C7FC13
C0486C6C5AD80FF05DD8FFFE9039F00FFFF815E0402D7BAC40>77
D<4AB4FC020F13C091383E03F09138F8007CD903E07FD907807F011FC77E013E15804914
074915C0485AEE03E0485A485AA2485A121F90C8FC5AA2003E1507127EA348ED0FC0A3EE
1F80A217005E163E167E167C16FC4B5A007C5D4B5A6C4A5A4B5A6C4AC7FC6C6C133E6D13
F83903E003F03901F80FC026007FFFC8FCEB0FF02B2F75AD37>79
D<011FB512E016FC903900FE003FEE0FC04AEB07E016030101EC01F0A24A14F8A21303EE
03F05CA20107EC07E017C04AEB0F80EE1F00010F143E16FC9138C007F091B512805B9138
C00FE091388003F06F7E133F6F7E91C7FCA2491301A2017E5CA201FE1303A2495C170800
01163C17384914E0EEF07800031670B5D8C00113E09238007FC0C9EA1F002E2E7BAC34>
82 D<91380FF00C91383FFC1C9138F80F3C903903C007BC9039078003FC90390F0001F8
131E491300A24914F0A313F816E0A216007F7F6D7EEB7FF8ECFF806D13E06D13F801077F
01017FEB001FEC01FF6E7E8181A281121CA35D003C141EA25DA2007E5C5D007F495A6D48
5A26F1F01FC7FC38E07FFC38C00FF0262F7BAD28>I<000FB712F0A23A1FE00FE0070100
1401001E02C013E0481500141F12380078EC8001A20070013F14C012F0481400A25CC791
C7FC147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA213
3F003FB57EA22C2D74AC33>I<B53B807FFF803FFFA23D0FF00007F00007F06C48EE03E0
4C14C019801807030F1500180E4B7E60153B037B5C0373147803E3147018F0DA01C35C4D
5AEC03834D5A3903F00703020F4AC7FC020E5C021E140E021C141E0238141C5F027013F8
03015B14E001F15D14C001F3ECF9C0028013FBD9F7005C04FFC8FC13FE5E5B00015D5B5E
5B495C5E491300402E72AC47>87 D<EB07C0EB1FF090387C39C0EBF81FEA01F03803E00F
EA07C0120FD81F801380A2EA3F00141F481400127EA25C00FE133E5AA2EC7E18EC7C385A
A214FCD878011378397C03F870A2393C0F78E0381E1E3D390FF81FC03903E00F001D1F79
9D24>97 D<13F8121FA21201A25BA21203A25BA21207A25BA2120FEBC7C0EB9FF0EBF878
381FF03CEBE03EEBC01EEB801FEA3F00A2123EA2007E133FA2127CA2147F00FC137E5AA2
14FCA214F8130114F0EB03E0EA780714C0383C0F80381E3E00EA0FF8EA03E0182F78AD21
>I<EB01F8EB0FFE90383E0780EBFC03D801F013C03803E0070007130FEA0FC001801380
121F48C8FCA25A127EA312FE5AA5EC0180007CEB03C0EC0780EC0F006C131E001E137C38
0F83F03807FFC0C648C7FC1A1F799D21>I<153EEC07FEA2EC007EA2157CA215FCA215F8
A21401A215F0A21403EB07C390381FF3E0EB7C3BEBF81FEA01F03903E00FC0EA07C0120F
EA1F801580EA3F00141F5A007E1400A25C12FE48133EA2EC7E18153848137CA214FCD878
011378397C03F870A2393C0F78E0381E1E3D390FF81FC03903E00F001F2F79AD24>I<EB
03F8EB0FFEEB3E0FEBF8073901F00380EA03E0EA07C0000F1307D81F8013005C383F001E
5C387F03F8EBFFE049C7FC007EC8FC12FE5AA4127CEC0180EC03C0EC07806CEB0F00141E
6C137C380F83F03803FFC0C648C7FC1A1F799D21>I<EC01F0EC07FCEC0F9EEC1F1EEC1E
3EEC3E7EA3EC7C381500A314FC5CA590387FFFF0A2903801F000A313035CA413075CA413
0F5CA4131F91C7FCA45B133EA4137E137CA3EA38F812FCA25B12FDEAF1E0EAF3C0EA7F80
001EC8FC1F3D81AE16>I<14F8EB03FE90380F873890381F03F8137EEB7C0113F81201EA
03F015F0EA07E01403120F01C013E0A21407121F018013C0A2140FA21580141F120F143F
EC7F006C6C5AEA03C33801FFBF38007E3E1300147EA2147CA214FC00385BEAFC015C495A
48485A38F01F80D87FFEC7FCEA1FF01D2C7C9D21>I<131FEA03FFA2EA003FA2133EA213
7EA2137CA213FCA25BA21201147E9038F3FF809038F787C03903FE03E013FC13F8A2EA07
F013E0A213C0000F130715C01380A2001F130F15801300141F481406150E003E133F143E
007E141EEC7E1C007C137CEC3C3812FC157048EB1FE00070EB07801F2F7BAD24>I<130E
131FEB3F80A2EB1F00130E90C7FCA9EA03E0EA0FF0EA1E78EA1C7C12381278127013FCEA
F0F812E012E1EAC1F0120112035B12075BA2120F13831387121F13075BEA3F0E123EEA1E
1C133C1338EA0FF0EA03C0112E7AAC16>I<131FEA03FFA2EA003FA2133EA2137EA2137C
A213FCA25BA21201EC01E09038F007F0EC1E380003EB3878EC71F8EBE0E1EBE1C13807E3
81EC00E049130013CEEA0FFC13F0A213FF381F9FC0EB87E0EB03F01301003F1430157012
3EA2007E14F015E0007C13E014E100FC14C0903800F38048EB7F000070131E1D2F7BAD21
>107 D<137CEA0FFCA21200A213F8A21201A213F0A21203A213E0A21207A213C0A2120F
A21380A2121FA21300A25AA2123EA2127EA2127CA2EAFC30137012F8A213F013E012F012
F113C012FBEA7F80EA1E000E2F7AAD12>I<3B07801FC007F03B1FE07FF01FFC3B3DF1E0
F8783E3B38F3C078F01E3B78FF007DC01FD870FEEB7F80A2D8F1FC1400D8E1F8137EA249
137C00C302FC5B0003163E495BA200070101147E177C01C05B17FC000F0103ECF8301870
0180EBE00117F0001F010715F0040313E0010001C013E0EFE1C048010F1301EFE380003E
91398000FF00001C6DC7123C341F7A9D3A>I<3907801FC0391FE07FF0393DF1E0F83938
F3C0783978FF007CEA70FEA2EAF1FCEAE1F8A25B00C314FC00035C5BA2000713015D13C0
1403000FECE0C015E1EB800715C1001F14C3020F13800100138391380787005A158E003E
EB03FC001CEB00F0221F7A9D28>I<EB03F8EB0FFE90383E0F809038FC07C03801F003D8
03E013E01207390FC001F01380121FEA3F0014035A127EA2140700FE14E05AA2EC0FC0A2
EC1F80A2007CEB3F00143E5C6C5B381E01F0380F07C06CB4C7FCEA01FC1C1F799D24>I<
90383C01F09038FF07FC3901E79E1E9038C7BC0F000301F81380903887F00702E013C038
078FC0130F1480A2D8061F130F12001400A249131F1680133EA2017EEB3F00A2017C133E
157E01FC137C5DEBFE015D486C485AEC0F80D9F3FEC7FCEBF0F8000390C8FCA25BA21207
A25BA2120FA2EAFFFCA2222B7F9D24>I<3807803E391FE0FF80393CF3C1C03938F781E0
3878FF07EA70FE13FC12F139E1F8038091C7FC5B12C312035BA21207A25BA2120FA25BA2
121FA290C8FCA25AA2123E121C1B1F7A9D1E>114 D<EB0FC0EB7FF0EBF03C3801E01C38
03C01EEA0780143EA2000F133C1418EBC00013F813FF6C13C06C13E06C13F0EA007F1307
13031301EA780012FCA2130100F813E012E0EB03C038F0078038781F00EA1FFCEA07F017
1F7A9D1D>I<131C133EA2137EA2137CA213FCA25BA21201A2B512E0A23803F000A25BA2
1207A25BA2120FA25BA2121FA290C7FCA24813C01301123E130314801307003C1300130E
131E6C5AEA0FF0EA07C0132B7AA918>I<EA03C0D80FF01338D81E78137CD81C7C13FC00
3814F812781270EBFC01D8F0F813F012E012E138C1F003000114E0120313E01407000714
C013C0A2EC0FC3000F14871380A2141F158F0007EB3F0E147F01C0131C3903E1E7BC3901
FF83F839007E01E0201F7A9D26>I<3903C001C0390FF003E0391E7807F0EA1C7C123800
7813030070130113FCD8F0F813E012E000E1130038C1F001000114C0120313E014030007
148013C0A2EC0700120F1380140EA25C12076D5A00035B6D5AC6B45A013FC7FC1C1F7A9D
21>I<D803C01407D80FF09038700F80D81E789038F81FC0381C7C01003814F00078150F
00701507EBFC03D8F0F801E0138012E000E1150326C1F007130700011600000314C013E0
020F5B0007150E01C01380A2161E000F011F131C01801300163C16381678000749137090
39C07F80F00003EC81E03A01E0E7C3C03A00FFC1FF8090263F007EC7FC2A1F7A9D2F>I<
90383E01F09038FF87F83903C7DE1E380783DC903803F87EEA0E01001E13F0EA1C03003C
14380038EBE000A2EA300700005BA3130F5CA3011F1318153814001238D87C3F137012FC
15E0EB7F0139F0FF03C03970E78780393FC3FE00381F00F81F1F7C9D21>I<EA03C0D80F
F01338D81E78137CD81C7C13FC003814F812781270EBFC01D8F0F813F012E012E138C1F0
03000114E0120313E01407000714C013C0A2140F000F14801380A2141F150000075B5C13
C03803E1FE3801FFBE38007E3EEB007E147CA2003E5BA2387E01F0A2387C03E0387007C0
6C485AD83C3EC7FCEA1FF8EA07E01E2C7A9D23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmti10 10 42
/Fi 42 122 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>12 D<3901E003C03907F00FE0000F131F01F813F0001F133FA3000F131F3907B00F
6038003000A2017013E0016013C0EBE00101C01380000113030180130000035B3807000E
000E5B485B485B485B48485A00C05B1C1971B92B>34 D<150C151C153815F0EC01E0EC03
C0EC0780EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA2485A
A212035B12075BA2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD1278
A57EA3121C121EA2120E7EA26C7E6C7EA212001E5274BD22>40 D<140C140E80EC0380A2
EC01C015E0A2140015F0A21578A4157C153CAB157CA715FCA215F8A21401A215F0A21403
A215E0A21407A215C0140F1580A2141F1500A2143EA25CA25CA2495AA2495A5C1307495A
91C7FC5B133E133C5B5B485A12035B48C8FC120E5A12785A12C01E527FBD22>I<EA03C0
EA07F0120F121F13F8A313F0EA07B0EA003013701360A213E013C01201EA038013005A12
0E5A5A5A5A5A0D197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F80
127F12FFA31300127E123C0909778819>I<EC03FCEC1FFF91387E07C09138F003E09039
03C001F0D9078013F849C7FC131E011C14FC133CEB38C0EB78E0EB7060150101F014F813
E0A2ECE003D971C013F090387F8007D91E0013E090C7EA0FC0ED1F80ED3F00157E5D49B4
5A4913E092C7FC9038000FC0EC03F014016E7E81A381A5007E130100FE5CA31403485C00
E05C14074A5A5D4A5A007049C7FC0078137E6C13F8381E07F03807FF80D801FCC8FC263A
78B72A>51 D<0007B812FE4817FFA26C17FECCFCAE007FB812C0B912E0A26C17C0381677
9F40>61 D<14FCEB07FF90381F03C090383C01E090387000F049137048481378485A1207
48C7FC120E121E121C003C14F8003814F0007813011270007CEB03E000FE1307EC0FC0EC
1F80147F48EBFF00387001FCC6485AEB0FF0495AEB3F8049C7FCEA01FE485A13F0485A5B
380F81C01301A2495A130791C7FC131EEA07FCEA01F0C9FCA81207EA1FC0123F127FA35B
6CC8FC121E1D3C70BB2A>63 D<EE01C01603A21607160FA2161F83163FA2167F16FF16EF
150116CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580
EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC
5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65
D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B141F
19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A151F
A2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A4A5D
4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B548C8
FCB712F016803C397CB83F>68 D<0107B8FCA3903A000FF000034BEB007F183E141F181E
5DA2143FA25D181C147FA29238000380A24A130718004A91C7FC5E13015E4A133E167E49
B512FEA25EECF8000107147C163C4A1338A2010F147818E04A13701701011F16C016004A
14031880013F150718004A5CA2017F151E173E91C8123C177C4915FC4C5A4914070001ED
7FF0B8FCA25F38397BB838>I<0103B512F8A390390007F8005DA2140FA25DA2141FA25D
A2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397CB820>73
D<0107B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FE
A25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001
034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2
137FA291CAFCA25BA25B1201B512FCA337397BB838>80 D<0103B612F017FEEFFF80903B
0007F8003FC04BEB0FF01707020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2
027FEC07F818F092C7120F18E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004
FCC7FC9138FC003F0103EC0F80834A6D7E8301071403A25C83010F14075F5CA2011F140F
A25CA2133F161F4AECE007A2017F160F180E91C7FC49020F131C007F01FE153CB5913807
F078040313F0CAEAFFE0EF3F80383B7CB83D>82 D<92383FC00E913901FFF01C020713FC
91391FC07E3C91393F001F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA201
1F15E091C7FCA34915C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E001
0080023F7F14079138007FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A
5AA24B5AA2007F4A5A4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F
138026C003FCC8FC2F3D7ABA2F>I<0007B812E0A25AD9F800EB001F01C049EB07C0485A
D900011403121E001C5C003C17801403123800785C00701607140700F01700485CA2140F
C792C7FC5DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25C
A21307A25CA2130FA25CEB3FF0007FB512F8B6FCA2333971B83B>I<B5D8F80FB590381F
FFF06102F018E0D807FEC7D87FE0903803FE00D803F8DA3F806D5AF100F0A24F5A621903
621907047F92C7FC190E16FF4B5DA2DB03BF5C7F0001DA073F5CA2030E5D83DB1C1F495A
180303385D4EC8FC157003F0140E15E0DA01C05CA2DA03805CA2DA07005CA2020E5D17C1
4A5DEFC3805C027802C7C9FC14704A14CE13FE6C6C4814DCA24A14F8A291C75B160F495D
5F5B5F5B4992CAFCA249140E4C3B6FB853>87 D<01181330013813709038F001E03901C0
03800180130000035B3807000E000E5B000C1318001C1338485B00301360A2007013E000
605BA238EF01DE38FF81FFA66CC65A003C13781C196AB92B>92 D<14F8EB07FE90381F87
1C90383E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C
1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF07
6C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F
80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A127EA214
0F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07
C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E090381F00
70017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F
90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00
380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507A216E0A2
150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEB
F80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2
140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E
391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380FC1E09038
3F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81
FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C0
6CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38
ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512
C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F
5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C
82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F13
07D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F1207491400A25DA2
49137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB
00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF
80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91
C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB
1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F
01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E38048903800FF00
0038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03
FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B1207
5BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0
143879B619>I<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA2
1201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E
0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>
108 D<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F26
1C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A4848
EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE03
1F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17E049
017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A444>
I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0
007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F
5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E00
1FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F
00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215
FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00
147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF0
90393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113
C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F
495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25B
A21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C
703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA212
0012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F
121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E12015B15
1E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F8
3CEB7FF8EB0FC0212679A426>I<01F01507D803FC903903801F80D8071E903907C03FC0
D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E168000E0ED00
0313FEC64849130718000001147E5B03FE5B0003160E495BA2171E00070101141C01E05B
173C1738A217781770020314F05F0003010713016D486C485A000190391E7C07802800FC
3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>I<903907E007C090391FF81FF8
9039787C383C9038F03E703A01E01EE0FE3803C01F018013C0D8070014FC481480000E15
70023F1300001E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016
E0001C5B007E1401010714C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C
393FF03FF03907C00FC027267CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F1307
121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D
0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE03800
7FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E0
6C485A383C1F80D80FFEC8FCEA03F0233679A428>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr7 7 6
/Fj 6 52 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA2121C
123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E013
6013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0
120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E0120113
C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<EB3F803801FFF03803E0F83807
803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80
A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA521>48
D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF000313
E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E
147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300030012065A001F
B5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C0030137E003C13
3E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC380001E06D7E147C
80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01F03807FFC0C6
90C7FC19277DA521>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmex10 10 4
/Fk 4 103 df<160F161F163E167C16F8ED01F0ED03E0ED07C0150FED1F801600153E15
7E5D4A5A5D14034A5A5D140F4A5AA24AC7FC143E147E5CA2495AA2495AA2495AA2130F5C
A2495AA2133F91C8FCA25B137E13FEA25B1201A25B1203A35B1207A35B120FA35BA2121F
A45B123FA690C9FC5AAA12FEB3AC127FAA7E7FA6121F7FA4120FA27FA312077FA312037F
A312017FA212007FA2137E137F7FA280131FA26D7EA2801307A26D7EA26D7EA26D7EA214
7E143E143F6E7EA26E7E1407816E7E1401816E7E157E153E811680ED0FC01507ED03E0ED
01F0ED00F8167C163E161F160F28C66E823D>18 D<12F07E127C7E7E6C7E6C7E6C7E7F6C
7E1200137C137E7F6D7E130F806D7E1303806D7EA26D7E147C147E80A26E7EA26E7EA26E
7EA2811403A26E7EA2811400A281157E157FA2811680A2151F16C0A3150F16E0A3150716
F0A31503A216F8A4150116FCA6150016FEAA167FB3AC16FEAA16FC1501A616F81503A416
F0A21507A316E0150FA316C0151FA31680153FA216005DA2157E15FE5DA214015DA24A5A
A214075DA24A5AA24A5AA24AC7FCA2147E147C14FC495AA2495A5C1307495A5C131F49C8
FC137E137C5B1201485A5B485A485A48C9FC123E5A5A5A28C67E823D>I<D90FC01410D9
3FF81438D9FFFC14F0000301FFEB01E03B07C07FC007803B0F001FF01F00003C903807FF
FE48010113F800E06D13E00040EC1F802D0A80BB2E>101 D<912607FF80178091B500F8
EE03C0010702FFEE0F8090263FFC1F01E0ED7E0001FFC7D87FFCEC03F0D803F091260FFF
80EB3FC0D81F8002019026FE0FFFC7FC007CC9003FB512F800F0040714C000409326007F
F8C8FC520A80BD53>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmmi10 10 29
/Fl 29 121 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E130F499038
07C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0007F16C0
90C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E91381DF81800
3F14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003FC0EB0F80
2E267DA435>11 D<EB07F0D91FFC1430D97FFE147090B5146000036E13E0486E13C0D9F0
1F1301270F8007E01380261F00011303001CD900F0130048EC7007160648EC300E0060EC
380CED181C00E01518C8121CED0C3816301670166016E05EA2150D5EA2150F93C7FCA215
0EA3150CA3151CA215181538A45DA45DA44A5AA35D2C377FA42B>13
D<133F14C0EB07F06D7E801301A26D7EA3147FA36E7EA36E7EA36E7EA36E7EA36E7EA36E
7EA26E7EA214014A7E5C4A7E91381E3F80143C14784A6C7E1301EB03E049486C7EEB0F80
EB1F00496D7E137E5B48486D7E485A485A000F6E7E485A485A48C87E12FE167F48168000
70151F293B7CB930>21 D<013FB612E090B712F05A120717E0270F807006C7FC391E0060
0E48140C003813E04813C048141CEAC0011200148001035BA213071400A25B1578011E13
7CA3133E133C137C157E13FC5B1201157F1203497FA3D801C0131C2C257EA32F>25
D<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213C0A3127F12
1C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<EF0380EF0FC0
173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FE
C8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0
EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF
80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE
03FE933800FF80EF3FC0170FEF0380323279AD41>I<126012FCB4FCEA7FC0EA1FF0EA07
FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0
ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007F80EF1FC0A2EF7F8093
3801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0
EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC12FC1270
323279AD41>62 D<EC03FC91381FFF80027F7F903901F807F0903903C001F89039078000
7C91C7127E010E804980011F1580D93FC0130F17C01607A24A14E0A2011EC7FC90C8FCA5
EC0FF0ECFFFC903803F00E903907C0078F90381F8001D93E0013CF491300484814FF0003
ED7FC05B485A120F48481580A2485AA2007F160090C8FC167E16FE5A485D15015E150348
5D15075E4B5AA2007E4A5A4BC7FC003E147E003F5C6C6C485A390FC007F03907F01FC06C
B5C8FCC613FCEB1FE02B3E7DBB2C>64 D<1760177017F01601A21603A21607160FA24C7E
A216331673166316C3A2ED0183A2ED0303150683150C160115181530A21560A215C01401
1580DA03007FA202061300140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC1306
A25BA25B13385B01F01680487E000716FFB56C013F13FF5EA2383C7DBB3E>I<9339FF80
01C0030F13E0037F9038F80380913A01FF807E07913A07F8000F0FDA1FE0EB079FDA3F80
903803BF0002FFC76CB4FCD901FC80495A4948157E495A495A4948153E017F163C49C9FC
5B1201484816385B1207485A1830121F4993C7FCA2485AA3127F5BA312FF90CCFCA41703
A25F1706A26C160E170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C
143C6C6C5C6CB4495A90393FE00FC0010FB5C9FC010313FC9038007FC03A3D7CBA3B>67
D<0103B812E05BA290260007F8C7123F4B140FF003C0140F18015DA2141FA25D1980143F
A25D1760027F14E095C7FC92C75AA24A1301A24A495A16070101141F91B6FC94C8FCA290
3903FC001F824A130EA21307A24A130CA2010F141CA24A90C9FCA2131FA25CA2133FA25C
A2137FA291CBFC497EB612C0A33B397DB835>70 D<0107B512FCA216F890390007F8005D
A2140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25C
A21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA326397DB8
24>73 D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA2141FA25DA2143FA25DA2147F
A292C9FCA25CA25CA21301A25CA21303A25CA2130718404A15C0A2010F150118804A1403
A2011F16005F4A1406170E013F151E171C4A143C177C017F5D160391C7120F49EC7FF0B8
FCA25F32397DB839>76 D<902603FFF893383FFF80496081D900079438FF80000206DC01
BFC7FCA2020E4C5A1A7E020C1606190CDA1C7E16FE4F5A02181630A20238166162023016
C1F00181DA703F158395380303F002601506A202E0ED0C076202C01518183001016D6C14
0F06605B028015C0A20103923801801FDD03005B140092380FC00649173F4D91C8FC0106
5DA2010E4B5B4D137E130C6F6C5A011C17FEDCE1805B011802E3C7FCA2013802E6130104
EC5C1330ED03F8017016034C5C01F05CD807FC4C7EB500E0D9C007B512F0168015015139
7CB851>I<902603FFF891381FFFF8496D5CA2D90007030113006FEC007C02061678DA0E
FF157081020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C1430150702706D13
03030392C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C5C163F0103EDC0
1C041F131891C713E0160F49EDF03818300106140717F8010E02031370EFFC60130CEE01
FE011C16E004005B011815FF177F1338600130153FA20170151F95C8FC01F081EA07FCB5
12E01706A245397DB843>I<0103B7FC4916E018F8903B0007F80007FC4BEB00FE187F02
0FED3F80F01FC05DA2021F16E0A25DA2143FF03FC05DA2027FED7F80A292C8130018FE4A
4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91B612FC17E0D903FCCAFCA25CA21307A25C
A2130FA25CA2131FA25CA2133FA25CA2137FA291CBFC497EB6FCA33B397DB835>80
D<0103B612F849EDFF8018E0903B0007F8001FF84BEB03FCEF00FE020F157FA24BEC3F80
A2021F16C0A25DA2143FF07F805DA2027FEDFF006092C7485A4D5A4A4A5A4D5A4AEC1F80
057FC7FC0101EC07F891B612E094C8FC9139FC000FC00103EC03F0707E4A6D7E83130717
7E5C177F010F5D5F5CA2011F1401A25CA2133F16034A4A1360A2017F17E019C091C71401
496C01011480B61503933900FE0700EF7E0ECAEA1FFCEF07F03B3B7DB83F>82
D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027EEB01FE02F813
00495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094C7FC80806D7E
14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F03037F1500167F16
3F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F4A5A6D495A6D
EB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC313D7CBA33>
I<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7007F141C121E001C
92C7FCA2485CA200305C007017180060130112E0485CA21403C716005DA21407A25DA214
0FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CEB0F
FC003FB6FC5AA237397EB831>I<49B500F890387FFFF095B5FC1AE0D90003018090380F
FC004BC713E00201ED07804EC7FC6E6C140E606F5C705B606F6C485A4D5A031F91C8FCEE
E0065F6F6C5A5F03075B705A16F96FB45A94C9FC6F5AA36F7EA34B7FED037F9238063FC0
150E4B6C7E1538ED700F03E07F15C04A486C7EEC0300020613034A805C4A6D7E14704A13
00494880495A49C86C7E130E011E153F017E4B7ED803FF4B7E007F01E0011FEBFFC0B5FC
6144397EB845>88 D<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F48
5A4848EB1F8012075B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA214
015D48150CA21403EDF01C16181407007C1538007E010F1330003E131F027B13706C01E1
13E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF9038E707
C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA214015A127EA2
140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E5C383C01
F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<EC3FC0903801FFF0903807E03C90
380F800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F1438484813
00A2127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C14E0390F
8007C03907C03F003801FFF838003FC020267DA424>I<163FED1FFFA3ED007F167EA216
FEA216FCA21501A216F8A21503A216F0A21507A2027E13E0903803FF8790380FC1CF9038
1F00EF017EEB7FC049133F485A4848131F000715805B000F143F485A1600485A5D127F90
C7127EA215FE5A485CA21401A248ECF80CA21403161CEDF0181407007C1538007E010F13
30003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B7DB9
2B>I<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E1380121C12
1812381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B12035BA20007
131813E01438000F133013C01470EB806014E014C01381EB838038078700EA03FEEA00F8
15397EB71D>105 D<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781F00F03E03D1C
3E1E00F83C01F026383F38D9FC707F00304914E04A90387DC000007049EB7F8000604991
C7FCA200E090C700FE1301485A017E5CA200000201140301FE5F495CA203031407000160
495C180F03075D1203494A011F13601980030F023F13E00007F000C0495C1901031F023E
1380000F1803494A150061033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E04326
7EA449>109 D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00
305B4A137C00705B00605BA200E090C712FC485A137EA20000140101FE5C5BA215030001
5D5B15075E120349010F133016C0031F13700007ED80605B17E0EE00C0000F1501491580
1603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432>I<903907E001F090391F
F807FC9039783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A00
0E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA2
4A130CA20101141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE0E7C01
C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267EA42F>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsy10 10 17
/Fm 17 121 df<007FB81280B912C0A26C17803204799641>0 D<0060150600F8150F6C
151F007E153F6C157E6C6C14FC6C6CEB01F86C6CEB03F06C6CEB07E06C6CEB0FC06C6CEB
1F80017EEB3F006D137E6D6C5A90380FC1F8903807E3F0903803F7E06DB45A6D5B6EC7FC
A24A7E497F903803F7E0903807E3F090380FC1F890381F80FC90383F007E017E7F49EB1F
804848EB0FC04848EB07E04848EB03F04848EB01F84848EB00FC48C8127E007E153F4815
1F48150F00601506282874A841>2 D<EB0380497EA7397803803C00FC147E00FE14FE39
7F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFF
FE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380FE00FC147E0078143C3900
07C000A76D5A1F247BA62A>I<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FC
B3A3007FB812F8B912FCA26C17F836367BB641>6 D<126012F812FEEA7F80EA3FE0EA0F
F8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED
3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0171FEF7F8093
3801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0
EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270
CCFCAE007FB81280B912C0A26C1780324479B441>21 D<D90FF0ED07F0D93FFEED3FFE90
B56C91B5FC00036E903903F807C02707F07FF0903907C001E0270F801FF890390F8000F0
90260007FC013EC71270001E6D6C491438486D6C0178141C00386D6D5A48DA7FC1150E92
383FE3E0006091261FF3C01406EEF78000E0DA0FFF1507486E90C812036F5AA26F7E6F7F
707EA24C7E6C4A6D14070060DBEFF81406ED03CF0070912607C7FC140E92380F83FE6CDB
01FF141CDB1E006D133C6C023E6D6C13786C4A6D6C13F0000FD901F090381FF8016C6C48
4890390FFE0FE02703E01FC00103B512C0C6B5C76C1400D97FFC9138007FFCD90FE0ED0F
F048267BA453>49 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA
01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9
FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE01
0314FF1300021F13FE283279AD37>I<EE0180EE03C01607A2EE0F80A2EE1F00A2163EA2
5EA25EA24B5AA24B5AA24B5A150F5E4BC7FCA2153EA25DA25DA24A5AA24A5AA24A5AA24A
5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133EA25B13FC5B
485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A12602A4E75BB00>54
D<156015F0A21401EB07F190383FFFE0EB7C1FEBF00748486C5AD803C07F4848487ED80F
007FA248497E001E14BC153C003E143E141FA248EB1E1F143EA2143CA2147C00FC158014
7814F8A214F0A21301A214E01303A214C0A21307A21480A2130FA214005B007C1500131E
A2D87E3E5BA2D83E3C133E137CA21378001F5C13F8000F14784913F800075C0003495AEB
E0033901F007802603FC1FC7FCEBFFFEEBC7F0D807C0C8FCA25BA26CC9FC21477CBF2A>
59 D<0307B612FE033FEDFF804AB812C0140791260F807EC7FC91263C00FEEC3F004A16
1E4A491418010194C7FC495A01071301A2D90FC05B148014000118130390C75BA34B5AA3
150F5EA34B5AA293B512FC4B5C604B14C0037ECAFCA25DA25D1401A24A5AA25D14075D14
0F5D141F92CBFC5C0006133E003E137E007E137CB413FC6D5AEBC1F0EBF1E06CB45A6C90
CCFC6C5AEA07F0423C7EB83C>70 D<EE01FCEE0FFEEE7FFF4BB5FC4B1480ED0F03ED1E01
4B7E157C4B137F4A5A020315004B137E0207147C4A48137017C04A4890C7FCA24AC9FCA2
5C147E14FEA25C1301A25C1303A3495AA4495AA4495AA35C133F91CAFCA2137E182049ED
01E017034848ED0FC0D9F7F8141F48B56C148003F014004802FF133E48EDF03C0107ECFF
F8261E007F14E048010F5C0070010049C7FC00C0EC0FF0333D7EBA39>76
D<0060161800F0163CB3B26C167CA2007C16F8A26CED01F0003F15036C6CEC07E06C6CEC
0FC0D807F0EC3F80D803FE903801FF003A00FFC00FFC6DB55A011F14E0010391C7FC9038
007FF82E347CB137>91 D<EC7FF80103B5FC011F14E0017F14F89039FFC00FFC3A03FE00
01FFD807F09038003F80D80FC0EC0FC04848EC07E048C8EA03F0003E150148ED00F8A248
167CA248163CB3B2006016182E347CB137>I<EC01F8140FEC3F80ECFC00495A495A495A
A2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F
6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D<137E3801FFC03807C1E0380F0070001E1338003E131C48130C141E147E5AA3143C1400
A3127CA37E121E7E6C7E6C7EEA00F013FCEA03FF380F8780381F01E0003E13F0EB00F848
137CA200FC133E5A141FA6127C143F6C133EA26C137CEA0F80000713F83801E1F03800FF
C0EB3F00130FEB03C0EB01E0EB00F01478147C143EA3141FA3123C127EA3143E12781230
0038137C6C13786C13F0380783E03803FF8038007E00184C7ABA25>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmbx8 8 11
/Fn 11 83 df<EB0FFC90387FFF8048B512E03903FC0FF03907F003F848486C7E48486C
7EA2003F80A2497F007F1580A400FF15C0B0007F1580A46C6CEBFF00A2001F5CEBE00100
0F5C6C6C485A3903FC0FF06CB55A6C6C1380D90FFCC7FC222D7DAB29>48
D<EB01E01303131F13FFB5FCA3133F1200B3AE007FB512F0A41C2C7AAB29>I<EB3FF038
01FFFE0007EBFF80001F14E0D83F8013F0397F003FF8EC1FFC39FF800FFEEBC00715FF80
A3EA7F80EA3F00C7FCA2EC07FEA2EC0FFC15F8EC1FF0EC3FE015C0EC7F80ECFE00495AEB
03F0495A90380FC00FEB1F00133E01FC131FD801F0131E485A48B512FE5A5A5A5AB612FC
A4202C7CAB29>I<EB0FFC90387FFF8048B512E03903F81FF03907C00FF848486C7E01E0
7FEA1FF013F8A56C48485AEA07E0C7485A5D4A5AECFF80013F90C7FC14FCECFFC0903800
1FF0EC0FFC6E7E6E7E16808016C0121FEA7FC0EAFFE0A416805CEA7FC049481300003F5C
391FF01FFC6CB55A6C14E0C61480D91FFCC7FC222D7DAB29>I<15F814011403A2140714
0F141F143F147FA214F7EB01E7EB03C71307EB0F87EB1F07131E133C137813F01201EA03
E013C0EA0780EA0F00121E123E5A5AB712F0A4C7380FF800A7010FB512F0A4242C7EAB29
>I<00181438391FC003F890B5FC15F015E015C01580ECFE005C14E091C7FC90C8FCA5EB
1FF8EB7FFF90B512C09038F01FE09038C00FF090380007F8001E14FC001CEB03FEC7FCA2
15FFA2120C123FEA7F8012FF13C0A215FE13801407D87E0013FCEC0FF86C131F391FC07F
F06CB512C06C14800001EBFC0038003FE0202D7CAB29>I<ECFF80010713F0011F7F9038
7FC07C49C67ED803FC137E484813FF5CEA0FF0EA1FE0A2003F6D5A157C484890C7FCA339
FFC3FF8001CF13E09038DFBFF09038FC03FC496C7E01F07F80491480A216C05BA4127FA4
123F6D1480A2001F491300EA0FF06D485A6C6C485A6CB55AC614E0013F1380D907FCC7FC
222D7DAB29>I<123C123F90B612E0A44815C0168016005D5D397C0001F80078495A00F8
495A485C140F4A5AC748C7FC147E5CA2495A13035C1307A2495AA2131FA3495AA4137FA9
6D5A6DC8FC232E7CAC29>I<EB07FC90383FFF8090B512E03901F80FF03903E003F84848
6C7E380F800081001F147EA27F7F7F01FC13FE01FF5B14C16CEBE3F8ECFFF06C14C06C5C
6C14E06C14F881000380D80FE37FEA1FC1263F807F1380387F001F007E010713C000FE13
0148EB007F153F151F150FA36C1580007E141F007F1500D83FC0137E391FF001FC6CB55A
00035CC61480D91FFCC7FC222D7DAB29>I<EB0FFCEB7FFF48B512C03907FC0FF0390FF0
07F848486C7E003F6D7EA2D87FC07F8012FF1680A416C0A45C127FA2003F5B13E06C6C5A
000F5B3803FF7E6C5B26007FF0138090C7FCA3260F80011300EA1FC0D83FE05B14035D14
0749485A6C48485A9038C07FE06CB512806C91C7FC000113F838007FC0222D7DAB29>I<
B7FC16F816FE707E0001D9800313E09238007FF0707E161F707EA283A55F161F5F4C5A4C
5A923803FFC091B6C8FC16F8A29138800FFEED03FF6F7F6F7FA2707EA583A31803F00780
17F8A2043F130FB6D91FFC1300706C5A933807FFFE04015BCAEA3FF0392F7DAD3D>82
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr8 8 67
/Fo 67 122 df<9138FF807E01079038E1FF80903A1F807FC3C0D93E00EB87E049EBFF07
4913FE485A00039138FC018049017CC7FCAAB712FCA22703E0007CC7FCB3A6486C13FE3A
7FFF0FFFF0A22B2F7FAE29>11 D<14FF010713E090381F80F090383E003849137C4913FC
485A1203491378153092C7FCA7157CB612FCA23803E000157CB3A5486C13FE3A7FFF0FFF
E0A2232F7FAE27>I<913901C001C0A30203130303805BA302071307030090C7FCA34A5B
020E130EA3021E131E021C131CA3023C133CB912C0A3C726700070C7FC02F013F04A5BA4
0101130102C05BA40103130302805BB912C0A327000F000FC8FC010E130EA3011E131E01
1C131CA3013C133C01381338A30178137801701370A301F013F0495BA3323B7CAD3B>35
D<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A2121EA35AA45A
A512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00F01370133813
1C130E1307130310437AB11B>40 D<12C07E12707E7E7E120FEA0780120313C0EA01E0A2
EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378A313F0A2EA01
E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<123C127EB4FCA21380A2
127F123D1201A312031300A25A1206120E5A5A5A126009157A8714>44
D<B512C0A412047F9018>I<123C127E12FFA4127E123C08087A8714>I<15C01401140315
80A214071500A25C140EA2141E141CA2143C143814781470A214F05CA213015CA213035C
130791C7FCA25B130EA2131E131CA2133C1338A21378137013F05BA212015BA212035BA2
120790C8FC5A120EA2121E121CA2123C1238A212781270A212F05AA21A437CB123>I<EB
3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0A500FC14
F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0FC3800FF
F0EB3FC01C2D7DAB23>I<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2
172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E0
12F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C49
5A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A48
14C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F80003F14C0
A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00FC143F
EC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C00070131F6C14
80001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2147E14
FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA0180120313001206
120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC23>I<
000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7FF8380D
E07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA448EB07
E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE038007F801C2D7D
AB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0EA0F80A2391F
00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E01001380EC
07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E001F14C06CEB0F803907
801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB512F8A215F0
5A15E039700001C000601480140348EB0700140E140CC7121C5C143014705C495AA2495A
A249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>I<EB1FC0EBFF
F03803E07C3807801E48487E001EEB0780A248EB03C0A4123E1407003F1480381FC00F01
E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FFD807831380D81F00
13C0001E133F48EB1FE0007C13070078EB03F012F84813011400A46C14E000781301007C
14C0003C13036CEB0780390F800F003807E03C3801FFF038003FC01C2D7DAB23>I<EB3F
80EBFFF03803E0783807C03E48487E48487E003E14801407007E14C0127C00FC14E01403
A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F33800FFC390383F03E0
13001407A215C0A2140F001E1480003F14005C143E143C003E5B001C5B380E03E03807FF
80D801FEC7FC1C2D7DAB23>I<123C127E12FFA4127E123C1200AD123C127E12FFA4127E
123C081D7A9C14>I<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FCA2EC70FEEC607E
A24A7EA349486C7EA2010380EC000FA201066D7EA3496D7EA2011FB57EA2903818000149
6D7EA349147EA201E0147F4980A20001ED1F801203000716C0D80FF0EC3FE0D8FFFC0103
B5FCA2302F7EAE35>65 D<B612FCEDFF803A03F8000FC00001EC03F06F7E6F7E82167E16
7FA6167E16FE5E4B5A4B5AED0FE0ED7F8090B6C7FC16E09039F80003F0ED01FC6F7E167F
821780161F17C0A61780163F17005E16FEED03FC0003EC0FF0B712C04BC7FC2A2D7DAC32
>I<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F484814
1F4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600AB127F17
C0A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F1478
90390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>I<B612F815FF3A03
F8001FE00001EC03F0ED00F8167E82EE1F80160F17C0EE07E0A2EE03F0A217F81601A317
FCAA17F8A3EE03F0A217E0160717C0160FEE1F80EE3F00167E5EED03F00003EC1FE0B712
8003F8C7FC2E2D7DAC36>I<B712FEA23903F800010001EC003E828282A282A317801601
1518A293C7FCA31538157815F890B5FCA2EBF800157815381518A21760A392C712C0A416
0117801603A21607160F163F0003913801FF00B8FCA22B2D7EAC30>I<B712FCA23903F8
00030001EC007C163E161E160EA21606A3160716031518A21600A31538157815F890B5FC
A2EBF800157815381518A592C7FCAB487EB512F8A2282D7EAC2E>I<DA1FF013C09138FF
FE01903903F00F8390390F8001E3013FC71277017C143F4848141F4848140F48481407A2
48481403121F491401123F90C8FC481500A300FE1600A992381FFFFEA2007F9138001FE0
EE0FC0A27E7F121F7F120F6C7EA26C7E6C6C141FEA007C013F143FD90F8013F3903903F0
07C10100B51200DA1FF813002F2F7CAD37>I<B539F03FFFFCA2D803FCC713006C48147E
B290B612FEA201F8C7127EB3486C14FFB5D8F03F13FCA22E2D7DAC35>I<90387FFFF0A2
01001300147EB3AD123812FEA314FE5C1278387001F86C485A381E07E03807FF80D801FC
C7FC1C2E7DAC24>74 D<B500F0EB7FFEA2D803FCC7EA1FF06C48EC0FC01700161E16385E
5E4B5A4B5A4BC7FC150E5D5D15F0EC01C04A5A4A7E4A7E141F4A7EEC73F8ECE1FCEBF9C0
9038FF80FE9038FE007F497F49806F7E6F7E1507826F7E6F7EA26F7E167F821780EE1FC0
17E0486CEC3FF0B5D8F001B5FCA2302D7DAC37>I<B512F8A2D803FCC8FC6C5AB3A7160C
A41618A41638A2167816F81501ED07F00003141FB7FCA2262D7EAC2C>I<D8FFF8923807
FFC06D5D0003EFF00000015F01BE151BA2019F1533A3D98F801463A2D987C014C3A2D983
E0EB0183A3D981F0EB0303A2D980F81306A3027C130CA26E1318A36E1330A291380F8060
A2913807C0C0A3913803E180A2913801F300A3EC00FEA2157C487ED80FF04B7EB5D93801
B512C0A23A2D7DAC41>I<D8FFF8903803FFFC7F00019138003FC06DEC0F006D1406EBBF
80A2EB9FC0EB8FE0138780EB83F8138180EB80FE147E147FEC3F80EC1FC0140F15E0EC07
F0140315F8EC01FC140015FE157FED3F86151F16C6ED0FE6150716F6ED03FE1501A21500
167E163EA2486C141ED80FF0140EB5FC16062E2D7DAC35>I<B612FCEDFF803A03F8000F
E00001EC03F0ED00F882167E167F821780A617005E167E5E5EED03F0ED0FE090B6128003
FCC7FC01F8C9FCB2487EB512F0A2292D7EAC30>80 D<EC3FF0903801FFFE903907E01F80
90391F8007E090393E0001F001FCEB00FC4848147E4848804848EC1F8049140F000F16C0
4848EC07E0A2003F16F090C812034816F8A3007E150100FE16FCAA007E16F8007F1503A2
6C16F0A26C6CEC07E0A23B0FC007800FC0EC1FE03B07E038701F803B03F070183F003A01
F8601C7ED800FCEB0CFC017EEB0FF8D91FF013E0903907F81F800101B5EA000C9038003F
F79138000780171CED03C0EEE03CEEF078EEFFF88117F0A26F13E0EE7FC0EE1F002E3B7C
AD37>I<B612C015FC3903F8007F0001EC0FC06F7E6F7E6F7E82150082A55E15015E4B5A
4B5A4B5A037FC7FC90B512FC15F09038F800FC153E6F7E150F826F7EA582A5170316F815
031707486C903801FC0EB539F000FE1CEE3FF8C9EA07E0302E7DAC34>I<90383F803039
01FFF0703807C07C390F000EF0001E13074813034813011400127000F01470A315307EA2
6C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF00011480D8003F13E01303903800
3FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C14F06CEB01E039F780
03C039E3F00F0038E07FFE38C00FF01E2F7CAD27>I<007FB712F8A29039000FC003007C
150000701638A200601618A200E0161CA248160CA5C71500B3A94A7E011FB512E0A22E2D
7EAC33>I<B539F003FFFCA2D803FCC7EA3FC06C48EC0F001606B3AB160E0000150C7F16
1C017C1418017E14386D5C6D146090390F8001E0903907E00380902601F80FC7FC903800
7FFCEC0FF02E2E7DAC35>I<B53C801FFFF001FFF8A22707FC000190C7EA3FC0D803F06D
48EC1F00047E140EA26C6C027F140CA26D171C0000DBDF801318A26D1738017E9026018F
C01330A2017F17706D90260307E01360A2028016E0011F90260603F05BA202C01501010F
90260C01F85BA202E01503010790261800FC90C7FCA202F05D010349EB7E06A202F8150E
010149EB3F0CA202FC151C010049EB1F98A202FE15B8DA7F80EB0FF0A2023F5D92C71207
A26E5D021E1403A2020E5D020C1401452E7FAC48>87 D<3B7FFFE003FFF8A2000390C713
806C48EC7E000000157C017F14786D14706E5B6D6C5B6D6C485A15036D6C48C7FC903803
F80601015BECFC1C6D6C5AEC7F305DEC3FE06E5A140F816E7E81140DEC1DFCEC38FEEC30
7F14609138E03F8049486C7EEC800FD903007F496D7E010E6D7E130C011C6D7E496D7E49
147E167F01F0EC3F80000316C0D80FF8EC7FE0D8FFFE0103B5FCA2302D7EAC35>I<B500
C090380FFFC0A2D807FEC73801FE006C48EC00F8000116E06C6C5D1601017F4A5A6D6C91
C7FC5E6D6C130E6D6C130C5E6D6C13386D6C13305E6D6C13E06D6C5B4B5AEC7F03DA3F83
C8FC1586EC1FCEEC0FEC15F814076E5AB04A7E49B512C0A2322D7FAC35>I<EAFFE0A3EA
E000B3B3B3A7EAFFE0A30B4379B114>91 D<EAFFE0A31200B3B3B3A712FFA30B437FB114
>93 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F
3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C
391F83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EA07C012FFA2120F1207AC14FE
9038C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16C0A9
ED1F80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FCC7FC
222F7EAD27>I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB
0F00007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E0070038
01F03E38007FF8EB1FC01A207E9E1F>I<15F8141FA214011400ACEB0FE0EB7FF83801F8
1E3803E0073807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017E
EB8003000F13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB
1F80EBFFF03803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FC
A3B6FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801
F03C38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803
E00C1400AAB512E0A23803E000B3A6487E387FFF80A2182F7FAE16>I<013F13F89038FF
C3FE3903E1FF1E3807807C000F140C391F003E00A2003E7FA76C133EA26C6C5A00071378
380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814FF6C14C04814F0391E00
07F848130048147C12F848143CA46C147C007C14F86CEB01F06CEB03E03907E01F803901
FFFE0038003FF01F2D7E9D23>I<EA07C012FFA2120F1207AC14FE9038C3FF809038C703
E09038DE01F013F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA07
80EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA2
0E2E7EAD14>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C05D020EC7FC5C5C5C
5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E14076E7E816E7E48
6C487E3AFFFE07FF80A2212E7EAD25>107 D<EA07C012FFA2120F1207B3B3A3EA0FE0EA
FFFEA20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8
E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2486C01FEEB
0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703E0390FDE01
F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF8
3801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FC
A9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB
1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F800FC49137E
49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D9038FC01F090
38CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>I<380781F8
38FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>
114 D<3801FE183807FFB8381E01F8EA3C00481378481338A21418A27E7EB41300EA7FF0
6CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C131EA27EA26C133CA2
6C137838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0A312011203A2120712
1FB512F0A23803E000AF1418A714383801F03014703800F860EB3FE0EB0F80152A7FA81B
>I<D807C013F800FF131FA2000F130100071300B21401A314033803E007EC0EFC3A01F8
1CFFC038007FF890391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E00000714
7C15380003143015706C6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06A2
EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA23B0F
E003F001F801C09038E000F00007010114E0812603E00314C0A2913807F8012701F00678
1380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA2168C90391F
600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I<3AFFFC07FF80A23A
0FF003FC000003EB01F0000114C06D485A000091C7FCEB7C06EB3E0E6D5A14B8EB0FB0EB
07E013036D7E497E1307EB067C497EEB1C1F01387FEB700F496C7E6E7ED803C07F00076D
7E391FE003FC3AFFF007FFC0A2221D7F9C25>I<3AFFFC01FFC0A23A0FE0007E00000714
7C1538000314306D137000011460A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB1F
06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06A2
5B131CEA7838EA7070EA3FE0EA0F80222B7F9C25>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmcsc8 8 36
/Fp 36 122 df<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A
5A12600915798716>44 D<B512E0A413047E901A>I<123C127E12FFA4127E123C080879
8716>I<EB0FE0EB7FFC3801F83F3903C0078039078003C0390F0001E04814F0001E1300
003E14F8A348147CA400FC147EAF007C147CA3007E14FCA2003E14F8A2001E14F0001F13
01390F8003E0000714C03903E00F803901F83F0038007FFCEB0FE01F2D7CAB27>48
D<EB3FC03801FFF83807C07E390E003F8048EB0FC04814E0481307006014F000F0130300
FC14F87E1401A3007C1303C7FCA215F0140715E0140F15C0EC1F80EC3F00147E147C5C49
5AEB03C0495A49C7FC131E5B4913185BEA01C04848133048C7FC000E1470001FB512F05A
4814E0B6FCA21D2C7BAB27>50 D<EB1FF03801FFFE3907E03F80390E000FC048EB07E0EC
03F0003F14F8A2EB800113001403120CC7FC15F0140715E0EC0FC0EC1F80EC3F0014FCEB
7FF014FE9038003F80EC0FC0EC07E0EC03F0EC01F815FCA2EC00FEA21238127C12FEA3EC
01FC12F8006014F80070EB03F06CEB07E0001EEB0FC03907C03F803901FFFE0038003FF0
1F2D7CAB27>I<000C14C0380FC00F90B5128015005C14F814E0D80C7FC7FC90C8FCA8EB
1FE0EB7FF8380DE03E380F801F390E000F80000CEB07C0EC03E0C7FC15F0140115F8A412
7812FCA315F048130312E0006014E00070EB07C06C130F6CEB1F806CEB3E00380780FC38
01FFF038007F801D2D7BAB27>53 D<14FF010713C090381F00E0017C13704913F83801E0
011203EA07C0EA0F80001FEB00F090C8FC5A123EA2127EA2387C07F038FC1FFEEB781F90
38E007C039FDC003E039FF8001F0010013F814004814FC157C157E5AA3127CA3127E123E
157C15FC6C14F86C1301018013F03907C003E03903E007C03900F81F00EB7FFCEB0FF01F
2D7CAB27>I<EB0FF0EB7FFE3901F01F8039078007C0390F0003E0000EEB01F0001E1300
4814F81578A3123E003F14F86D13F0381FE0019038F003E0390FFC07C03907FF0F806CEB
BE006C13F8EA007FEB1FFEEB7FFFD801E313C0D807C013E0390F003FF0001EEB0FF848EB
07FC007C13010078EB00FE00F8147E48143EA2151EA36C141C0078143C007C14386C1478
6C14F0390F8003C03903F00F803900FFFE00EB1FF01F2D7CAB27>56
D<EC01C0A24A7EA34A7EA24A7E140DA2EC18FCA24A7E157EA24A7EA202C07F151F010180
EC800FA249486C7EA2498001061303A2496D7EA2011C80011FB5FCA20130C7127EA20170
147F016080A2496E7EA200018249140F1203707E486C4A7ED81FE04A7ED8FFF891B51280
A2312F7CAE39>65 D<B612FEEDFFE03A03F80007F80001EC00FC163F707EEE07C0707E83
707E160083177EA383A31880AA1800A25F177EA25FA24C5A5F4C5A4C5A4C5A043FC7FC16
FE0003EC07F8B712E04BC8FC312D7CAC3A>68 D<B81280A2D803F8C7127F0001150FEE07
C016031601A21600A317E01760150CA21700A3151C153C157C90B512FCA29038F8007C15
3C151C150CA21718A392C71230A41770176017E0A216011603160F0003ED7FC0B8FCA22D
2D7CAC34>I<B512F8A2D803FCC8FC6C5AB3A71603A41606A3160EA2161EA2163E167EED
01FC0003140FB7FCA2282D7CAC30>76 D<D8FFF8923803FFE06D5D0003EFF80000015F01
BE150DA2019F1519A2D98F801431A3D987C01461A2D983E014C1A2D981F0EB0181A3D980
F8EB0301A2027C1306A2027E130C143EA26E1318A291380F8030A3913807C060A2913803
E0C0A2913801F180A3913800FB00A2157EA2486C133CD80FF04B7EB592B512E015183B2D
7BAC45>I<D8FFF891387FFF807FD801FE913807F800EE01E06D6E5AEBBF80EB9FC0EB8F
E0A2EB87F0EB83F8EB81FCA2EB80FE147F6E7E141F816E7E6E7E6E7EA26E7E6E7E157FA2
ED3F80ED1FC0ED0FE0A2ED07F0ED03F8ED01FC150016FE167F163F161FA2160F1607486C
1403EA0FF0B514011600312D7CAC39>I<90383FE0069038FFFC0E3803E01F390F0003DE
001EEB00FE48147E0038143E0078141E127000F0140EA315067EA26C91C7FC127EEA7F80
EA3FF0EBFF806C13F8000713FF6C14C0C614F0011F7F01007FEC0FFEEC00FF8181ED1F80
150F12C01507A37E16005D7E6C141E6C141C6C5CD8F78013F039E1F803E039E07FFF8026
C007FCC7FC212F7BAD2B>83 D<B500F090387FFF80A2D803FCC73807F8006C48EC01E070
5AB3AB16016C6C5DA21603017E92C7FC013E5C6D140E6E5BD907C05B6D6C13F0903900FC
07C0DA3FFFC8FCEC07F8312E7CAC39>85 D<14E0A2497EA3497EA3EB067CA2EB0E3E130C
A2497EA201387FEB300FA2496C7EA3496C7E90B5FC4880EB8001A248C77EA24880000614
7C120E001F147E48147F3AFFC003FFE0A223237DA22A>97 D<B512FCECFF80391F8007C0
000FEB03F0EC01F8140015FCA515F81401EC03F0EC0FE090B5128015009038800FE0EC03
F0EC01F8EC00FC157C157EA5157C15FCEC01F81403001FEB07E0B612C0ECFE001F227CA1
28>I<903803FC0390381FFF0790387E03CF9038F800EFD803E0137F4848133F4848131F
001F140F90C7FC481407123E127E15035AA21500A71503127EA2123E003F14076C14066D
130E000F140C6C6C131C6C6C1338D800F813F090387E03C090381FFF80903803FC002024
7CA229>I<B512FCECFF80391F800FC0000FEB03F0EC00F8157C81A281A2ED0F80A316C0
A81680A3ED1F00A2151E153E5D5D4A5A001FEB0FE0B6128002FCC7FC22227CA12B>I<B6
12F0A2381F8003000F13001570153015381518A314181500A214381478EBFFF8A2EB8078
14381418A3EC0006A3150CA3151C153C157C001FEB01F8B6FCA21F227CA126>I<B612F0
A2381F8003000F13001570153015381518A4EC1800A314381478EBFFF8A2EB8078143814
18A391C7FCA8487EEAFFFEA21D227CA125>I<3AFFF80FFF80A23A1FC001FC006C486C5A
AC90B5FCA2EB8000AE486C487E3AFFF80FFF80A221227CA12A>104
D<EAFFF8A2EA1FC0EA0F80B3AAEA1FC0EAFFF8A20D227CA115>I<D8FFF8EB7FE0A2D81F
C014006C48137C15785DEC01C04A5A4AC7FC140E5C5C14F0EB81E01383EB87F0EB8FF8EB
9CFCEBB87CEBF03EEBE03F9038801F80140F6E7E816E7E14016E7E81157E157F486C1480
D8FFF8EBFFF0A224227CA12C>107 D<EAFFFCA2EA1FC06C5AB31560A415E0A2EC01C0A2
1407001F131FB6FCA21B227CA123>I<B46CEB01FF6D5B001F15F8000F15F0D80DE01306
A3D80CF0130CA201781318A36D1330A26D1360A36D13C0A39038078180A2903803C300A3
EB01E6A2EB00FCA3001E1378003FEC01F8D8FFC0EB0FFF143028227BA133>I<3AFF8001
FF8013C0000F9038007E006D133C6D1318120DEA0CF87F137E133E133FEB1F80130FEB07
C014E0EB03F0130114F8EB00FC147C143E143FEC1F98140FEC07D815F814031401A21400
001E1478003F1438EAFFC0151821227CA12A>I<EB07FCEB1FFF90387C07C03901F001F0
48486C7E4848137C48487F48C77EA2003EEC0F80A2007E15C0007C1407A200FC15E0A800
7C15C0007E140FA2003E1580003F141F6C15006D5B000F143E6C6C5B6C6C5B6C6C485A39
007C07C090383FFF80D907FCC7FC23247CA22C>I<B512F814FF391F801F80000FEB07C0
EC03E0EC01F0A215F8A515F0A2EC03E0EC07C0EC1F8090B5120014F80180C7FCAC487EEA
FFF8A21D227CA126>I<B512F014FE391F801F80000FEB07C06E7E81140181A45D14035D
4A5AEC1F80D9FFFEC7FC14F8EB803E806E7E6E7EA481A3166015F0A2261FC00313E03AFF
F801F9C0913800FF80C8EA3F0023237CA129>114 D<3801FC0C3807FF1C381E03FCEA38
0048137C143C48131CA2140CA27E14007E127CEA7FC0EA3FFC381FFF80000713E0000113
F038003FF8EB01FCEB007C143E141EA200C0130EA46C131C7E143800FC1378B413F038E3
FFC000C0130017247CA220>I<007FB61280A2397C01F00F0070140300601401A200E015
C000C01400A400001500B3A2497E90387FFFC0A222227DA129>I<D8FFF8EB1FF8A2D81F
E0EB07E06C48148000071500A26C6C1306A26D130E0001140CA26C6C5BA2017C5BA2017E
1370013E1360A26D5BA21481010F5BA2D907C3C7FCA2EB03E6A3EB01FCA26D5AA31470A2
25237EA12A>118 D<D8FFF8EB1FF8A2D81FE0EB0FE00007EC078016006C6C130E000114
0C6D5B6C6C1338017C1330017E5B6D13E06D5BEC8180EB0FC3010790C7FC14E6EB03FE6D
5A5C1300AB130190380FFF80A225227EA12A>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmr10 10 76
/Fq 76 123 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CF
C00380903C1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E
5A03030203C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E26
7FFFE0B500C1B51280A3413B7FBA45>14 D<133C137EA213FE1201EA03FC13F0EA07E0EA
0FC0EA1F80EA1E005A5A5A12C00F0F6FB92A>19 D<B612F8A31D037AB02A>22
D<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8121C127FEAFF80A5EA7F00121C09
3C79BB17>33 D<030C1303031E497EA2033E130FA2033C91C7FCA2037C5BA20378131EA3
03F8133EA24B133CA20201147CA24B1378A2020314F8A24B5BA302071301007FB91280BA
12C0A26C1880C7271F0007C0C7FC021E5CA3023E130FA2023C91C8FCA2027C5BA2027813
1EA302F8133E007FB91280BA12C0A26C1880280003E000F8C8FC4A5BA301071301A20280
5BA2010F1303A202005BA2491307A2011E5CA3013E130FA2013C91C9FCA2017C5BA20178
131EA20130130C3A4A7BB945>35 D<121C127FEAFF80A213C0A3127F121C1200A4120113
80A2120313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB07
00130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB212
7CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01
C0EB00E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2
137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B
131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20
>I<EB0380497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE0
3903FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC3
87F8397F8383FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247BBD2A>I<15
301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>I<121C12
7FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19
798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<EB
03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2
481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F14
3EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>
I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E
126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A
92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A00
0EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF039
03C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A
5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A215
3F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E39
0F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8
A2140114031407A2140F141F141B14331473146314C313011483EB030313071306130C13
1C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C7
3803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5
FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E09038
8003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E00060
5C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB
1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F
49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB
01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C015
1FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A
3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A3
16C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C
140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8
FC131E233B7BB82A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F
00121C092479A317>58 D<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A412
7F121D1201A412031300A25A1206A2120E5A121812385A1260093479A317>I<007FB812
F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61
D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC18
0FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106
810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D8
0FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC0
6C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500
FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C
13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF8001
80020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD9
3F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A2485A1703123F5B
007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C
6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF
803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>I<B712C016F816FE00019039
8001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0
A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE
0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C
90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503150F91B5
FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F17
3F177F486D903807FF00B9FCA333397DB839>I<B812F8A30001903880001F6C90C71201
EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3
EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020F
EBF001023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F49
48143F49C8121F485A4848150F48481507A248481503A2485A1701123F5B007F1600A448
481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C
6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFF
FC00020F01F0130002001380383D7CBA41>I<B648B512FEA30001902680000313006C90
C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3
C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<B649B5FCA3000101809038007FF0
6C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030E
C9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E
6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F8484486D497FB6011FEBFF
80A339397DB841>75 D<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770
A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>I<B5913807FFFE8080C6
9238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7E
A26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED
03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E
486C153E487ED80FFC151EB500C0140EA2170637397DB83E>78 D<EC03FF021F13E09138
FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E
7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8
491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717
806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D9
03F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE
000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2
EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA3
30397DB839>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED9
3F80EB07F049C76C7E01FE6E7E48486E7EA24848157F0007178049153F000F17C049151F
001F17E0A24848ED0FF0A3007F17F8A2491507A200FF17FCAC007F17F8A26D150FA2003F
17F0A26C6CED1FE0A36C6CED3FC00007027C14804AB4FC3C03F80383807F003B01FC0701
C0FEEC0E002600FE0CEBE1FC017FEC63F8D93F8CEB77F0D91FCCEB3FE0D907EE14806DB4
49C7FC0100D981FC130CEC1FFF0203131C91C7001E131C161F183CEF807CEFC0F8EE0FFF
A318F08218E07013C07013809338007E00364B7BBA41>I<B612FEEDFFE016F800019038
8007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004
FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F001
80A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B
7DB83D>I<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F484813
3F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F8
6CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC
007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15
C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D
7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770
A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>
I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80
171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F80
7E91381FFFF8020713E09138007F80373B7DB83E>I<B5D8FC07B5D8F001B5FCA3000790
2780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F
017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C
011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA2
03805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215
F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80
503B7EB855>87 D<B500FE91383FFFE0A3000301E0913807FE00C649EC03F0017F6F5A60
6D6C5D6D6C140395C7FC6D6C1406A26D6C5C6D6C141C17186D6C143817306D6D5B6E6C13
E05F91383FE0015F91381FF003DA0FF890C8FC1606913807FC0E160C913803FE1C913801
FF185E6E13B016E0157F6F5AB3A24B7E023FB512C0A33B397FB83E>89
D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91 D<EAFFF8A4EA0078B3B3B3B3
A3EAFFF8A40D537FBD17>93 D<EA01801203EA0700120E5A12181238123012701260A212
E05AA412CEEAFF8013C0A3127FA2EA3F80EA0E000A197AB917>96
D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5A
C8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA314
01A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007
C026277DA52A>I<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F80
9039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FE
A216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800
FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F839
07E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA2
6C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF
00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F90
38F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E
127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F9038
1FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0
D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA512
7EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E
03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F879038
3F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A3
1C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E0
07C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48
C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C0
3A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E000
3F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>
I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE048
7EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB
01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E
00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012
FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438
147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F81
1680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD
487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E
903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A249
5CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FF
EB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C49
7EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F8484813
7C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A900
7E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13
F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1
E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FE
A3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038
F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381F
FE0190387E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F
48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF3900
7E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FF
EB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A4
5BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00
707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB
007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FF
F038C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2
D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>
I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000
EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B53880
3FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E01
7E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FC
A214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF8
6C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E90
38EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC600
1360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A
130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC01
7E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E
8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D
7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF0
6C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070
010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214
701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357E
A32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC
3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A
485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA3
25>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmcsc10 10 32
/Fr 32 119 df<B512FCA516057E941F>45 D<EB03FE90381FFFC090383E03E09038F800
F84848137C48487F48487F497F000F1580001F15C090C71207A24815E0A3007EEC03F0A5
00FE15F8B2007E15F0A4007F14076C15E0A46C15C06D130F000F15806C6CEB1F00A26C6C
133E6C6C5B6C6C5B90383E03E06DB45AD903FEC7FC253A7CB72E>48
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8EB7FF0B612F8A31D3877B72E>I<
EB0FF8EB3FFF90B512C03903E01FF039078007FC390E0001FE486D7E5A0030EC7F800070
EC3FC0126012FCB4EC1FE07FA56CC7FC121CC8FCED3FC0A3ED7F8016005D5D4A5A4A5A4A
5A5D4A5A4A5A4AC7FC147E14F8495A495A495A495A91C71260131E13384914E04914C048
5A485A48C7120148B6FC5A5A481580B7FCA323387BB72E>I<EB07F890383FFF8090B512
E03903F00FF039078003FC48486C7E001E130081EA3FC06DEB7F80A56C5A6C5AC8EAFF00
A34A5A5D4A5A5D4A5A4A5A027FC7FCEB3FF814FF9038000FE06E7EEC03FC6E7E6E7E1680
157F16C0A2153F16E0A2121EEA7F80487EA4ED7FC05B007F1580007EC712FF007015006C
495A001E495A6C6C485A3907F00FF00001B512C06C6C90C7FCEB0FF8233A7BB72E>I<15
1C153CA2157C15FCA214011403A21407140F141D141914311471146114C11301EB038114
011307130E130C131813381330136013E0EA01C01380EA03005A12065A121C5A12301270
5AB712FEA3C73801FC00AB4A7E49B512FCA327397DB82E>I<B712F816FF17C000019039
80001FF06C90C7EA07FC707E707E701380177F18C0173F18E0A618C0A2177F1880EFFF00
4C5A4C5AEE0FF8EE3FE091B6128094C7FC91C7EA3FE0EE07F8EE01FE707EEF7F80EF3FC0
18E0171F18F0170F18F8A718F0171F18E0173FEF7FC0EFFF804C1300EE07FE486DEB1FFC
B812F017C04CC7FC35397CB840>66 D<DB7FC01330912607FFF81370023F13FE913AFFC0
1F80F0903A03FE0003E1D907F8EB00F3D91FE0147B4948143F4948141F49C8120F484815
0748481503A24848150148481500A2485A1870123F5B1830127FA349160012FFAB127F7F
1830A2123FA27F001F177018606C7E18E06C6C16C06C6C150118806C6C15036C6CED0700
6D6C5C6D6C141E6D6C5CD907F85CD903FEEB01E0903A00FFC00FC0023FB5C7FC020713FC
9138007FE0343D7ABA41>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397CB822>
73 D<B5933801FFFE6E5DA2000119002600DFC0ED06FEA2D9CFE0150CA3D9C7F01518A2
D9C3F81530A3D9C1FC1560A2D9C0FE15C0A3027FEC0180A26E6CEB0300A36E6C1306A26E
6C5BA26E6C5BA36E6C5BA26E6C5BA36E6C5BA292387F0180A3DB3F83C7FCA2ED1FC6A3ED
0FECA2ED07F8A3486C6D5A487ED80FFC6D48497EB500C092B512FEA26F5A47397BB852>
77 D<B7FC16F016FE000190398001FF806C90C7EA3FE0EE0FF0707E707E707EA2838284
A695C7FC5E5F5F1603EE07F04C5AEE3F80DB01FEC8FC91B512F816E091380003FCED00FE
EE7F80707E707E707EA2160783A583A61930A28316031970486D6D6C1360B66D14E09438
7F81C094383FC380CA380FFF00EF01FC3C3B7CB842>82 D<003FB812FCA3D9C001EB8003
90C790C7FC007C173E0078171E0070170EA300601706A400E01707481703A4C81500B3B0
020313C0010FB612F0A338397CB841>84 D<1407A24A7EA34A7EA3EC37E0A2EC77F01463
A2ECC1F8A201017F1480A2903803007EA301067FA2010E80010C131FA2496D7EA2013FB5
7EA29038300007496D7EA3496D7EA200018149130012036D801207D81FE0903801FF80D8
FFF8010F13F8A22D2C7DAB33>97 D<B612F015FE3A07F8003F806C48EB0FC0ED07E0ED03
F016F8150116FCA516F8A2ED03F01507ED0FE0ED3F80913801FF0090B512F815FF9039F0
001FC0ED07E0ED03F0ED01F816FC150016FEA616FC1501A2ED03F8ED07F0ED0FE0486CEB
3FC0B7120015F8272B7CAA30>I<91383FC006903901FFF80E90390FE03E1E90381F0007
017EEB03BE01F8EB01FE484813004848147E0007153E485A001F151E5B003F150E90C8FC
5A1606A212FE1600AA007F1506A37E6D140E001F150C7F000F151C6C6C1418000315386C
6C14706C6C14E0017EEB01C0011FEB078090390FE03E00903801FFF89038003FC0272D7B
AB31>I<B612F015FE3907F8007F6C48EB0FC0ED03E06F7E6F7E167C167E82A2EE1F80A2
17C0160FA317E0AA17C0A3EE1F80A217005E163E5E16FC4B5A4B5AED0FC0486CEB7F80B6
00FEC7FC15F02B2B7CAA34>I<B712E0A23907F8000F6C481303ED00F01670A21630A416
18A215C01600A31401A2140790B5FCA2EBF0071401A21400A21606A21500A2160CA4161C
A2163C167C16F8486C1307B7FCA2272B7CAA2E>I<B712C0A23907F8001F6C481303ED01
E01500A21660A41630A215C01600A31401A2140790B5FCA2EBF0071401A21400A492C7FC
AB487EB512E0A2242B7CAA2C>I<91383FE003903901FFF807903907E01E0F90391F0007
8F017EEB01DF496DB4FC484880484880484880485A001F815B003F8190C8FC5A82A212FE
93C7FCA892383FFFF8A2007F02001380EE3F00A27E7F121F7F120F6C7E6C7E6C6C5C6C7E
017E5C011FEB01CF903907E00F87903901FFFE039026003FF0C7FC2D2D7BAB35>I<B539
C07FFFE0A23B07F80003FC006C486D5AB190B6FCA29038F00001B2486C497EB539C07FFF
E0A22B2B7CAA33>I<B512C0A23807F8006C5AB3B3487EB512C0A2122B7CAA19>I<B500C0
EBFFF8A2D807F8C7EA7FC06C481500167C167816E04B5A4B5A4BC7FC150E5D5D15F0EC01
C04A5A4AC8FC5C4A7E4A7E4A7EEBF1E79038F387F09038F703F89038FE01FC13FC496C7E
49137F6F7EA26F7E6F7E1507826F7E6F7EA26F7E82EE7F80486CECFFC0B5D8C00313FCA2
2E2B7CAA35>107 D<B512E0A2D807F8C8FC6C5AB3A61660A416C0A31501A21503A21507
ED1F80486C13FFB7FCA2232B7CAA2B>I<D8FFF0ED3FFC6D157F0007178000031700017C
15DFA26DEC019FA36DEC031FA26D6C1306A36D6C130CA26D6C1318A26D6C1330A36D6C13
60A2027C13C0A391383E0180A291381F0300A3EC0F86A2EC07CCA3EC03F8A2486C6C5AA2
D81FE0ED3F803CFFFC00E007FFFCA2362B7CAA3E>I<D8FFF0903807FFE07F0007020013
006C6C143C7F017F14187F806D7E130F806D7E6D7EA26D7E6D7E147E147FEC3F80141F15
C0EC0FE0EC07F0140315F8EC01FC140015FE157FED3F98151F16D8ED0FF81507A2150315
01A2486C13001678D81FE01438EAFFFC16182B2B7CAA33>I<EC7FC0903803FFF890380F
C07E90393F001F80017CEB07C04848EB03F048486D7E4913004848147C000F157E484880
A248C8EA1F80A24816C0A2007E150FA200FE16E0AA007FED1FC0A36C16806D143F001F16
00A26C6C147E6C6C5CA26C6C495A6C6C495AD8007CEB07C0013FEB1F8090260FC07EC7FC
903803FFF89038007FC02B2D7BAB35>I<B612E015FC3907F800FE6C48EB1F80ED0FC0ED
07E016F01503A216F8A516F0A2150716E0ED0FC0ED1F80EDFE0090B55A15E001F0C8FCB1
487EB512C0A2252B7CAA2E>I<B67E15F03907F800FE6C48133FED0FC06F7EA26F7E82A6
5E4B5AA24B5A033FC7FC15FE90B512F05D9038F001F8EC007E816F7EA26F7EA582A41718
16F015071738486C903803F830B5D8C00113709238007FE0C9EA1F802D2C7CAA32>114
D<017F13603901FFE0E0380780F9380E001F48130748130312780070130100F01300A315
607EA26C14007E127F13C0EA3FFEEBFFE06C13F8000713FE6C7FC61480010F13C01300EC
0FE01407EC03F01401A212C01400A37E15E06C1301A26CEB03C06CEB0780B4EB0F0038F3
E01E38E0FFF838C01FE01C2D7BAB26>I<007FB712C0A23A7E003FC00F007890381F8003
007015011600126000E016E0A2481660A5C71500B3A8EC7FE0011FB57EA22B2B7DAA31>
I<B539C007FFE0A2D807F8C713006C48143CA21618B3A916386C6C1430A2000015706D5C
017C5C6D13016D495A90260F800FC7FC903803E03C903800FFF8EC3FC02B2C7CAA33>I<
B56CEB3FFEA2D80FFCC7EA0FF06C48EC07E00003ED03C01780000116006D5C00001506A2
017E5CA2017F141C6D141880011F5CA26D6C5BA28001075CA26D6C485AA2ECF803010191
C7FCA2903800FC06A2ECFE0EEC7E0C147F6E5AA2EC1FB0A215F06E5AA26E5AA36E5AA22F
2C7EAA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmbx10 10 37
/Fs 37 122 df<B61280A819087F9620>45 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0
A2EA3FE0EA0F800D0D798C1B>I<141E143E14FE1307133FB5FCA313CFEA000FB3B3A600
7FB61280A4213779B630>49 D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F
800F1380263F000313C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8
FCEDFFF0A216E05C16C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849
481378495A495A495A013EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA4
25377BB630>I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C
13E0EA0FF001FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3F
F090380FFFC092C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA2
16FEEA1FC0487E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C026
0FFC0713806CB61200000114FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA215
1F153F157F15FFA25C5C5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B
485A485A1207485A90C7FC121E5A127C5AB81280A4C70001EBC000AA0103B61280A42937
7DB630>I<001C15C0D81F80130701F8137F90B61280A216005D5D15F05D15804AC7FC14
F090C9FCA8EB07FE90383FFFE090B512F89038FC07FC9038E003FFD98001138090C713C0
120EC813E0157F16F0A216F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713
E0007C15C06C5B6C491380D9C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8
C7FC25387BB630>I<EC0FF8ECFFFE0103EBFF8090390FF80FC090393FE003E090397FC0
01F09038FF000F48EC1FF84848133F485A120F5B121FA2003FEC1FF0ED0FE04990C7FC12
7FA21408EC7FF039FFF1FFFC01F313FFD9F78013809039FF007FC049EB3FE04914F0ED1F
F85B16FCA34914FEA5127FA5123F16FCA26C7E16F8000F143F6C6C14F0ED7FE06C6C14C0
3A01FF81FF806C90B51200013F13FC010F13F00101138027387CB630>I<123C123EEA3F
E090B71280A41700485D5E5E5EA25E007CC7EA0FC000784A5A4BC7FC00F8147E48147C15
FC4A5A4A5AC7485A5D140F4A5A143F92C8FC5C147E14FE1301A2495AA31307A2130F5CA2
131FA5133FA96D5A6D5A6D5A293A7BB830>I<49B47E010F13F0013F13FC9038FE01FF3A
01F8007F804848EB3FC04848EB1FE0150F485AED07F0121FA27FA27F7F01FEEB0FE0EBFF
809138E01FC06CEBF03F02FC13809138FF7F006C14FC6C5C7E6C14FE6D7F6D14C04914E0
48B612F0EA07F848486C13F8261FE01F13FC383FC007EB8001007F6D13FE90C7123F4814
0F48140715031501A21500A216FC7E6C14016D14F86C6CEB03F06D13076C6CEB0FE0D80F
FEEB7FC00003B61200C614FC013F13F00103138027387CB630>I<EB03FF011F13E0017F
13F83901FF03FE4848C67E4848EB7F80484814C0001FEC3FE0123F49EB1FF0127F16F8A2
12FF16FCA516FEA5007F143FA3123F157F6C7E000F14FF6C6C5A3903FE03DF6CB5129F6C
6C131FD91FFC13FCEB00201400A216F8D80FE0133F487E486C14F0A216E0157F16C0EDFF
80495A6C4848130090388007FE390FE01FF86CB55A6C14C0C691C7FCEB1FF027387CB630
>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB
1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A18
0F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C178018
0F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0FE06D01
FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945>67
D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FC
A431397DB839>76 D<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8
EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017
FC17E002F8C9FCB3A4B612FCA438397DB841>80 D<EDFFF8020FEBFF80027F14F0903A01
FFE03FFC010790380007FFD91FFC010113C049486D7FD97FE0EC3FF049486E7E48834849
6E7E4890C86C7EA248486F1380A2001F18C04981003F18E0A3007F18F04981A300FF18F8
AC007F18F0A36D5D003F18E0A36C6C4B13C0A2000FDA1FC014806C6C90267FF0071300ED
FFF86C903A81F07C0FFE6C903AC3C01E1FFC6CDA800F5BD97FE3ECBFF0D93FF36DB45AD9
1FFF5D010701C091C7FC01019038F01FFC6D6CB500F01308020F6E131C0200EBF9FC9226
0001FE133C9438FF80FC18FF8219F8A28319F0A27113E0A27113C0711380711300EF01FC
3E4A7BB948>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA271
7EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0F
FF707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F13039439
0FFF87C071EBFF8005011400CBEA1FFC443A7DB848>I<003FB91280A4D9F800EBF003D8
7FC09238007FC049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892
C7FCB3AE010FB7FCA43B387DB742>84 D<EB3FFE0003B512E0000F14F8391FF00FFE003F
EB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F
00071380380FFE00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFF
C0390FFFFE1F0003EBF80F39003FE0032A257DA42E>97 D<903801FFC0010F13FC017F13
FFD9FF8013802603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7
FC12FFA9127FA27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E00
6DB45A010F13F00101138023257DA42A>99 D<EE7F80ED7FFFA4150381AF903801FF8101
0F13F1013F13FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312
FFAA127FA27F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF901
1F13E1010313012F3A7DB935>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE00
7F804848133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301
E0C8FCA4127FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC0
6DB51200010F13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F
8090383FE0FFD9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390
C8FCB3ABB512FEA4223A7DB91D>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE
91381F03FFDA3C01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7D
B935>104 D<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA41207
7EB3A9B512F8A4153B7DBA1B>I<141FEC7FC0ECFFE0A24913F0A56D13E0A2EC7FC0EC1F
0091C7FCA9EC0FF0EB0FFFA4EB007F143FB3B0121FEA3F80EA7FC0EAFFE0EC7FE0A215C0
14FF6C481380903883FE006CB45A000F13F0000113801C4B86BA1D>I<13FFB5FCA41207
7EB3B3ACB512FCA4163A7DB91B>108 D<01FED97FE0EB0FFC00FF902601FFFC90383FFF
80020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F000749DACF007F000349
14DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451
>I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C011380000713780003497E
6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F8
017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81
A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6C
B45A6C6CB5C7FC011F13FC010113C029257DA430>I<9039FF01FF80B5000F13F0023F13
FC9138FE07FFDAF00113800007496C13C06C0180EB7FE091C713F0EE3FF8A2EE1FFCA3EE
0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF00313809139FC07FE0091
383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435>I<9038FE03F000FFEB
0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC
91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFEF8000F13FF381FC00F
383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C
14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E7E157C6C14FC6C14
F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>I<130FA55BA45BA25B
5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E09038
3FFFC06D1380903803FE001D357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A3
5DA25DA26C5C6E4813E06CD9C03E13FF90387FFFFC011F13F00103138030257DA435>I<
B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF0
01013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15
FC6D5BA36E5AA26E5AA26E5AA26E5AA22D257EA432>I<B500F1B538803FFFA43D07FE00
0FF80003E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E485C017FED
801E5D90273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0
F0A29139FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292
C7FC6E5CA2023E147C023C143C40257EA445>I<B539F001FFF8A4000390C7EA3F00161E
6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F
5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA2
92C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80
D83FFFC9FCEA1FFCEA07F02D357EA432>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 326 556 a Fs(T)-8 b(autly)33 b(foliated)e(3-manifolds)e(with)j
(no)f(R-co)m(v)m(ered)i(foliations)1112 878 y Fr(Mark)d(Brittenham)1081
1035 y Fq(Univ)n(ersit)n(y)d(of)g(Nebrask)-5 b(a)199
1247 y Fp(Abstra)o(ct.)38 b Fo(W)-6 b(e)27 b(pro)n(vide)g(a)f(family)f
(of)h(examples)g(of)g(graph)g(manifolds)f(whic)n(h)i(admit)e(taut)199
1330 y(foliations,)c(but)i(no)f Fn(R)p Fo(-co)n(v)n(ered)g(foliations.)
30 b(W)-6 b(e)22 b(also)g(sho)n(w)f(that,)i(with)f(v)n(ery)g(few)f
(exceptions,)199 1413 y Fn(R)p Fo(-co)n(v)n(ered)j(foliations)g(are)f
(taut.)1453 1745 y Fm(x)p Fr(0)1212 1844 y(Intr)n(oduction)100
1994 y Fq(A)37 b(foliation)h Fm(F)45 b Fq(of)38 b(a)f(closed)g
(3-manifold)f Fl(M)46 b Fq(can)38 b(b)r(e)f(lifted)i(to)e(a)g
(foliation)2684 1973 y Fk(e)2663 1994 y Fm(F)46 b Fq(of)37
b(the)0 2093 y(univ)n(ersal)18 b(co)n(v)n(er)559 2072
y Fk(f)549 2093 y Fl(M)28 b Fq(of)19 b Fl(M)9 b Fq(;)22
b(if)d(the)h(foliation)e Fm(F)27 b Fq(has)19 b(no)g(Reeb)g(comp)r(onen)
n(ts,)h(the)g(lea)n(v)n(es)d(of)j(this)0 2201 y(lifted)j(foliation)e
(are)g(all)h(planes,)g(and)g(P)n(almeira)e([P)n(a])g(has)i(sho)n(wn)f
(that)2279 2180 y Fk(f)2269 2201 y Fl(M)30 b Fq(is)22
b(homeomorphic)0 2311 y(to)38 b Fl(R)176 2281 y Fj(3)213
2311 y Fq(.)68 b(P)n(almeira)36 b(also)h(sho)n(w)n(ed)g(that)1349
2290 y Fk(e)1329 2311 y Fm(F)46 b Fq(is)38 b(homeomorphic)e(to)i(\(a)g
(foliation)g(of)g Fl(R)2826 2281 y Fj(2)2901 2311 y Fq(b)n(y)0
2421 y(lines\))p Fm(\002)p Fl(R)q Fq(.)k(The)29 b(space)g(of)g(lea)n(v)
n(es)f(of)1236 2400 y Fk(e)1216 2421 y Fm(F)8 b Fq(,)30
b(the)g(quotien)n(t)f(space)g(obtained)g(b)n(y)g(crushing)g(eac)n(h)0
2521 y(leaf)h(to)g(a)g(p)r(oin)n(t,)g(is)g(homeomorphic)f(to)h(the)g
(space)g(of)g(lea)n(v)n(es)e(of)i(the)h(foliation)e(of)h
Fl(R)2764 2491 y Fj(2)2801 2521 y Fq(,)h(and)0 2620 y(is)c(a)h(\(t)n
(ypically)f(non-Hausdo\013)6 b(\))28 b(simply-connected)f(1-manifold.)
100 2720 y(If)32 b(the)f(space)g(of)h(lea)n(v)n(es)d(is)j(Hausdor\013)f
(\(and)g(therefore)g(homeomorphic)f(to)h Fs(R)p Fq(\),)i(w)n(e)e(sa)n
(y)0 2820 y(that)19 b(the)g(foliation)g Fm(F)26 b Fq(is)19
b Fs(R)p Fi(-c)l(over)l(e)l(d)p Fq(.)34 b(Examples)18
b(of)h Fs(R)p Fq(-co)n(v)n(ered)d(foliations)i(ab)r(ound,)j(starting)0
2919 y(with)i(surface)e(bundles)i(o)n(v)n(er)e(the)h(circle;)i(the)f
(foliation)f(b)n(y)g(\014b)r(ers)g(is)g Fs(R)p Fq(-co)n(v)n(ered.)33
b(Th)n(urston's)0 3019 y(notion)25 b(of)h(`slitherings')e([Th])i(also)f
(pro)n(vide)f(a)h(large)f(collection)h(of)h(examples.)35
b(A)26 b(great)e(deal)0 3119 y(has)h(b)r(een)g(learned)g(in)g(recen)n
(t)g(y)n(ears)e(ab)r(out)j Fs(R)p Fq(-co)n(v)n(ered)c(foliations)j(and)
g(the)h(manifolds)f(that)0 3218 y(supp)r(ort)k(them)g(\(see,)h(e.g.,)f
([Ba],[Ca],[F)-7 b(e]\),)29 b(esp)r(ecially)f(in)h(the)h(case)e(when)h
(the)g(underlying)0 3318 y(manifold)f Fl(M)36 b Fq(con)n(tains)27
b(no)g(incompressible)f(tori.)100 3417 y(The)e(purp)r(ose)g(of)g(this)h
(note)f(is)g(to)g(pro)n(vide)g(examples)f(of)h(3-manifolds)g(whic)n(h)g
(admit)h(taut)0 3517 y(foliations,)32 b(but)h(whic)n(h)f(do)g(not)g
(admit)g(an)n(y)f Fs(R)p Fq(-co)n(v)n(ered)f(foliations.)49
b(All)32 b(of)g(our)g(examples)0 3617 y(are)d(dra)n(wn)h(from)f(graph)h
(manifolds,)g(and)g(so)g(all)g(con)n(tain)f(an)h(incompressible)g
(torus,)g(and,)0 3716 y(in)39 b(fact,)i(a)d(separating)f(one.)69
b(The)39 b(tec)n(hnology)e(do)r(es)h(not)g(exist)h(at)f(presen)n(t)g
(to)g(iden)n(tify)0 3816 y(examples)22 b(whic)n(h)g(are)g(atoroidal,)f
(and)i(it)f(is)h(p)r(erhaps)f(not)g(clear)g(that)g(suc)n(h)g(examples)g
(should)0 3916 y(b)r(e)e(exp)r(ected)h(to)f(exist.)34
b(That)20 b(w)n(e)f(can)h(\014nd)h(the)f(examples)f(w)n(e)h(seek)f
(among)g(graph)g(manifolds)0 4015 y(relies)h(on)h(t)n(w)n(o)f(facts:)33
b(\(a\))21 b(w)n(e)f(ha)n(v)n(e)g(a)g(go)r(o)r(d)h(understanding)f
([BR])h(of)f(ho)n(w)h(taut)g(and)f(Reebless)0 4115 y(foliations)28
b(can)g(meet)h(an)f(incompressible)g(torus,)g(and)g(\(b\))h(w)n(e)f
(understand)h([Br1],[Cl],[Na])0 4214 y(whic)n(h)22 b(Seifert-\014b)r
(ered)g(spaces)f(can)h(con)n(tain)g(taut)g(or)f(Reebless)h(foliations.)
35 b(These)22 b(t)n(w)n(o)f(facts)0 4314 y(ha)n(v)n(e)33
b(b)r(een)h(used)h(previously)d([BNR])j(to)f(\014nd)g(graph)f
(manifolds)h(whic)n(h)g(admit)h(foliations)0 4414 y(with)23
b(v)-5 b(arious)21 b(prop)r(erties,)h(but)h(no)f Fi(\\str)l(onger")f
Fq(prop)r(erties;)i(the)g(examples)f(w)n(e)f(pro)n(vide)g(here)0
4513 y(are)k(in)i(fact)f(the)h(exact)f(same)g(examples)g(used)g(in)g
([BNR])h(to)f(illustrate)g(its)h(results.)36 b(W)-7 b(e)27
b(will)0 4613 y(simply)h(lo)r(ok)f(at)g(them)h(from)f(a)h(somewhat)f
(di\013eren)n(t)g(p)r(ersp)r(ectiv)n(e.)p 0 4689 499
4 v 100 4777 a Fh(Key)d(wor)l(ds)k(and)e(phr)l(ases.)38
b Fo(taut)25 b(foliation,)e(graph)h(manifold,)e Fn(R)p
Fo(-co)n(v)n(ered.)100 4860 y(Researc)n(h)i(supp)r(orted)h(in)e(part)h
(b)n(y)g(NSF)g(gran)n(t)g(#)f(DMS)p Fg(\000)p Fo(9704811)2305
5031 y(T)n(yp)r(eset)h(b)n(y)g Fg(A)2715 5045 y(M)2791
5031 y(S)p Fo(-T)2897 5045 y(E)2936 5031 y(X)1477 5131
y(1)p eop
%%Page: 2 2
2 1 bop 0 42 a Fo(2)1187 b(Mark)24 b(Brittenham)100 241
y Fq(This)31 b(pap)r(er)f(can,)i(in)f(fact,)h(b)r(e)f(though)n(t)g(of)g
(as)f(a)h(further)f(illustration)h(of)g(this)g(`y)n(ou)f(can)0
340 y(get)35 b(this)g(m)n(uc)n(h,)i(but)f(no)e(more')h(p)r(oin)n(t)g
(of)g(view)g(to)n(w)n(ards)e(foliating)i(manifolds.)59
b(Namely)-7 b(,)0 440 y(y)n(ou)31 b(can)f(get)i(taut,)g(but)g(not)f
Fs(R)p Fq(-co)n(v)n(ered.)46 b Fs(R)p Fq(-co)n(v)n(ered)29
b(is,)j(it)f(turns)h(out,)g(almost)f(\(but)h(not)0 540
y(quite\))c(alw)n(a)n(ys)d(a)i(stronger)e(condition:)37
b(in)27 b(all)g(but)h(a)f(v)n(ery)f(small)g(handful)i(of)f(instances,)g
(an)0 639 y Fs(R)p Fq(-co)n(v)n(ered)21 b(foliation)j(m)n(ust)f(b)r(e)i
(taut,)f(as)g(w)n(e)f(sho)n(w)g(in)h(the)g(next)g(section.)35
b(This)24 b(result)f(seems)0 739 y(to)28 b(ha)n(v)n(e)g(b)r(een)h
(implicit)g(in)g(m)n(uc)n(h)f(of)h(the)f(literature)g(on)g
Fs(R)p Fq(-co)n(v)n(ered)e(foliations;)j(a)f(di\013eren)n(t)0
839 y(pro)r(of)f(of)h(this)f(result,)h(along)e(somewhat)h(di\013eren)n
(t)h(lines,)f(can)h(b)r(e)g(found)g(in)f([GS].)1453 1036
y Fm(x)p Fr(1)838 1135 y Fs(R)p Fr(-co)n(vered)k(almost)f(implies)h(t)
-6 b(a)n(ut)100 1285 y Fq(In)20 b(this)g(section)f(w)n(e)g(sho)n(w)g
(that)h(in)g(all)g(but)g(a)f(v)n(ery)g(few)h(instances,)h(an)e
Fs(R)p Fq(-co)n(v)n(ered)e(foliation)0 1384 y(m)n(ust)33
b(b)r(e)g(taut.)53 b(W)-7 b(e)33 b(divide)h(the)f(pro)r(of)f(in)n(to)h
(t)n(w)n(o)f(parts;)j(\014rst)d(w)n(e)h(sho)n(w)f(that)h(a)f(Reebless)0
1484 y Fs(R)p Fq(-co)n(v)n(ered)25 b(foliation)i(is)h(taut,)g(and)f
(then)h(describ)r(e)f(the)h(manifolds)g(that)g(admit)f
Fs(R)p Fq(-co)n(v)n(ered)0 1584 y(foliations)g(with)h(Reeb)g(comp)r
(onen)n(ts.)100 1683 y(Recall)c(that)h(a)g Fi(R)l(e)l(eb)h(c)l(omp)l
(onent)f Fq(is)g(a)f(solid)h(torus)f(whose)g(in)n(terior)f(is)i
(foliated)g(b)n(y)f(planes)0 1783 y(transv)n(erse)j(to)h(the)h(core)f
(of)h(the)g(solid)f(torus,)h(eac)n(h)f(leaf)h(limiting)g(on)f(the)i(b)r
(oundary)e(torus,)0 1883 y(whic)n(h)41 b(is)g(also)e(a)i(leaf.)76
b(\(There)41 b(is)g(a)f(non-orien)n(table)f(v)n(ersion)h(of)h(a)f(Reeb)
h(comp)r(onen)n(t,)0 1982 y(foliating)18 b(a)g(solid)g(Klein)g(b)r
(ottle,)j(whic)n(h)d(w)n(e)h(will)f(largely)f(ignore)g(in)i(this)g
(discussion.)33 b(It)18 b(can)g(b)r(e)0 2082 y(dealt)23
b(with)g(b)n(y)f(taking)g(a)g(suitable)h(double)f(co)n(v)n(er)f(of)h
(our)g(3-manifold.\))35 b(W)-7 b(e)23 b(follo)n(w)f(standard)0
2181 y(practice)j(and)h(refer)f(to)g(b)r(oth)h(the)g(solid)g(torus)f
(and)g(its)h(foliation)f(as)g(a)h(Reeb)g(comp)r(onen)n(t.)36
b(A)0 2281 y(foliation)30 b(that)g(has)f(no)h(Reeb)g(comp)r(onen)n(ts)f
(is)h(called)g Fi(R)l(e)l(ebless)p Fq(.)44 b(A)30 b(foliation)g(is)g
Fi(taut)f Fq(if)h(for)0 2381 y(ev)n(ery)24 b(leaf)i(there)f(is)h(a)f
(lo)r(op)h(transv)n(erse)d(to)j(the)g(foliation)f(whic)n(h)g(passes)g
(through)g(that)h(leaf.)0 2480 y(T)-7 b(aut)28 b(foliations)f(are)f
(Reebless.)0 2629 y Fs(Lemma)i(1.)47 b Fi(If)28 b(a)h(close)l(d,)h(irr)
l(e)l(ducible)g(3-manifold)g Fl(M)37 b Fi(admits)29 b(a)g(R)l(e)l
(ebless,)g Fs(R)p Fi(-c)l(over)l(e)l(d)f(fo-)0 2728 y(liation)g
Fm(F)34 b Fi(c)l(ontaining)27 b(a)g(c)l(omp)l(act)g(le)l(af)h
Fl(F)12 b Fi(,)27 b(then)g(every)g(c)l(omp)l(onent)g(of)g
Fl(M)9 b Fm(j)p Fl(F)j Fi(,)27 b(the)g(manifold)0 2828
y(obtaine)l(d)35 b(by)f(splitting)f Fl(M)43 b Fi(op)l(en)33
b(along)i Fl(F)12 b Fi(,)35 b(is)e(an)h Fl(I)7 b Fi(-bund)t(le)34
b(over)g(a)g(c)l(omp)l(act)g(surfac)l(e.)50 b(In)0 2928
y(p)l(articular,)34 b Fl(M)41 b Fi(is)33 b(either)g(a)g(surfac)l(e)g
(bund)t(le)g(over)g(the)f(cir)l(cle)h(with)g(\014b)l(er)f
Fl(F)12 b Fi(,)34 b(or)e(the)h(union)0 3027 y(of)e(two)e(twiste)l(d)h
Fl(I)7 b Fi(-bund)t(les)30 b(glue)l(d)g(along)h(their)f(c)l(ommon)g(b)l
(oundary)h Fl(F)12 b Fi(.)100 3176 y(Pr)l(o)l(of)p Fq(:)57
b(Because)36 b Fm(F)46 b Fq(is)37 b(Reebless,)i(the)f(surface)e
Fl(F)50 b Fq(is)37 b Fl(\031)1952 3188 y Fj(1)1990 3176
y Fq(-injectiv)n(e)g([No],)i(and)f(so)e(lifts)0 3288
y(to)h(a)f(collection)g(of)h(planes)g(in)1051 3267 y
Fk(f)1041 3288 y Fl(M)8 b Fq(.)65 b(Their)37 b(image)f
Fl(C)43 b Fq(in)37 b(the)h(space)e(of)h(lea)n(v)n(es)e(of)2770
3267 y Fk(e)2750 3288 y Fm(F)45 b Fq(is)36 b(a)0 3388
y(discrete)26 b(set)g(of)g(p)r(oin)n(ts)g(in)g Fs(R)p
Fq(,)g(since)g(it)h(is)f(closed,)g(and)g(an)n(y)f(sequence)h(of)g
(distinct)h(p)r(oin)n(ts)f(in)0 3487 y Fl(C)32 b Fq(with)27
b(a)e(limit)i(p)r(oin)n(t)f(can)f(b)r(e)h(used)g(to)g(\014nd)g(a)g
(sequence)f(of)h(p)r(oin)n(ts)g(in)g Fl(F)38 b Fq(limiting)26
b(on)g Fl(F)38 b Fq(in)0 3587 y(the)29 b(transv)n(erse)d(direction,)j
(con)n(tradicting)e(the)i(compactness)e(of)i Fl(F)12
b Fq(.)39 b(The)29 b(complemen)n(tary)0 3694 y(regions)36
b(of)h Fl(F)49 b Fq(in)38 b Fl(M)46 b Fq(lift)38 b(to)g(the)f
(complemen)n(tary)f(regions)g(of)i(the)f(lifts)h(of)g
Fl(F)49 b Fq(in)2775 3673 y Fk(f)2765 3694 y Fl(M)8 b
Fq(;)43 b(in)0 3794 y(the)35 b(space)f(of)g(lea)n(v)n(es)f(they)i
(corresp)r(ond)e(to)h(the)h(in)n(terv)-5 b(als)34 b(b)r(et)n(w)n(een)g
(successiv)n(e)f(p)r(oin)n(ts)i(of)0 3899 y Fl(C)6 b
Fq(.)38 b(Eac)n(h)27 b(is)h(b)r(ounded)h(b)n(y)e(t)n(w)n(o)h(p)r(oin)n
(ts)f(of)h Fl(C)6 b Fq(,)29 b(and)f(so)f(ev)n(ery)g(comp)r(onen)n(t)
2421 3879 y Fk(e)2400 3899 y Fl(X)34 b Fq(of)28 b(the)g(in)n(v)n(erse)0
4007 y(image)d(of)g(a)g(comp)r(onen)n(t)h Fl(X)31 b Fq(of)26
b Fl(M)9 b Fm(j)p Fl(F)37 b Fq(has)25 b(b)r(oundary)g(equal)g(to)g(t)n
(w)n(o)g(lifts)h(of)g Fl(F)12 b Fq(.)36 b(Because)2909
3986 y Fk(f)2899 4007 y Fl(M)0 4117 y Fq(is)27 b(simply-connected,)g
(as)f(are)g(the)h Fl(@)5 b Fq(-comp)r(onen)n(ts)26 b(of)1789
4096 y Fk(e)1767 4117 y Fl(X)6 b Fq(,)1914 4096 y Fk(e)1893
4117 y Fl(X)33 b Fq(is)27 b(simply-connected,)g(and)g(so)22
4202 y Fk(e)0 4223 y Fl(X)34 b Fq(is)27 b(the)h(univ)n(ersal)f(co)n(v)n
(er)e(of)j Fl(X)7 b Fq(.)100 4322 y(Because)33 b Fl(F)46
b(\031)570 4334 y Fj(1)608 4322 y Fq(-injects)34 b(in)n(to)h
Fl(M)9 b Fq(,)35 b(it)g Fl(\031)1364 4334 y Fj(1)1402
4322 y Fq(-injects)f(in)n(to)h Fl(M)9 b Fm(j)p Fl(F)j
Fq(,)35 b(and)g(hence)f(in)n(to)g Fl(X)7 b Fq(.)57 b(The)0
4422 y(index)34 b(of)f Fl(\031)377 4434 y Fj(1)414 4422
y Fq(\()p Fl(F)12 b Fq(\))34 b(in)g Fl(\031)727 4434
y Fj(1)765 4422 y Fq(\()p Fl(X)7 b Fq(\))33 b(is)g(equal)g(to)h(the)f
(n)n(um)n(b)r(er)h(of)f(connected)g(comp)r(onen)n(ts)g(of)g(the)0
4521 y(in)n(v)n(erse)27 b(image)h(of)h Fl(F)40 b Fq(in)29
b(the)g(univ)n(ersal)e(co)n(v)n(er)g(of)i Fl(X)7 b Fq(.)39
b(T)-7 b(o)28 b(see)g(this,)h(c)n(ho)r(ose)f(a)g(basep)r(oin)n(t)g
Fl(x)2951 4533 y Fj(0)0 4621 y Fq(for)23 b Fl(X)29 b
Fq(lying)23 b(in)g Fl(F)12 b Fq(,)24 b(and)f(supp)r(ose)g(that)h
Fl(\015)j Fq(is)c(a)g(lo)r(op)g(based)g(at)g Fl(x)2030
4633 y Fj(0)2090 4621 y Fq(whic)n(h)h(is)f(not)g(in)g(the)h(image)0
4726 y(of)k Fl(\031)142 4738 y Fj(1)179 4726 y Fq(\()p
Fl(X)7 b Fq(\).)38 b(Then)28 b(the)g(lift)h Fk(e)-46
b Fl(\015)32 b Fq(of)c Fl(\015)k Fq(to)1240 4706 y Fk(e)1219
4726 y Fl(X)i Fq(m)n(ust)28 b(ha)n(v)n(e)f(endp)r(oin)n(ts)g(on)h
(distinct)g(lifts)h(of)e Fl(F)12 b Fq(,)28 b(for)0 4826
y(otherwise)22 b(the)g(endp)r(oin)n(ts)h(can)f(b)r(e)h(joined)f(b)n(y)h
(an)f(arc)27 b Fk(e)-52 b Fl(\013)23 b Fq(in)g(the)g(lift)g(of)g
Fl(F)12 b Fq(,)23 b(whose)f(pro)5 b(jection,)0 4932 y(since)232
4911 y Fk(e)210 4932 y Fl(X)41 b Fq(is)34 b(simply)g(connected)g(\(so)h
Fk(e)-47 b Fl(\015)t Fm(\003)6 b Fk(e)-52 b Fl(\013)35
b Fq(is)f(n)n(ull-homotopic\))f(is)h(a)g(n)n(ull-homotopic)f(lo)r(op)0
5031 y Fl(\015)c Fm(\003)23 b Fl(\013)36 b Fq(in)h Fl(\031)379
5043 y Fj(1)416 5031 y Fq(\()p Fl(X)7 b Fq(\).)62 b(This)36
b(implies)g(that)g([)p Fl(\015)5 b Fq(])36 b(=)f([)8
b(\026)-50 b Fl(\013)q Fq(])p Fm(2)37 b Fl(\031)1786
5043 y Fj(1)1823 5031 y Fq(\()p Fl(F)12 b Fq(\),)39 b(a)d(con)n
(tradiction.)60 b(Cho)r(osing)p eop
%%Page: 3 3
3 2 bop 1130 42 a Fo(No)23 b Fn(R)p Fo(-co)n(v)n(ered)h(foliations)1095
b(3)0 241 y Fq(represen)n(tativ)n(es)33 b(from)h(eac)n(h)h(coset)f(of)h
Fl(\031)1336 253 y Fj(1)1374 241 y Fq(\()p Fl(F)12 b
Fq(\))35 b(in)h Fl(\031)1690 253 y Fj(1)1727 241 y Fq(\()p
Fl(X)7 b Fq(\),)37 b(and)e(lifting)g(eac)n(h)g(to)g(arcs)e(with)0
340 y(initial)27 b(p)r(oin)n(ts)f(a)g(\014xed)g(lift)i
Fk(f)-84 b Fl(x)931 352 y Fj(0)995 340 y Fq(of)26 b Fl(x)1135
352 y Fj(0)1173 340 y Fq(,)h(w)n(e)f(\014nd)g(that)h(their)f(terminal)g
(p)r(oin)n(ts)g(m)n(ust)h(therefore)0 440 y(lie)h(on)f(distinct)h
(lifts)g(of)g Fl(F)12 b Fq(.)100 540 y(But)37 b(since)509
519 y Fk(e)487 540 y Fl(X)44 b Fq(has)37 b(only)g(t)n(w)n(o)f(b)r
(oundary)h(comp)r(onen)n(ts,)i(this)f(means)e(that)i
Fl(\031)2664 552 y Fj(1)2702 540 y Fq(\()p Fl(F)12 b
Fq(\))37 b(has)0 639 y(index)32 b(at)g(most)g(t)n(w)n(o)f(in)h
Fl(\031)851 651 y Fj(1)889 639 y Fq(\()p Fl(X)7 b Fq(\).)50
b(Since)32 b Fl(X)38 b Fq(is)32 b(irreducible)f(\(b)r(ecause)h
Fl(F)44 b Fq(is)32 b(incompressible)0 739 y(and)j Fl(M)44
b Fq(is)35 b(irreducible\),)j([He,)f(Theorem)e(10.6])f(implies)h(that)h
Fl(X)42 b Fq(is)35 b(an)g Fl(I)7 b Fq(-bundle)36 b(o)n(v)n(er)d(a)0
839 y(closed)27 b(surface.)36 b(The)28 b(resulting)f(description)g(of)g
Fl(M)36 b Fq(follo)n(ws.)82 b Ff(\003)100 938 y Fq(The)20
b(foliation)f(b)n(y)h(\014b)r(ers)g(of)g(a)f(bundle)i(o)n(v)n(er)d(the)
j(circle)e(is)h(alw)n(a)n(ys)e(taut.)35 b(In)20 b(the)g(other)g(case,)0
1038 y(when)28 b Fl(F)40 b Fq(separates,)27 b(w)n(e)g(understand)h
([Br2])f(the)h(structure)g(of)g(the)g(foliation)g Fm(F)36
b Fq(on)28 b(eac)n(h)f(of)0 1137 y(the)22 b(t)n(w)n(o)f
Fl(I)7 b Fq(-bundles,)22 b(since)g(their)f(b)r(oundaries)g(are)f(lea)n
(v)n(es.)34 b(If)22 b(the)g(induced)f(foliations)g(can)g(b)r(e)0
1237 y(made)h(transv)n(erse)e(to)i(the)g Fl(I)7 b Fq(-\014b)r(ers)22
b(of)g(eac)n(h)f(bundle,)j(then)f(b)n(y)f(taking)f(a)h(pair)f(of)h
Fl(I)7 b Fq(-\014b)r(ers,)23 b(one)0 1337 y(from)28 b(eac)n(h)f
(bundle,)h(and)g(deforming)f(them)i(so)e(that)h(they)g(share)f(endp)r
(oin)n(ts)h(on)g Fl(F)12 b Fq(,)28 b(w)n(e)f(can)0 1436
y(obtain)i(a)g(lo)r(op)g(transv)n(erse)e(to)i(the)h(lea)n(v)n(es)e(of)h
Fm(F)8 b Fq(,)30 b(so)e Fm(F)38 b Fq(is)29 b(taut.)42
b(If)30 b(the)g(induced)g(foliations)0 1536 y(cannot)i(b)r(e)h(made)g
(transv)n(erse)e(to)h(the)h Fl(I)7 b Fq(-\014b)r(ers,)34
b(then)f Fl(F)45 b Fq(is)32 b(a)h(torus,)g(and)g(\(after)f(p)r(ossibly)
0 1636 y(passing)e(to)g(a)h(\014nite)g(co)n(v)n(er\))e(the)i(foliation)
g(con)n(tains)e(a)i(pair)f(of)g(parallel)g(tori)g(with)h(a)g(Reeb)0
1735 y(ann)n(ulus)19 b(in)h(b)r(et)n(w)n(een.)34 b(It)20
b(is)g(then)g(straighforw)n(ard)d(to)i(see)h(that)g(the)g(resulting)f
(lifted)h(foliation)20 1820 y Fk(e)0 1841 y Fm(F)29 b
Fq(cannot)20 b(b)r(e)i Fs(R)p Fq(-co)n(v)n(ered,)d(since)i(this)g
(torus)p Fm(\002)p Fl(I)27 b Fq(will)21 b(lift)h(to)f
Fl(R)1975 1810 y Fj(2)2017 1841 y Fm(\002)5 b Fl(I)28
b Fq(whose)20 b(induced)h(foliation)0 1940 y(has)h(space)h(of)f(lea)n
(v)n(es)g Fs(R)g Fi(to)l(gether)k(with)e Fq(t)n(w)n(o)e(p)r(oin)n(ts)h
(\(the)h(t)n(w)n(o)e(b)r(oundary)g(comp)r(onen)n(ts\))h(that)0
2040 y(are)30 b Fi(b)l(oth)i Fq(the)g(limit)g(of)g(the)g(p)r(ositiv)n
(e)f(\(sa)n(y\))g(ra)n(y)f(of)h(the)h(line.)49 b(In)31
b(particular,)g(the)h(space)f(of)0 2150 y(lea)n(v)n(es)26
b(of)353 2129 y Fk(e)333 2150 y Fm(F)35 b Fq(w)n(ould)27
b(not)h(b)r(e)g(Hausdor\013.)36 b(Therefore:)0 2288 y
Fs(Corollary)c(2.)47 b Fi(A)29 b(R)l(e)l(ebless,)h Fs(R)p
Fi(-c)l(over)l(e)l(d)g(foliation)i(is)e(taut.)85 b Ff(\003)100
2427 y Fq(W)-7 b(e)24 b(no)n(w)g(turn)h(our)e(atten)n(tion)h(to)h
Fs(R)p Fq(-co)n(v)n(ered)c(foliations)j(with)h(Reeb)g(comp)r(onen)n
(ts.)35 b(Suc)n(h)0 2527 y(foliations)19 b(do)h(exist,)i(for)d
(example,)j(the)e(foliation)g(of)g Fl(S)1730 2496 y Fj(2)1770
2527 y Fm(\002)s Fl(S)1894 2496 y Fj(1)1952 2527 y Fq(as)f(a)h(pair)f
(of)h(Reeb)g(comp)r(onen)n(ts)0 2626 y(glued)25 b(along)g(their)h(b)r
(oundaries;)f(the)h(lift)h(to)e Fl(S)1506 2596 y Fj(2)1558
2626 y Fm(\002)14 b Fl(R)27 b Fq(consists)e(of)g(a)h(pair)f(of)g(solid)
g(cylinders,)0 2726 y(eac)n(h)31 b(ha)n(ving)f(space)h(of)g(lea)n(v)n
(es)f(a)h(closed)g(half-line.)48 b(Gluing)32 b(the)g(solid)f(cylinders)
g(together)0 2825 y(results)i(in)i(gluing)e(the)i(t)n(w)n(o)e
(half-lines)h(together,)h(giving)e(space)g(of)h(lea)n(v)n(es)e
Fs(R)p Fq(.)56 b(W)-7 b(e)35 b(sho)n(w,)0 2925 y(ho)n(w)n(ev)n(er,)19
b(that,)j(in)e(some)g(sense,)h(this)f(is)g(the)g(only)g(suc)n(h)f
(example.)34 b(Recall)20 b(that)g(the)g(P)n(oincar)n(\023)-39
b(e)0 3025 y(asso)r(ciate)31 b Fl(P)12 b Fq(\()p Fl(M)d
Fq(\))32 b(of)g Fl(M)41 b Fq(consists)31 b(of)h(the)h(connected)f(sum)g
(of)g(the)h(non-simply-connected)0 3124 y(comp)r(onen)n(ts)23
b(of)g(the)g(prime)g(decomp)r(osition)g(of)g Fl(M)9 b
Fq(,)24 b(i.e.,)g Fl(M)32 b Fq(=)23 b Fl(P)12 b Fq(\()p
Fl(M)d Fq(\)#\(a)23 b(coun)n(terexample)0 3224 y(to)k(the)h(P)n(oincar)
n(\023)-39 b(e)25 b(Conjecture\).)0 3362 y Fs(Lemma)33
b(3.)47 b Fi(If)32 b Fm(F)40 b Fi(is)33 b(an)f Fs(R)p
Fi(-c)l(over)l(e)l(d)h(foliation)h(of)f(the)f(orientable)i(3-manifold)g
Fl(M)9 b Fi(,)33 b(which)0 3462 y(has)e(a)f(R)l(e)l(eb)f(c)l(omp)l
(onent,)h(then)g Fl(P)12 b Fq(\()p Fl(M)d Fq(\))29 b
Fi(=)h Fl(S)1439 3432 y Fj(2)1494 3462 y Fm(\002)18 b
Fl(S)1633 3432 y Fj(1)1670 3462 y Fi(.)100 3601 y(Pr)l(o)l(of)p
Fq(:)45 b(The)31 b(core)f(lo)r(op)h Fl(\015)36 b Fq(of)31
b(the)h(Reeb)f(comp)r(onen)n(t)g(m)n(ust)g(ha)n(v)n(e)f(in\014nite)i
(order)e(in)h(the)0 3700 y(fundamen)n(tal)24 b(group)e(of)i
Fl(M)9 b Fq(,)24 b(otherwise)f(the)h(Reeb)f(comp)r(onen)n(t)h(lifts)g
(to)f(a)g(Reeb)h(comp)r(onen)n(t)0 3806 y(of)112 3785
y Fk(e)92 3806 y Fm(F)8 b Fq(;)26 b(but)g(since)f(the)h(in)n(terior)e
(of)h(a)g(Reeb)h(comp)r(onen)n(t)f(has)f(space)h(of)g(lea)n(v)n(es)f
Fl(S)2529 3776 y Fj(1)2566 3806 y Fq(,)i(this)f(w)n(ould)0
3905 y(imply)j(that)g Fl(S)469 3875 y Fj(1)533 3905 y
Fq(em)n(b)r(eds)g(in)g Fs(R)p Fq(,)f(a)g(con)n(tradiction.)100
4013 y(The)j(Reeb)g(solid)g(torus)g(therefore)f(lifts)i(to)f(a)g
(family)g(of)g(in\014nite)h(solid)f(cylinders)g(in)2886
3992 y Fk(f)2876 4013 y Fl(M)9 b Fq(,)0 4113 y(foliated)28
b(b)n(y)g(planes.)39 b(The)28 b(induced)h(foliation)f(of)g(eac)n(h)g
(closed)g(solid)g(cylinder)f(has)h(space)g(of)0 4218
y(lea)n(v)n(es)f(a)g(closed)h(half-line)g(prop)r(erly)f(em)n(b)r(edded)
i(in)f(the)h(space)e(of)h(lea)n(v)n(es)f(of)2513 4197
y Fk(e)2493 4218 y Fm(F)8 b Fq(.)38 b(Eac)n(h)27 b(suc)n(h)0
4318 y(half-line)35 b(is)f(disjoin)n(t)h(from)g(the)g(others;)j(but)d
(since)g Fs(R)f Fq(has)g(only)h(t)n(w)n(o)f(ends,)j(this)e(implies)0
4425 y(that)27 b(the)h(Reeb)f(comp)r(onen)n(t)g(has)g(at)g(most)g(t)n
(w)n(o)f(lifts)i(to)1837 4404 y Fk(f)1827 4425 y Fl(M)9
b Fq(.)36 b(This)28 b(means)e(that)i(the)f(in)n(v)n(erse)0
4533 y(image)e(of)i(the)f(core)f(lo)r(op)h Fl(\015)31
b Fq(of)26 b(the)h(Reeb)f(solid)g(torus,)f(in)i(the)f(univ)n(ersal)f
(co)n(v)n(er)2582 4512 y Fk(f)2571 4533 y Fl(M)9 b Fq(,)27
b(consists)0 4633 y(of)g(at)g(most)f(t)n(w)n(o)h(lines,)g(and)f(so)h
(the)g(\(in\014nite\))h(cyclic)f(group)f(generated)f(b)n(y)i
Fl(\015)32 b Fq(has)26 b(index)h(at)0 4732 y(most)i(2)g(in)h
Fl(\031)422 4744 y Fj(1)459 4732 y Fq(\()p Fl(M)9 b Fq(\).)42
b(Because)29 b Fl(M)38 b Fq(is)29 b(orien)n(table,)f(it's)i(fundamen)n
(tal)f(group)f(is)i(torsion-free,)0 4832 y(and)i(so)f(b)n(y)g([He,)i
(Theorem)e(10.7],)g Fl(\031)1197 4844 y Fj(1)1235 4832
y Fq(\()p Fl(M)9 b Fq(\))32 b(is)f(free,)i(hence)f(isomorphic)e(to)i
Fe(Z)o Fq(,)27 b(and)k(so)h([He,)0 4932 y(Exercise)c(5.3])g
Fl(P)12 b Fq(\()p Fl(M)d Fq(\))30 b(is)f(an)g Fl(S)994
4901 y Fj(2)1031 4932 y Fq(-bundle)h(o)n(v)n(er)e Fl(S)1569
4901 y Fj(1)1605 4932 y Fq(.)43 b(Since)29 b Fl(M)39
b Fq(is)29 b(orien)n(table,)g(this)g(giv)n(es)f(the)0
5031 y(conclusion.)82 b Ff(\003)p eop
%%Page: 4 4
4 3 bop 0 42 a Fo(4)1187 b(Mark)24 b(Brittenham)100 241
y Fq(Note)e(that)g(the)g(space)f(of)h(lea)n(v)n(es)f(in)h(the)g(univ)n
(ersal)f(co)n(v)n(er)f(do)r(es)i(not)g(c)n(hange)e(b)n(y)i(passing)f
(to)0 340 y(\014nite)k(co)n(v)n(ers)e(\(there)i(is)g(only)f(one)h(univ)
n(ersal)e(co)n(v)n(er\),)h(and)h(so)f(w)n(e)g(can)h(lose)f(the)h(orien)
n(tabilit)n(y)0 440 y(h)n(yp)r(othesis)j(b)n(y)g(w)n(eak)n(ening)f(the)
i(conclusion)e(sligh)n(tly)-7 b(.)39 b(Putting)29 b(the)f(lemmas)g
(together,)g(w)n(e)0 540 y(get:)0 690 y Fs(Corollary)34
b(4.)47 b Fi(If)33 b(a)f(3-manifold)i Fl(M)41 b Fi(admits)32
b(an)g Fs(R)p Fi(-c)l(over)l(e)l(d)g(foliation)j Fm(F)8
b Fi(,)32 b(then)g(either)h Fm(F)0 790 y Fi(is)d(taut)f(or)h
Fl(P)12 b Fq(\()p Fl(M)d Fq(\))30 b Fi(is)g(double-c)l(over)l(e)l(d)h
(by)f Fl(S)1416 760 y Fj(2)1472 790 y Fm(\002)18 b Fl(S)1611
760 y Fj(1)1678 790 y Fi(.)85 b Ff(\003)1453 991 y Fm(x)p
Fr(2)970 1090 y(T)-7 b(a)n(ut)31 b(but)g(not)f Fs(R)p
Fr(-co)n(vered)100 1240 y Fq(In)36 b([BNR,)h(Theorem)e(D],)i(the)f
(authors)f(exhibit)i(a)f(family)g(of)g(3-manifolds)f(whic)n(h)h(ad-)0
1343 y(mit)j Fl(C)228 1313 y Fj(\(0\))317 1343 y Fq(-foliations)e(with)
i(no)e(compact)h(lea)n(v)n(es,)h(but)g(no)f Fl(C)2009
1313 y Fj(\(2\))2098 1343 y Fq(-foliations)f(without)i(com-)0
1443 y(pact)30 b(lea)n(v)n(es.)42 b(Eac)n(h)29 b(of)h(the)g(examples)g
(is)f(obtained)h(from)g(t)n(w)n(o)f(copies)g Fl(M)2391
1455 y Fj(1)2428 1443 y Fq(,)p Fl(M)2532 1455 y Fj(2)2599
1443 y Fq(of)h(\(a)g(once-)0 1542 y(punctured)35 b(torus\))p
Fm(\002)p Fl(S)743 1512 y Fj(1)779 1542 y Fq(,)i(glued)e(together)f
(along)g(their)h(b)r(oundary)f(tori)g(b)n(y)h(a)g(homeomor-)0
1642 y(phism)i Fl(A)p Fq(.)66 b(What)37 b(w)n(e)g(will)g(sho)n(w)f(is)h
(that)g(for)g(essen)n(tially)f(the)h(same)g(c)n(hoices)f(of)h
Fl(A)p Fq(,)i(the)0 1741 y(resulting)27 b(manifolds)g(admit)h(taut)g
(foliations,)f(but)h(no)g Fs(R)p Fq(-co)n(v)n(ered)d(ones.)100
1841 y Fl(A)19 b Fq(is)g(determined)g(b)n(y)g(its)h(induced)f
(isomorphism)f(on)h(\014rst)g(homology)e Fe(Z)2372 1811
y Fj(2)2422 1841 y Fq(of)i(the)h(b)r(oundary)0 1941 y(torus,)26
b(and)g(so)g(w)n(e)g(will)h(think)g(of)g(it)g(as)f(a)g(2)p
Fm(\002)p Fq(2)f(in)n(teger)g(matrix)h(with)h(determinan)n(t)g
Fm(\006)p Fq(1.)35 b(W)-7 b(e)0 2041 y(c)n(ho)r(ose)34
b(as)h(basis)g(for)f(the)i(homology)e(of)h(eac)n(h)g(torus)g(the)g
(pair)g(\(*)p Fm(\002)p Fl(S)2304 2010 y Fj(1)2340 2041
y Fq(,)p Fl(@)5 b(F)12 b Fm(\002)p Fq(*\),)37 b(where)e
Fl(F)0 2140 y Fq(denotes)26 b(the)h(once-punctured)g(torus.)35
b(\(T)-7 b(ec)n(hnically)g(,)27 b(w)n(e)f(should)h(orien)n(t)f(these)h
(curv)n(es,)e(but)0 2240 y(b)r(ecause)31 b(all)g(of)h(the)g(conditions)
f(w)n(e)g(will)g(encoun)n(ter)g(will)h(b)r(e)g(symmetric)f(with)h(resp)
r(ect)f(to)0 2340 y(sign,)c(the)h(orien)n(tations)e(will)i(mak)n(e)f
(no)g(di\013erence,)h(and)f(so)g(w)n(e)g(w)n(on't)h(b)r(other.\))100
2439 y(Eac)n(h)23 b Fl(M)384 2451 y Fd(i)437 2439 y Fq(is)h(a)h
(Seifert-\014b)r(ered)g(space)f(\(\014b)r(ered)h(b)n(y)g(*)p
Fm(\002)p Fl(S)1916 2409 y Fj(1)1952 2439 y Fq(\);)h(the)g(manifold)f
Fl(M)2596 2451 y Fd(A)2674 2439 y Fq(resulting)0 2539
y(from)h(gluing)f(via)h Fl(A)g Fq(is)g(a)g(Seifert-\014b)r(ered)g
(space)g(i\013)g Fl(A)h Fq(glues)e(\014b)r(er)h(\(1,0\))g(to)g(\014b)r
(er)g(\(1,0\),)h(i.e.,)0 2639 y Fl(A)h Fq(is)f(upp)r(er)h(triangular.)
35 b(W)-7 b(e)28 b(will)g(assume)f(that)h(this)g(is)f(not)h(the)g
(case.)100 2739 y(Let)d Fl(T)36 b Fq(denote)25 b(the)h(incompressible)e
(torus)g Fl(@)5 b(M)1629 2751 y Fj(1)1691 2739 y Fq(=)25
b Fl(@)5 b(M)1911 2751 y Fj(2)1972 2739 y Fq(in)26 b
Fl(M)2148 2751 y Fd(A)2201 2739 y Fq(.)36 b(By)25 b([EHN],)h(an)n(y)e
(hori-)0 2838 y(zon)n(tal)c(foliation)g(of)h Fl(M)727
2850 y Fd(i)754 2838 y Fq(,)h(i.e.,)g(a)f(foliation)f(ev)n(erywhere)f
(transv)n(erse)f(to)j(the)g(Seifert)g(\014b)r(ering)f(of)0
2938 y Fl(M)81 2950 y Fd(i)108 2938 y Fq(,)26 b(m)n(ust)g(meet)g
Fl(@)5 b(M)692 2950 y Fd(i)745 2938 y Fq(in)26 b(a)f(foliation)g(with)i
(slop)r(e)e(in)h(the)g(in)n(terv)-5 b(al)25 b(\()p Fm(\000)p
Fq(1,1\).)36 b([Note)26 b(that)g(this)0 3038 y(disagrees)g(with)i(the)g
(statemen)n(t)f(in)h([BNR],)g(where)f(the)h(result)g(w)n(as)e(quoted)i
(incorrectly)-7 b(.])100 3138 y(If)20 b Fm(F)28 b Fq(is)20
b(an)g Fs(R)p Fq(-co)n(v)n(ered,)f(hence)h(Reebless,)h(foliation)f(of)g
Fl(M)9 b Fq(,)21 b(then)g(b)n(y)f([BR],)g(w)n(e)g(can)f(isotop)r(e)0
3237 y Fm(F)37 b Fq(so)28 b(that)g(either)h(it)g(is)f(transv)n(erse)f
(to)h Fl(T)12 b Fq(,)28 b(and)h(the)g(restrictions)e
Fm(F)2192 3249 y Fd(i)2248 3237 y Fq(of)i Fm(F)36 b Fq(to)29
b Fl(M)2624 3249 y Fd(i)2651 3237 y Fq(,)g Fl(i)24 b
Fq(=)h(1)p Fl(;)14 b Fq(2,)0 3337 y(ha)n(v)n(e)36 b(no)g(Reeb)h(or)f
(half-Reeb)h(comp)r(onen)n(ts,)h(or)e Fm(F)45 b Fq(con)n(tains)36
b(a)g(cylindrical)g(comp)r(onen)n(t,)0 3436 y(and)d(therefore)g(a)g
(compact)g(\(toral\))g(leaf.)55 b(In)33 b(the)h(second)f(case,)i(the)e
(torus)g(leaf)h(m)n(ust)f(hit)0 3536 y(the)28 b(torus)f
Fl(T)12 b Fq(,)27 b(and)h(is)g(split)g(in)n(to)g(a)f(collection)g(of)h
(non-)p Fl(@)5 b Fq(-parallel)26 b(ann)n(uli;)h(these)h(\(essen)n
(tial\))0 3636 y(ann)n(uli)e(m)n(ust)g(b)r(e)h(v)n(ertical)e(in)h(the)h
(Seifert-\014b)r(ering)f(of)g(eac)n(h)f Fl(M)2018 3648
y Fd(i)2045 3636 y Fq(,)i(since)f Fl(F)i Fm(\002)15 b
Fl(S)2514 3606 y Fj(1)2577 3636 y Fq(con)n(tains)25 b(no)0
3735 y(horizon)n(tal)32 b(ann)n(uli.)56 b(But)34 b(this)g(implies)h
(that)f(the)g(gluing)f(map)h Fl(A)h Fq(glues)e(\014b)r(er)h(to)g(\014b)
r(er,)h(a)0 3835 y(con)n(tradiction.)g(Therefore,)25
b(w)n(e)h(ma)n(y)g(assume)f(that)i Fm(F)34 b Fq(restricts)26
b(to)g(Reebless)g(foliations)f(on)0 3935 y(eac)n(h)f(of)i(the)f
(manifolds)g Fl(M)872 3947 y Fd(i)900 3935 y Fq(.)36
b(Note)25 b(that)h([BR])f(requires)f(that)h(w)n(e)g(allo)n(w)f(a)h
(\014nite)h(amoun)n(t)f(of)0 4034 y(splitting)g(along)e(lea)n(v)n(es)g
(to)i(reac)n(h)e(this)i(conclusion;)g(but)g(since)f(a)h(splitting)g(of)
f(an)g Fs(R)p Fq(-co)n(v)n(ered)0 4134 y(foliation)31
b(is)g(still)h Fs(R)p Fq(-co)n(v)n(ered)d(\(it)j(amoun)n(ts,)g(in)g
(the)f(space)g(of)h(lea)n(v)n(es,)e(to)i(replacing)e(p)r(oin)n(ts)0
4233 y(with)e(closed)f(in)n(terv)-5 b(als\),)27 b(this)h(will)g(not)f
(a\013ect)h(our)f(argumen)n(t.)100 4333 y(By)19 b([Br3],)h(eac)n(h)f
(of)g(the)h(induced)g(foliations)f Fm(F)1556 4345 y Fd(i)1603
4333 y Fq(of)g Fl(M)1770 4345 y Fd(i)1817 4333 y Fq(has)g(either)g(a)h
(v)n(ertical)e(or)g(horizon)n(tal)0 4433 y(sublamination.)49
b(Ev)n(ery)30 b(horizon)n(tal)g(lamination)h(in)h Fl(M)1823
4445 y Fd(i)1882 4433 y Fq(can)f(b)r(e)h(extended)g(to)g(a)f(foliation)
0 4533 y(transv)n(erse)37 b(to)h(the)h(\014b)r(ers)g(of)g
Fl(M)1094 4545 y Fd(i)1121 4533 y Fq(,)j(and)c(so)g(meets)h
Fl(@)5 b(M)1848 4545 y Fd(i)1914 4533 y Fq(in)39 b(curv)n(es)e(whose)h
(slop)r(e)h(lies)g(in)0 4632 y(\()p Fm(\000)p Fq(1)p
Fl(;)14 b Fq(1\).)43 b(If)31 b Fm(F)462 4644 y Fd(i)519
4632 y Fq(has)e(a)h(v)n(ertical)f(sublamination,)h(it)g(either)g(meets)
g Fl(@)5 b(M)2296 4644 y Fd(i)2353 4632 y Fq(in)30 b(curv)n(es)f(of)h
(slop)r(e)0 4732 y Fm(1)e Fq(\(i.e.,)g(in)g(curv)n(es)e(homologous)g
(to)h(\(1,0\)\))h(or)e(is)i(disjoin)n(t)f(from)h(the)g(b)r(oundary)-7
b(.)100 4832 y(It)21 b(is)g(this)h(last)e(p)r(ossibilit)n(y)-7
b(,)23 b(a)d(v)n(ertical)g(sublamination)h(disjoin)n(t)g(from)g
Fl(T)12 b Fq(,)22 b(that)f(w)n(e)g(wish)g(to)0 4932 y(require,)26
b(and)g(so)g(w)n(e)g(will)g(no)n(w)g(imp)r(ose)h(conditions)f(on)g(the)
h(gluing)e(map)i Fl(A)g Fq(to)f(rule)g(out)g(the)0 5031
y(other)31 b(p)r(ossibilities.)48 b(If)31 b Fi(b)l(oth)h
Fm(F)1035 5043 y Fj(1)1104 5031 y Fq(and)f Fm(F)1329
5043 y Fj(2)1397 5031 y Fq(ha)n(v)n(e)f(either)h(a)g(horizon)n(tal)f
(sublamination)h(or)f(a)p eop
%%Page: 5 5
5 4 bop 1130 42 a Fo(No)23 b Fn(R)p Fo(-co)n(v)n(ered)h(foliations)1095
b(5)0 241 y Fq(v)n(ertical)23 b(sublamination)g(meeting)i
Fl(T)12 b Fq(,)24 b(then)g(for)g(b)r(oth)g Fl(M)1829
253 y Fj(1)1890 241 y Fq(and)g Fl(M)2129 253 y Fj(2)2166
241 y Fq(,)h(the)f(induced)h(foliations)0 340 y(meet)j
Fl(T)39 b Fq(in)28 b(curv)n(es)e(with)i(slop)r(e)f(in)h(\()p
Fm(\000)p Fq(1)p Fl(;)14 b Fq(1\))k Fm([)g(f1g)p Fq(.)36
b(Therefore,)27 b(the)h(gluing)f(map)361 515 y Fl(A)h
Fq(=)543 398 y Fk(\022)618 466 y Fl(a)87 b(b)622 565
y(c)g(d)802 398 y Fk(\023)891 515 y Fq(,)28 b(whic)n(h)f(as)g(a)g
(function)i(on)e(slop)r(es,)g(is)g(A\()p Fl(x)p Fq(\)=)2388
459 y Fl(ax)20 b Fq(+)e Fl(b)p 2388 496 229 4 v 2388
572 a(cx)i Fq(+)e Fl(d)0 691 y Fq(m)n(ust)28 b(ha)n(v)n(e)e
Fl(A)p Fq(\(\()p Fm(\000)p Fq(1)p Fl(;)14 b Fq(1\))k
Fm([)h(f1g)p Fq(\))f Fm(\\)h Fq(\(\()p Fm(\000)p Fq(1)p
Fl(;)14 b Fq(1\))j Fm([)i(f1g)p Fq(\))k Fm(6)p Fq(=)f
Fm(;)p Fq(.)37 b(But)28 b(since)777 860 y Fl(A)p Fq(\()p
Fm(1)p Fq(\))c(=)1108 803 y Fl(a)p 1108 840 44 4 v 1112
916 a(c)1162 860 y Fq(,)k Fl(A)p Fq(\()1317 803 y Fm(\000)p
Fl(d)p 1317 840 108 4 v 1353 916 a(c)1435 860 y Fq(\))23
b(=)g Fm(1)p Fq(,)28 b Fl(A)p Fq(\()1816 803 y(1)p 1816
840 42 4 v 1816 916 a(1)1867 860 y(\))c(=)2020 803 y
Fl(a)19 b Fq(+)f Fl(b)p 2020 840 181 4 v 2020 916 a(c)h
Fq(+)f Fl(d)0 1020 y Fq(and)27 b Fl(A)h Fq(is)g(increasing)e(if)i
Fl(ad)19 b Fm(\000)f Fl(bc)k Fq(=)h(1)k(\(tak)n(e)g(the)h(deriv)-5
b(ativ)n(e!\),)27 b(w)n(e)h(can)f(force)0 1121 y Fl(A)p
Fq(\(\()p Fm(\000)p Fq(1)p Fl(;)14 b Fq(1\))k Fm([)h(f1g)p
Fq(\))27 b(to)g(b)r(e)h(disjoin)n(t)g(from)f(\()p Fm(\000)p
Fq(1)p Fl(;)14 b Fq(1\))k Fm([)h(f1g)26 b Fq(b)n(y)i(setting)872
1289 y Fm(j)p Fl(a)p Fm(j)23 b Fl(>)f Fm(j)p Fl(c)p Fm(j)p
Fq(,)28 b Fm(j)p Fl(d)p Fm(j)c Fl(>)e Fm(j)p Fl(c)p Fm(j)p
Fq(,)28 b(and)1709 1233 y Fl(a)19 b Fq(+)f Fl(b)p 1709
1270 V 1709 1346 a(c)h Fq(+)f Fl(d)1923 1289 y(<)23 b
Fm(\000)p Fq(1)100 1445 y(F)-7 b(or)32 b(example,)i(w)n(e)f(ma)n(y)f(c)
n(ho)r(ose)g Fl(a)g Fq(=)f Fm(\000)p Fl(n)p Fq(,)j Fl(b)e
Fq(=)g Fm(\000)p Fl(nm)21 b Fm(\000)h Fq(1,)34 b Fl(c)e
Fq(=)f(1,)j(and)f Fl(d)f Fq(=)g Fl(m)p Fq(,)i(with)0
1545 y Fl(n;)14 b(m)23 b Fm(\025)f Fq(2,)28 b(so)f(that)1005
1627 y Fl(a)18 b Fq(+)g Fl(b)p 1005 1664 V 1005 1740
a(c)h Fq(+)f Fl(d)1224 1683 y Fq(=)27 b Fm(\000)p Fl(n)18
b Fm(\000)1629 1627 y Fq(1)p 1542 1664 216 4 v 1542 1740
a Fl(m)g Fq(+)g(1)1795 1683 y Fl(<)28 b Fm(\000)p Fq(1)100
1839 y(As)c(the)h(\014gure)f(b)r(elo)n(w)g(sho)n(ws,)h(the)g
(conditions)f Fm(\000)p Fl(a)e(>)h(c)p Fq(,)i Fl(d)e(>)g(c)i
Fq(and)f Fl(ad)13 b Fm(\000)g Fl(bc)21 b Fq(=)i(1)h(are)g(also)0
1939 y(su\016cien)n(t;)33 b(what)e(is)g(needed,)i(essen)n(tially)-7
b(,)31 b(is)g(that)h(neither)f(the)h(graph)e(of)h Fl(A)g
Fq(nor)g(either)g(of)0 2038 y(its)d(asymptotes)f(pass)f(through)h(the)h
(square)f([)p Fm(\000)p Fq(1)p Fl(;)14 b Fq(1])j Fm(\002)h
Fq([)p Fm(\000)p Fq(1)p Fl(;)c Fq(1].)594 3684 y @beginspecial
116 @llx 359 @lly 397 @urx 595 @ury 2160 @rwi @setspecial
%%BeginDocument: fig1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 8
%%For: (Mark Brittenham) (me)
%%Title: (fig1.eps)
%%CreationDate: (10/16/2000) (2:00 PM)
%%BoundingBox: 116 359 397 595
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 18 16 594 778
%AI3_DocumentPreview: PC_ColorTIFF
%%PageOrigin:18 16
%%AI3_PaperRect:-18 778 594 -14
%%AI3_Margin:18 -15 -18 14
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
0 0 0 0.13 k
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
396 486 m
117 486 l
117 522 l
396 522 l
396 486 l
f
270 594 m
306 594 l
306 360 l
270 360 l
270 594 l
f
0 0 0 0.3 k
270 522 m
306 522 l
306 486 l
270 486 l
270 522 l
f
0 R
0 0 0 1 K
2 w
288 594 m
288 360 l
S
396 504 m
117 504 l
S
3 w [3 5 ]0 d
216 594 m
216 360 l
S
396 450 m
117 450 l
S
[]0 d
117 459 m
180 468 198 486 207 594 c
S
225 360 m
234 432 261 432 396 441 c
S
0 To
1 0 0 1 262.6665 492.6675 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w
/_Helvetica 12 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(-1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 302.333 507.333 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 221.333 491.333 0 Tp
TP
0 Tr
(a/c) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 263.167 456.833 0 Tp
TP
0 Tr
(-d/c) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 290.1665 482.1665 0 Tp
TP
0 Tr
(-1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 278.8311 519.0977 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1343 3784 a(Figure)27 b(1)100 3935 y(F)-7
b(or)29 b(suc)n(h)g(a)g(gluing)g(map)g Fl(A)h Fq(and)g(resulting)f
(manifold)g Fl(M)1974 3947 y Fd(A)2028 3935 y Fq(,)h(either)f
Fm(F)2378 3947 y Fj(1)2445 3935 y Fq(or)g Fm(F)2609 3947
y Fj(2)2675 3935 y Fq(\(without)0 4035 y(loss)h(of)i(generalit)n(y)-7
b(,)30 b Fm(F)723 4047 y Fj(1)760 4035 y Fq(\))i(m)n(ust)f(con)n(tain)g
(a)f(v)n(ertical)g(sublamination)h Fm(L)h Fq(disjoin)n(t)f(from)g
Fl(T)42 b Fq(=)0 4134 y Fl(@)5 b(M)130 4146 y Fj(1)166
4134 y Fq(.)48 b Fm(L)31 b Fq(is)g(the)h(saturation,)e(b)n(y)h(circle)g
(\014b)r(ers,)h(of)f(a)f(1-dimensional)g(lamination)h
Fl(\025)g Fq(in)g(the)0 4234 y(punctured)26 b(torus)f
Fl(F)12 b Fq(.)36 b(This)26 b(lamination)f Fl(\025)h
Fq(cannot)f(con)n(tain)g(a)g(closed)g(lo)r(op,)h(since)g(then)g
Fm(F)2929 4246 y Fj(1)2966 4234 y Fq(,)0 4334 y(and)35
b(therefore)f Fm(F)8 b Fq(,)37 b(w)n(ould)d(con)n(tain)g(a)h(torus)f
(leaf)h Fl(L)f Fq(missing)h Fl(T)12 b Fq(.)58 b(Lemma)34
b(1)h(w)n(ould)f(then)0 4433 y(imply)24 b(that)g Fl(M)9
b Fm(j)p Fl(L)22 b Fq(is)i(an)f Fl(I)7 b Fq(-bundle,)24
b(a)f(con)n(tradiction,)g(since)h(it)g(con)n(tains)e
Fl(M)2421 4445 y Fj(2)2458 4433 y Fq(.)35 b Fl(\025)24
b Fq(is)g(therefore)0 4533 y(a)31 b(lamination)g(b)n(y)g(lines.)48
b(By)32 b(Euler)e(c)n(haracteristic)g(considerations,)g(the)i
(complemen)n(tary)0 4633 y(regions)26 b(of)h Fl(\025)p
Fq(,)h(though)n(t)f(as)f(in)h(a)g(torus,)g(are)f(pro)r(ducts,)h(and)g
(so)g(the)g(complen)n(tary)f(region)g(of)0 4732 y Fl(\025)f
Fq(in)g Fl(F)36 b Fq(whic)n(h)25 b(meets)g Fl(@)5 b(F)36
b Fq(is)24 b(top)r(ologically)f(a)h(\()p Fl(@)5 b Fq(-parallel\))24
b(ann)n(ulus,)g(with)h(a)g(pair)e(of)i(p)r(oin)n(ts)0
4832 y(remo)n(v)n(ed)k(from)i(the)g(`inner')g(b)r(oundary)-7
b(.)47 b(Therefore,)30 b(the)i(comp)r(onen)n(t)e Fl(N)40
b Fq(of)31 b Fl(M)2614 4844 y Fd(A)2668 4832 y Fm(jL)g
Fq(whic)n(h)0 4932 y(con)n(tains)24 b Fl(T)36 b Fq(is)24
b(homeomorphic)g(to)g Fl(M)1223 4944 y Fj(2)1285 4932
y Fq(with)h(a)f(pair)g(of)h(parallel)f(lo)r(ops)g(remo)n(v)n(ed)f(from)
h Fl(@)5 b(M)2952 4944 y Fj(2)0 5031 y Fq(=)27 b Fl(T)39
b Fq(.)p eop
%%Page: 6 6
6 5 bop 0 42 a Fo(6)1187 b(Mark)24 b(Brittenham)100 241
y Fq(No)n(w)g(w)n(e)g(will)h(assume)f(that)h Fm(F)32
b Fq(is)25 b Fs(R)p Fq(-co)n(v)n(ered,)e(and)h(argue)f(as)h(in)h(the)g
(pro)r(of)f(of)h(Lemma)f(1,)0 340 y(to)29 b(arriv)n(e)f(at)h(a)h(con)n
(tradiction.)41 b Fm(L)30 b Fq(lifts)g(to)f(a)h(lamination)f(in)g
Fl(R)2066 310 y Fj(3)2133 340 y Fq(b)n(y)g(planes,)h(whose)f(image)0
446 y(in)f(the)g(space)f(of)h(lea)n(v)n(es)f Fs(R)g Fq(of)1010
425 y Fk(e)990 446 y Fm(F)36 b Fq(is)28 b(a)f(closed)g(set.)38
b(The)28 b(t)n(w)n(o)f(b)r(oundary)g(lea)n(v)n(es)f(of)i
Fm(L)g Fq(in)g Fl(@)5 b(N)0 545 y Fq(are)27 b(b)r(oth)i(ann)n(uli;)f
(they)g(are)f(the)h(complemen)n(ts)g(of)g(the)h(t)n(w)n(o)e(parallel)g
(lo)r(ops)g(in)i Fl(@)5 b(M)2712 557 y Fj(2)2776 545
y Fq(in)28 b(the)0 653 y(ab)r(o)n(v)n(e)21 b(description)h(of)h
Fl(M)821 665 y Fd(A)874 653 y Fm(jL)p Fq(.)36 b(A)23
b(lift)g(of)g(this)f(complemen)n(tary)g(region)f(to)2398
632 y Fk(f)2387 653 y Fl(M)32 b Fq(has)22 b(b)r(oundary)0
765 y(consisting)28 b(of)h(lifts)g(of)g(the)h(t)n(w)n(o)e(ann)n(uli.)40
b(Since)29 b(the)h(lift)f(is)g(a)g(closed)f(set)h(in)2468
744 y Fk(f)2458 765 y Fl(M)22 b Fq(its)29 b(image)g(in)0
865 y(the)35 b(space)e(of)i(lea)n(v)n(es)d Fs(R)j Fq(is)f(a)g
(connected,)i(closed)d(set,)k(and)d(therefore)f(an)h(in)n(terv)-5
b(al.)57 b(This)0 965 y(implies)34 b(that)f(the)h(lift)g(of)g
Fl(M)941 977 y Fd(A)994 965 y Fm(jL)g Fq(has)f(\(at)h(most\))f(t)n(w)n
(o)g(b)r(oundary)f(comp)r(onen)n(ts,)j(implying)0 1075
y(that)30 b(the)h(in)n(v)n(erse)d(image)i(of)g(eac)n(h)f(of)h(the)h
(ann)n(ulus)e(lea)n(v)n(es)g(is)h(a)g(single)f(\(planar\))h(leaf)g(of)
2918 1054 y Fk(e)2898 1075 y Fm(F)8 b Fq(.)0 1174 y(This)30
b(implies,)i(as)d(in)i(the)f(pro)r(of)g(of)g(Lemma)g(1,)h(that)g(the)f
(image)g(in)g Fl(\031)2279 1186 y Fj(1)2317 1174 y Fq(\()p
Fl(M)2430 1186 y Fd(A)2484 1174 y Fm(jL)p Fq(\))h(=)f
Fl(\031)2769 1186 y Fj(1)2806 1174 y Fq(\()p Fl(M)2919
1186 y Fj(2)2957 1174 y Fq(\))0 1274 y(of)h(the)h(fundamen)n(tal)f
(group)f(of)i(eac)n(h)e(ann)n(ulus)h(has)g(index)g(at)g(most)g(1,)h
(and)f(so)g Fl(\031)2673 1286 y Fj(1)2711 1274 y Fq(\()p
Fl(M)2824 1286 y Fj(2)2861 1274 y Fq(\))g(=)0 1374 y
Fl(F)53 1386 y Fj(2)109 1374 y Fm(\002)18 b Fe(Z)j Fq(is)28
b(cyclic,)f(a)g(con)n(tradication.)35 b(Therefore,)27
b Fm(F)35 b Fq(is)28 b(not)f Fs(R)p Fq(-co)n(v)n(ered.)35
b(This)27 b(implies:)0 1517 y Fs(Theorem)34 b(5.)47 b
Fi(With)32 b(gluing)h(map)g Fl(A)f Fi(given)h(as)g(ab)l(ove,)h
Fl(M)1929 1529 y Fd(A)2015 1517 y Fi(admits)f(no)g Fs(R)p
Fi(-c)l(over)l(e)l(d)f(folia-)0 1617 y(tions.)85 b Ff(\003)100
1761 y Fq(On)37 b(the)g(other)g(hand,)i(ev)n(ery)d(manifold)h
Fl(M)1532 1773 y Fd(A)1623 1761 y Fq(built)h(out)f(of)g(the)g(pieces)g
(w)n(e)g(ha)n(v)n(e)f(used)0 1860 y(admits)i(taut)g(foliations)f(and,)k
(in)d(fact,)j(foliations)c(with)h(no)g(compact)g(lea)n(v)n(es.)66
b(W)-7 b(e)38 b(sim-)0 1960 y(ply)h(c)n(ho)r(ose)f(a)g(v)n(ertical)g
(lamination)h(with)g(no)g(compact)g(lea)n(v)n(es)e(in)i(eac)n(h)g(of)g
(the)g(Seifert-)0 2059 y(\014b)r(ered)29 b(pieces)f Fl(M)598
2071 y Fd(i)625 2059 y Fq(,)h(missing)g(the)g(gluing)f(torus)g
Fl(T)12 b Fq(.)39 b(The)29 b(complemen)n(t)g(of)f(this)h(lamination)0
2159 y(is)h(homeomorphic)e(to)i Fl(T)h Fm(\002)19 b Fl(I)7
b Fq(,)30 b(with)h(a)e(pair)g(of)h(parallel)e(lo)r(ops)h(remo)n(v)n(ed)
f(from)i(eac)n(h)f(of)g(the)0 2259 y(b)r(oundary)24 b(comp)r(onen)n
(ts.)35 b(T)-7 b(reating)24 b(this)h(as)g(a)f(sutured)h(manifold,)g
(and)g(thinking)g(of)f(this)i(as)0 2358 y(\()p Fl(S)88
2328 y Fj(1)139 2358 y Fm(\002)14 b Fl(I)7 b Fq(\))14
b Fm(\002)g Fl(S)442 2328 y Fj(1)477 2358 y Fq(,)26 b(w)n(e)f(can)g
(foliate)g(it,)h(transv)n(erse)d(to)i(the)h(sutures,)f(b)n(y)g
(parallel)f(ann)n(uli.)36 b(Then,)0 2458 y(as)26 b(in)h([Ga1],)f(w)n(e)
h(can)f(spin)h(the)g(ann)n(ular)e(lea)n(v)n(es)g(near)h(the)h(sutures,)
g(to)f(extend)h(our)f(v)n(ertical)0 2558 y(laminations)h(to)g(a)h
(foliation)f(of)g Fl(M)1119 2570 y Fd(A)1201 2558 y Fq(with)h(no)f
(compact)g(lea)n(v)n(es.)35 b(This)28 b(giv)n(e)f(us:)0
2701 y Fs(Corollary)45 b(6.)i Fi(Ther)l(e)42 b(exist)e(gr)l(aph)h
(manifolds)i(admitting)e(taut)e(foliations,)46 b(but)40
b(no)g Fs(R)p Fi(-)0 2801 y(c)l(over)l(e)l(d)31 b(foliations.)87
b Ff(\003)1453 2989 y Fm(x)p Fr(3)977 3088 y Fs(R)p Fr(-co)n(vered)30
b(finite)i(co)n(vers)100 3238 y Fq(W)-7 b(ork)24 b(of)i(Luec)n(k)n(e)e
(and)i(W)-7 b(u)26 b([L)-9 b(W])26 b(implies)f(that)h(\(nearly\))f(ev)n
(ery)g(connected)g(graph)f(man-)0 3337 y(ifold)37 b(is)f
Fi(\014nitely)i(c)l(over)l(e)l(d)g Fq(b)n(y)e(a)g(graph)f(manifold)i
(that)g(admits)f(an)g Fs(R)p Fq(-co)n(v)n(ered)e(foliation.)0
3437 y(In)29 b(particular,)e(for)i(an)n(y)e(graph)h(manifold)h
Fl(M)37 b Fq(whose)28 b(Seifert)h(\014b)r(ered)f(pieces)h(all)f(ha)n(v)
n(e)g(base)0 3537 y(surfaces)e(ha)n(ving)f(negativ)n(e)h(\(orbifold\))h
(Euler)f(c)n(haracteristic,)f(they)i(\014nd)g(a)g(\014nite)g(co)n(v)n
(er)e Fl(M)2966 3507 y Fc(0)0 3636 y Fq(\(whic)n(h)35
b(is)f(also)f(a)h(graph)f(manifold\))i(admitting)g(a)f(foliation)g
Fm(F)42 b Fq(transv)n(erse)32 b(to)j(the)f(circle)0 3736
y(\014b)r(ers)h(of)f(eac)n(h)g(Seifert)i(\014b)r(ered)e(piece)h(of)g
Fl(M)1484 3706 y Fc(0)1507 3736 y Fq(,)i(and)d(whic)n(h)h(restricts)f
(on)h(eac)n(h)f(piece)h(to)f(a)0 3836 y(\014bration)e(o)n(v)n(er)g(the)
h(circle.)52 b(Note)33 b(that)h(this)f(implies)g(that)g(ev)n(ery)f
(leaf)h(of)g Fm(F)41 b Fq(meets)33 b(ev)n(ery)0 3935
y(torus)27 b(whic)n(h)g(splits)h Fl(M)758 3905 y Fc(0)809
3935 y Fq(in)n(to)f(Seifert-\014b)r(ered)h(pieces.)100
4035 y(Ev)n(en)g(more,)g(ev)n(ery)g(leaf)g(of)h(the)g(lift,)h(to)f(the)
g(univ)n(ersal)f(co)n(v)n(er)f(of)i Fl(M)9 b Fq(,)29
b(of)f Fm(F)37 b Fq(meets)29 b(ev)n(ery)0 4134 y(lift)f
Fl(P)184 4146 y Fj(1)222 4134 y Fl(;)14 b(P)312 4146
y Fj(2)377 4134 y Fq(of)28 b(the)g(splitting)f(tori.)37
b(This)27 b(can)g(b)r(e)h(v)n(eri\014ed)f(b)n(y)g(induction)h(on)g(the)
g(n)n(um)n(b)r(er)f(of)0 4234 y(lifts)h(of)f(the)h(tori)f(that)h(w)n(e)
f(m)n(ust)g(pass)g(through)g(to)g(get)g(from)g(a)g(lift)i(w)n(e)e(kno)n
(w)f(the)i(leaf)g(hits,)0 4334 y(to)g(our)g(c)n(hosen)g(target)g(lift.)
41 b(The)28 b(initial)h(step)g(follo)n(ws)e(b)n(y)i(pic)n(king)f(a)g
(path)i Fk(e)-47 b Fl(\015)33 b Fq(b)r(et)n(w)n(een)c(t)n(w)n(o)0
4433 y(`adjacen)n(t')e(lifts)i Fl(P)596 4445 y Fj(1)661
4433 y Fq(and)f Fl(P)876 4445 y Fj(2)913 4433 y Fq(,)g(whose)f(in)n
(terior)g(misses)g(ev)n(ery)f(lift)j(of)f(the)g(splitting)g(tori,)f
(and)0 4533 y(pro)5 b(jecting)30 b(do)n(wn)h(to)g Fl(M)9
b Fq(;)33 b(this)e(giv)n(es)f(a)h(path)g Fl(\015)36 b
Fq(in)31 b(a)g(single)g(Seifert)g(\014b)r(ered)h(piece)f(of)g
Fl(M)2943 4503 y Fc(0)2966 4533 y Fq(.)0 4633 y(This)23
b(path)h(can)f(b)r(e)h(made)f(piecewise)g(v)n(ertical)f(\(in)i(\014b)r
(ers\))f(and)h(horizon)n(tal)d(\(in)j(lea)n(v)n(es)e(of)i
Fm(F)8 b Fq(\),)0 4732 y(missing,)32 b(without)h(loss)e(of)g(generalit)
n(y)-7 b(,)32 b(the)g(m)n(ultiple)g(\014b)r(ers)g(of)f
Fl(M)2196 4702 y Fc(0)2251 4732 y Fq(\(just)i(do)e(this)h(lo)r(cally)-7
b(,)0 4832 y(in)29 b(a)f(foliation)h(c)n(hart)e(for)i
Fm(F)8 b Fq(;)29 b(the)g(Seifert)g(\014b)r(ering)f(can)h(b)r(e)g(used)g
(as)f(the)h(v)n(ertical)e(direction)0 4932 y(for)f(the)h(c)n(hart\).)36
b(Eac)n(h)26 b(v)n(ertical)f(piece)i(can)f(then)h(b)r(e)g(dragged)e(to)
i(the)g(b)r(oundary)f(tori,)g(since)0 5031 y(the)f(saturation)e(b)n(y)h
(\014b)r(ers)g(of)h(an)f(edgemost)g(horizon)n(tal)e(piece)j(of)f
Fl(\015)29 b Fq(is)c(a)f(\(singular\))f(ann)n(ulus)p
eop
%%Page: 7 7
7 6 bop 1130 42 a Fo(No)23 b Fn(R)p Fo(-co)n(v)n(ered)h(foliations)1095
b(7)0 241 y Fq(with)26 b(induced)g(foliation)g(b)n(y)f(horizon)n(tal)f
(line)i(segmen)n(ts;)g(see)f(Figure)g(2.)36 b([This)26
b(is)f(where)g(the)0 340 y(fact)33 b(that)g Fm(F)41 b
Fq(is)33 b(ev)n(erywhere)e(transv)n(erse)f(to)j(the)g(\014b)r(ers)g(is)
g(really)e(used.])53 b(The)33 b(end)g(result)0 440 y(of)i(this)g(pro)r
(cess)f(is)h(a)g(lo)r(op)f Fl(\015)973 410 y Fc(0)996
440 y Fq(,)j(homotopic)d(rel)h(endp)r(oin)n(ts)g(to)g
Fl(\015)5 b Fq(,)37 b(whic)n(h)d(consists)h(of)g(t)n(w)n(o)0
540 y(paths)29 b(eac)n(h)f(lying)h(in)g(a)g(circle)g(\014b)r(er)g(in)g
(the)h(b)r(oundary)e(tori,)h(with)g(a)g(single)g(path)g(in)g(a)g(leaf)0
639 y(of)c Fm(F)33 b Fq(lying)25 b(in)g(b)r(et)n(w)n(een.)36
b(This)25 b(lifts)h(to)f(a)g(path)g(homotopic)g(rel)f(endp)r(oin)n(ts)h
(to)h Fk(e)-47 b Fl(\015)5 b Fq(,)26 b(consisting)0 739
y(of)34 b(paths)g(in)g(the)h(t)n(w)n(o)e(lifted)i(tori,)g(and)f(a)g
(path)g(in)g(some)g(lifted)h(leaf.)56 b(This)34 b(middle)h(path)0
839 y(demonstrates)27 b(that)g Fi(some)i Fq(lifted)f(leaf)g
Fl(L)f Fq(hits)h(b)r(oth)g Fl(P)1763 851 y Fj(1)1828
839 y Fq(and)f Fl(P)2042 851 y Fj(2)2080 839 y Fq(.)1044
1858 y @beginspecial 231 @llx 396 @lly 490 @urx 648 @ury
1080 @rwi @setspecial
%%BeginDocument: fig2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 8
%%For: (Mark Brittenham) ( )
%%Title: (fig2.eps)
%%CreationDate: (10/19/00) (11:31 PM)
%%BoundingBox: 231 396 490 648
%%DocumentProcessColors: Black
%%DocumentFonts: Courier
%%+ Helvetica
%%+ Symbol
%%DocumentNeededFonts: Courier
%%+ Helvetica
%%+ Symbol
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 18 18 594 774
%AI3_DocumentPreview: PC_ColorTIFF
%%PageOrigin:18 18
%%AI3_PaperRect:-18 774 594 -18
%%AI3_Margin:18 -14 -18 18
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Courier
%%IncludeFont: Helvetica
%%IncludeFont: Symbol
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Courier Courier
[/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/space
/exclam
/universal
/numbersign
/existential
/percent
/ampersand
/suchthat
/parenleft
/parenright
/asteriskmath
/plus
/comma
/minus
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/congruent
/Alpha
/Beta
/Chi
/Delta
/Epsilon
/Phi
/Gamma
/Eta
/Iota
/theta1
/Kappa
/Lambda
/Mu
/Nu
/Omicron
/Pi
/Theta
/Rho
/Sigma
/Tau
/Upsilon
/sigma1
/Omega
/Xi
/Psi
/Zeta
/bracketleft
/therefore
/bracketright
/perpendicular
/underscore
/radicalex
/alpha
/beta
/chi
/delta
/epsilon
/phi
/gamma
/eta
/iota
/phi1
/kappa
/lambda
/mu
/nu
/omicron
/pi
/theta
/rho
/sigma
/tau
/upsilon
/omega1
/omega
/xi
/psi
/zeta
/braceleft
/bar
/braceright
/similar
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/Euro
/Upsilon1
/minute
/lessequal
/fraction
/infinity
/florin
/club
/diamond
/heart
/spade
/arrowboth
/arrowleft
/arrowup
/arrowright
/arrowdown
/degree
/plusminus
/second
/greaterequal
/multiply
/proportional
/partialdiff
/bullet
/divide
/notequal
/equivalence
/approxequal
/ellipsis
/arrowvertex
/arrowhorizex
/carriagereturn
/aleph
/Ifraktur
/Rfraktur
/weierstrass
/circlemultiply
/circleplus
/emptyset
/intersection
/union
/propersuperset
/reflexsuperset
/notsubset
/propersubset
/reflexsubset
/element
/notelement
/angle
/gradient
/registerserif
/copyrightserif
/trademarkserif
/product
/radical
/dotmath
/logicalnot
/logicaland
/logicalor
/arrowdblboth
/arrowdblleft
/arrowdblup
/arrowdblright
/arrowdbldown
/lozenge
/angleleft
/registersans
/copyrightsans
/trademarksans
/summation
/parenlefttp
/parenleftex
/parenleftbt
/bracketlefttp
/bracketleftex
/bracketleftbt
/bracelefttp
/braceleftmid
/braceleftbt
/braceex
/.notdef
/angleright
/integral
/integraltp
/integralex
/integralbt
/parenrighttp
/parenrightex
/parenrightbt
/bracketrighttp
/bracketrightex
/bracketrightbt
/bracerighttp
/bracerightmid
/bracerightbt
/.notdef
/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 R
0 0 0 1 K
0 i
0 J 0 j 4 w 4 M []0 d
%AI3_Note:
0 D
432 476.9995 m
432 396 l
S
6 w [4 6 ]0 d
432 576.0005 m
432 476.9995 l
S
4 w []0 d
432 648 m
432 576.0005 l
S
1 w
432 576.0005 m
414 576 342 576 315 585 c
S
432 558 m
414 558 333 558 315 567 c
S
432 549 m
405 549 342 540 315 540 c
S
432 531 m
414 531 333 540 315 522 c
S
432 513 m
405 513 333 504 315 504 c
S
432 495 m
405 495 333 495 315 495 c
S
432 477 m
396 486 333 477 315 477 c
S
432 459 m
405 459 342 477 315 459 c
S
432 441 m
405 441 333 450 315 450 c
S
432 423 m
405 423 342 423 315 432 c
S
432 594 m
405 594 342 603 315 603 c
S
432 621 m
405 621 342 603 315 612 c
S
2 w [4 6 ]0 d
315 648 m
315 396 l
S
8 w []0 d
432 576.0005 m
414 575.9995 342 575.9995 315 585 c
315 477 l
S
6 w [4 6 ]0 d
432 477 m
396 486 333 477 315 477 c
S
0 To
1 0 0 1 270 504 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
1 w []0 d
/_Symbol 36 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(g) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 450 612 0 Tp
TP
0 Tr
/_Helvetica 36 Tf
(P) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 468 603 0 Tp
TP
0 Tr
/_Helvetica 24 Tf
(i) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 450 522 0 Tp
TP
0 Tr
/_Symbol 36 Tf
(g) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 468 522 0 Tp
TP
0 Tr
/_Courier 36 Tf
(') Tx 1 0 Tk
(\r) TX 
TO
0 R
0 0 0 1 K
8 w
315 477 m
288 477 261 486 234 459 c
S
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1343 1957 a(Figure)g(2)100 2123 y(By)35
b(c)n(ho)r(osing)f(a)h(p)r(oin)n(t)h(where)f(an)n(y)f(other)h(lifted)i
(leaf)e Fl(L)1964 2093 y Fc(0)2022 2123 y Fq(hits)h(a)f(lift)i
Fl(P)47 b Fq(of)35 b(a)h(splitting)0 2223 y(torus,)24
b(and)f(joining)h(it)g(b)n(y)f(a)g(path)h Fl(\013)g Fq(to)f(a)h(p)r
(oin)n(t)f(where)h Fl(L)f Fq(hits)h Fl(P)2086 2235 y
Fj(1)2147 2223 y Fq(or)f Fl(P)2298 2235 y Fj(2)2335 2223
y Fq(,)i(w)n(e)e(can)g(apply)g(the)0 2322 y(same)i(straigh)n(tening)f
(pro)r(cedure)h(as)g(ab)r(o)n(v)n(e)f(\(see)h(Figure)g(3\),)h(to)g(sho)
n(w)e(that)i Fl(\013)g Fq(is)g(homotopic)0 2422 y(rel)g(endp)r(oin)n
(ts)g(to)h(paths,)f(one)g(of)h(whic)n(h)f(lies)g(in)h(a)f(lifted)h
(\014b)r(er)g(and)f(then)h(lies)f(totally)g(in)h Fl(L)2943
2392 y Fc(0)2966 2422 y Fq(,)0 2522 y(and)c(the)g(other)g(of)g(whic)n
(h)f(lies)h(totally)g(in)g Fl(L)p Fq(,)h(and)e(then)i(in)f(a)g(lifted)h
(\014b)r(er.)35 b(This)23 b(in)g(particular)0 2621 y(implies)31
b(that)h Fl(L)526 2591 y Fc(0)580 2621 y Fq(also)e(hits)i
Fl(P)969 2633 y Fj(1)1038 2621 y Fq(and)f Fl(P)1256 2633
y Fj(2)1294 2621 y Fq(.)47 b(Therefore,)32 b(ev)n(ery)e(lifted)i(leaf)f
(hits)g(b)r(oth)h Fl(P)2786 2633 y Fj(1)2855 2621 y Fq(and)0
2721 y Fl(P)53 2733 y Fj(2)91 2721 y Fq(,)27 b(as)g(desired.)1044
3753 y @beginspecial 161 @llx 342 @lly 471 @urx 648 @ury
1080 @rwi @setspecial
%%BeginDocument: fig3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 8
%%For: (Mark Brittenham) ( )
%%Title: (fig3.eps)
%%CreationDate: (10/19/00) (9:38 PM)
%%BoundingBox: 161 342 471 648
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 18 18 594 774
%AI3_DocumentPreview: PC_ColorTIFF
%%PageOrigin:18 18
%%AI3_PaperRect:-18 774 594 -18
%%AI3_Margin:18 -14 -18 18
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 0.3 w 4 M []0 d
%AI3_Note:
0 D
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
1 D
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 i
0 J 0 j 4 w 4 M []0 d
%AI3_Note:
0 D
432 648 m
432 342 l
B
216 450 m
216 342 l
B
216 450 m
B
216 584.9995 m
B
216 648 m
216 584.9995 l
B
2 w
432 556.0474 m
216 556.0474 l
B
8 w
216 585 m
432 585 l
432 450 l
S
0 O
0 0 0 1 k
2 w
432 531 m
216 531 l
B
432 504 m
216 504 l
B
8 w [4 6 ]0 d
432 450 m
216 450 l
216 585 l
S
0 O
0 0 0 1 k
2 w []0 d
432 423 m
216 423 l
B
432 396 m
B
216 396 m
432 396 l
B
432 369 m
216 369 l
B
0 To
1 0 0 1 317.3809 601.2856 0 Tp
TP
0 Tr
1 w
/_Helvetica 36 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(L) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 316.0479 462.5239 0 Tp
TP
0 Tr
(L) Tx 1 0 Tk
(\r) TX 
TO
0 To
0.9888 -0.1494 0.1494 0.9888 329.2861 466.7617 0 Tp
TP
0 Tr
(') Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 161.4282 522.7144 0 Tp
TP
0 Tr
(P) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 446.3818 513.1904 0 Tp
TP
0 Tr
(P) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 464.3818 504.8574 0 Tp
TP
0 Tr
/_Helvetica 24 Tf
(i) Tx 1 0 Tk
(\r) TX 
TO
0 To
0.9888 -0.1494 0.1494 0.9888 185.2979 528.519 0 Tp
TP
0 Tr
/_Helvetica 36 Tf
(') Tx 1 0 Tk
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1343 3852 a(Figure)g(3)100 4018 y(The)h(inductiv)n(e)h
(step)g(is)g(nearly)e(iden)n(tical;)i(assuming)f(our)g(t)n(w)n(o)g(lea)
n(v)n(es)f Fl(L)2470 4030 y Fj(1)2535 4018 y Fq(and)i
Fl(L)2755 4030 y Fj(2)2820 4018 y Fq(b)r(oth)0 4118 y(hit)f
Fl(P)182 4130 y Fj(1)220 4118 y Fl(;)14 b(:)g(:)g(:)27
b(;)14 b(P)471 4130 y Fd(n)p Fc(\000)p Fj(1)630 4118
y Fq(,)28 b(and)f Fl(P)895 4130 y Fd(n)969 4118 y Fq(can)g(b)r(e)h
(reac)n(hed)f(from)g Fl(P)1786 4130 y Fd(n)p Fc(\000)p
Fj(1)1945 4118 y Fq(without)h(passing)f(through)g(an)n(y)0
4217 y(other)32 b(lift)h(of)g(a)f(splitting)h(torus,)g(the)g(ab)r(o)n
(v)n(e)e(argumen)n(t)g(implies)i(that)g(t)n(w)n(o)f(lea)n(v)n(es,)g(in)
g(the)0 4317 y(lift)26 b(of)f(the)h(relev)-5 b(an)n(t)25
b(Seifert)g(\014b)r(ered)h(piece,)f(and)g(con)n(tained)g(in)h
Fl(L)2118 4329 y Fj(1)2180 4317 y Fq(and)f Fl(L)2396
4329 y Fj(2)2433 4317 y Fq(,)h(hit)f(b)r(oth)h Fl(L)2859
4329 y Fd(n)p Fc(\000)p Fj(1)0 4416 y Fq(and)h Fl(L)218
4428 y Fd(n)263 4416 y Fq(,)h(implying)f(that)h Fl(L)894
4428 y Fj(1)959 4416 y Fq(and)f Fl(L)1177 4428 y Fj(2)1242
4416 y Fq(also)f(b)r(oth)i(hit)g Fl(P)1786 4428 y Fd(n)1832
4416 y Fq(.)100 4527 y(But)d(this)g(in)h(turn)f(implies)g(that)h(the)f
(lifted)h(foliation)1850 4506 y Fk(e)1830 4527 y Fm(F)33
b Fq(has)24 b(space)h(of)g(lea)n(v)n(es)e Fs(R)p Fq(.)36
b(This)25 b(is)0 4633 y(b)r(ecause)30 b(the)h(foliation)e(induced)i(b)n
(y)1233 4612 y Fk(e)1213 4633 y Fm(F)38 b Fq(on)30 b(an)n(y)g(lift)h
Fl(P)42 b Fq(of)30 b(a)g(splitting)h(torus)e(is)h(a)g(foliation)0
4732 y(transv)n(erse)f(to)j(\(either)f(of)h(the\))g(foliations)f(b)n(y)
g(lifts)h(of)g(circle)f(\014b)r(ers,)h(and)f(so)g(has)g(space)g(of)0
4832 y(lea)n(v)n(es)j Fs(R)p Fq(,)k(whic)n(h)d(can)g(b)r(e)i(iden)n
(ti\014ed)f(with)g(one)f(of)h(the)g(lifts)g(of)g(a)f(circle)g(\014b)r
(er.)61 b([This)36 b(is)0 4932 y(probably)31 b(most)h(easily)f(seen)h
(in)g(stages:)44 b(\014rst)32 b(pass)f(to)h(a)g(cylindrical)f(co)n(v)n
(er)f(of)i(the)h(torus,)0 5031 y(for)25 b(whic)n(h)g(the)h(circle)e
(\014b)r(ers)h(lift)i(homeomorpically)-7 b(.)34 b(The)25
b(induced)h(foliation)f(from)g Fm(F)33 b Fq(is)25 b(b)n(y)p
eop
%%Page: 8 8
8 7 bop 0 42 a Fo(8)1187 b(Mark)24 b(Brittenham)0 241
y Fq(lines)29 b(transv)n(erse)e(to)i(this)h(\014b)r(ering,)f(and)g(so)g
(has)g(space)f(of)h(lea)n(v)n(es)f(one)h(of)g(the)g(circle)g(\014b)r
(ers.)0 340 y(The)24 b(univ)n(ersal)f(co)n(v)n(er)f Fl(P)36
b Fq(is)24 b(a)g(cyclic)g(co)n(v)n(ering)e(of)i(this,)h(whose)f
(induced)g(foliation)g(has)g(space)0 440 y(of)30 b(lea)n(v)n(es)e(the)i
(univ)n(ersal)f(co)n(v)n(er)f(of)i(the)g(circle)f(\014b)r(er.])44
b(The)30 b(argumen)n(t)f(ab)r(o)n(v)n(e)f(implies)j(that)0
550 y(ev)n(ery)k(leaf)h(of)515 529 y Fk(e)495 550 y Fm(F)44
b Fq(hits)37 b Fl(P)48 b Fq(at)36 b(least)g(once.)63
b(But)37 b(no)f(leaf)g(of)2017 529 y Fk(e)1997 550 y
Fm(F)44 b Fq(can)36 b(hit)h(a)f(lift)h(of)f(a)g(circle)0
650 y(\014b)r(er)24 b Fi(mor)l(e)h Fq(than)f(once;)h(b)n(y)f(standard)f
(argumen)n(ts,)g(using)h(transv)n(erse)e(orien)n(tabilit)n(y)-7
b(,)24 b(a)g(path)0 749 y(in)30 b(the)g(leaf)g(joining)g(t)n(w)n(o)f
(suc)n(h)g(p)r(oin)n(ts)h(could)f(b)r(e)i(used)e(to)h(build)g(a)g(\(n)n
(ull-homotopic\))f(lo)r(op)0 859 y(transv)n(erse)36 b(to)536
838 y Fk(e)516 859 y Fm(F)8 b Fq(,)40 b(con)n(tradicting)d(tautness)h
(of)g Fm(F)8 b Fq(,)40 b(via)e(No)n(vik)n(o)n(v's)d(Theorem)j([No].)67
b(W)-7 b(e)0 969 y(therefore)25 b(ha)n(v)n(e)g(a)h(one-to-one)e
(corresp)r(ondence)h(b)r(et)n(w)n(een)h(the)g(lea)n(v)n(es)f(of)2398
948 y Fk(e)2378 969 y Fm(F)34 b Fq(and)26 b(\(an)n(y!\))36
b(lift)0 1069 y(of)28 b(a)f(circle)g(\014b)r(er)g(in)h(an)n(y)f(of)h
(the)g(Seifert-\014b)r(ered)f(pieces,)g(giving)g(our)g(conclusion:)0
1239 y Fs(Prop)s(osition)d(7.)47 b Fi(A)n(ny)24 b(foliation)i(of)g(a)e
(gr)l(aph)i(manifold)h Fl(M)9 b Fi(,)25 b(which)h(r)l(estricts)e(to)h
(a)g(foliation)0 1339 y(tr)l(ansverse)30 b(to)f(the)h(\014b)l(ers)g(of)
g(every)h(Seifert-\014b)l(er)l(e)l(d)f(pie)l(c)l(e)h(of)f
Fl(M)9 b Fi(,)30 b(is)g Fs(R)p Fi(-c)l(over)l(e)l(d.)86
b Ff(\003)100 1509 y Fq(Com)n(bining)27 b(this)h(with)g(the)g(result)f
(of)g(Luec)n(k)n(e)g(and)h(W)-7 b(u,)28 b(w)n(e)f(obtain:)0
1679 y Fs(Corollary)d(8.)47 b Fi(Every)24 b(gr)l(aph)h(manifold,)i
(whose)d(Seifert-\014b)l(er)l(e)l(d)g(pie)l(c)l(es)g(al)t(l)h(have)f
(hyp)l(erb)l(olic)0 1779 y(b)l(ase)h(orbifold,)k(is)c(\014nitely)g(c)l
(over)l(e)l(d)h(by)f(a)h(manifold)g(admitting)g(an)f
Fs(R)p Fi(-c)l(over)l(e)l(d)g(foliation.)87 b Ff(\003)100
1949 y Fq(Com)n(bining)27 b(the)h(prop)r(osition)e(with)i(our)f(main)h
(resiult,)f(w)n(e)g(obtain:)0 2119 y Fs(Corollary)21
b(9.)47 b Fi(Ther)l(e)22 b(exist)f(gr)l(aph)i(manifolds,)i(admitting)d
(no)f Fs(R)p Fi(-c)l(over)l(e)l(d)h(foliations,)j(which)0
2219 y(ar)l(e)30 b(\014nitely)g(c)l(over)l(e)l(d)h(by)f(manifolds)h
(admitting)g Fs(R)p Fi(-c)l(over)l(e)l(d)f(foliations.)87
b Ff(\003)1453 2517 y Fm(x)p Fr(4)1058 2616 y(Concluding)30
b(remarks)100 2773 y Fq(Being)f(\014nitely)h(co)n(v)n(ered)e(b)n(y)h(a)
g(manifold)h(admitting)g(an)f Fs(R)p Fq(-co)n(v)n(ered)e(foliation)i
(is)h(nearly)0 2872 y(as)36 b(go)r(o)r(d)h(as)f(ha)n(ving)h(an)f
Fs(R)p Fq(-co)n(v)n(ered)f(foliation)i(y)n(ourself.)64
b(An)n(y)37 b(prop)r(ert)n(y)f(that)i(could)e(b)r(e)0
2972 y(v)n(eri\014ed)f(in)h(the)g(presence)f(of)h(an)f
Fs(R)p Fq(-co)n(v)n(ered)f(foliation,)j(whic)n(h)f(remains)f
(`virtually')g(true)0 3071 y(\(e.g.,)c(virtually)f(Hak)n(en,)h(or)f(ha)
n(ving)g(residually)f(\014nite)j(fundamen)n(tal)e(group\),)h(w)n(ould)f
(then)0 3171 y(b)r(e)e(true)g(of)f(the)h(original)e(manifold.)37
b(It)28 b(w)n(ould)f(then)h(b)r(e)g(of)g(in)n(terest)f(to)g(kno)n(w:)0
3341 y Fs(Question)39 b(1.)47 b Fi(Do)l(es)37 b(every)g(3-manifold)i
(with)e(universal)g(c)l(over)h Fl(R)2230 3311 y Fj(3)2303
3341 y Fi(have)g(a)f(\014nite)f(c)l(over)0 3441 y(admitting)30
b(an)g Fs(R)p Fi(-c)l(over)l(e)l(d)g(foliation?)100 3611
y Fq(Or,)c(ev)n(en)i(stronger:)0 3781 y Fs(Question)43
b(2.)k Fi(Do)l(es)40 b(every)g(irr)l(e)l(ducible)h(3-manifold)h(with)f
(in\014nite)e(fundamental)h(gr)l(oup)0 3881 y(have)31
b(a)f(\014nite)f(c)l(over)i(admitting)f(an)g Fs(R)p Fi(-c)l(over)l(e)l
(d)g(foliation?)100 4051 y Fq(W)-7 b(eak)n(er,)26 b(but)i(still)g(in)n
(teresting:)0 4222 y Fs(Question)38 b(3.)47 b Fi(Do)l(es)36
b(every)h(tautly)e(foliate)l(d)j(3-manifold)g(have)g(a)e(\014nite)f(c)l
(over)i(admitting)0 4321 y(an)30 b Fs(R)p Fi(-c)l(over)l(e)l(d)g
(foliation?)100 4491 y Fq(The)d(\014rst)h(t)n(w)n(o)e(questions)h
(could)h(b)r(e)g(brok)n(en)e(do)n(wn)h(in)n(to)h(Question)f(3)g(and)0
4662 y Fs(Question)22 b(4.)47 b Fi(Do)l(es)22 b(every)i(3-manifold)h
(\(in)d(the)h(appr)l(opriate)i(class\))f(have)f(a)h(tautly)e(foliate)l
(d)0 4761 y(\014nite)29 b(c)l(over?)100 4932 y Fq(Note)j(that)i(sho)n
(wing)d(that)i(ev)n(ery)f(irreducible)g(3-manifold)g(with)h(in\014nite)
h(fundamen)n(tal)0 5031 y(group)26 b(has)i(a)f(tautly)g(foliated)h
(\014nite)g(co)n(v)n(er)e(w)n(ould)h(settle)h(the)p eop
%%Page: 9 9
9 8 bop 1130 42 a Fo(No)23 b Fn(R)p Fo(-co)n(v)n(ered)h(foliations)1095
b(9)0 241 y Fs(Conjecture.)48 b Fi(Every)22 b(irr)l(e)l(ducible)h
(3-manifold)h(with)e(in\014nite)f(fundamental)h(gr)l(oup)g(has)g(uni-)0
340 y(versal)31 b(c)l(over)f Fl(R)520 310 y Fj(3)557
340 y Fi(.)100 489 y Fq(Questions)23 b(1)h(and)h(2)f(can)g(b)r(e)h
(though)n(t)f(of)g(as)g(w)n(eak)n(er)f(v)n(ersions)f(of)j(the)g
(\(still)g(unansw)n(ered\))0 588 y(question,)f(due)g(to)g(Th)n(urston,)
g(of)g(whether)f(or)g(not)h(ev)n(ery)e(h)n(yp)r(erb)r(olic)i
(3-manifold)f(is)g(\014nitely)0 688 y(co)n(v)n(ered)34
b(b)n(y)i(a)g(bundle)h(o)n(v)n(er)e(the)h(circle;)41
b(the)36 b(foliation)g(b)n(y)g(bundle)h(\014b)r(ers)f(is)g
Fs(R)p Fq(-co)n(v)n(ered.)0 788 y(Gabai)d([Ga2])f(has)h(noted)g(that)h
(there)f(are)f(Seifert-\014b)r(ered)h(spaces)f(for)h(whic)n(h)g(the)g
(answ)n(er)0 887 y(to)i(Th)n(urston's)f(question)h(is)g(`No',)j
(although)c(an)h(observ)-5 b(ation)34 b(of)h(Luec)n(k)n(e)g(and)g(W)-7
b(u)36 b([L)-9 b(W])0 987 y(implies)41 b(that,)j(via)d(the)g(results)f
([EHN],)h(the)g(answ)n(er)e(to)i(our)f(Question)g(1)g(is)h(`Y)-7
b(es',)44 b(for)0 1086 y(Seifert-\014b)r(ered)28 b(spaces,)e(since)i
([Br4])f(a)g(transv)n(erse)e(foliation)j(of)f(a)g(Seifert-\014b)r(ered)
h(space)f(is)0 1186 y Fs(R)p Fq(-co)n(v)n(ered.)53 b([Note)33
b(that)h(the)g(argumen)n(ts)f(of)h(the)g(previous)e(section)h(can)h(b)r
(e)g(mo)r(di\014ed)g(to)0 1286 y(giv)n(e)27 b(a)g(di\013eren)n(t)h(pro)
r(of)f(of)h(this;)g(lo)r(ok)f(at)g(ho)n(w)g(lifted)i(lea)n(v)n(es)d
(meet)i(lifts)h(of)e(a)g(single)h(regular)0 1385 y(\014b)r(er,)g
(instead)f(of)h(lifts)g(of)g(the)g(splitting)g(tori.])37
b(Question)27 b(4,)g(with)h(its)g(conclusion)f(replaced)0
1485 y(b)n(y)36 b(`ha)n(v)n(e)f(a)h(taut)h(foliation',)h(has)d(as)h
(answ)n(er)f(`No';)40 b(examples)c(w)n(ere)f(\014rst)h(found)h(among)0
1585 y(Seifert-\014b)r(ered)f(spaces)g([Br1],[Cl];)k(there)c(are)f(no)i
(kno)n(wn)e(examples)h(among)f(h)n(yp)r(erb)r(olic)0
1684 y(manifolds.)0 1832 y Fs(Question)30 b(5.)47 b Fi(Do)30
b(ther)l(e)g(exist)g(hyp)l(erb)l(olic)i(3-manifolds)f(admitting)g(no)f
(taut)e(foliations?)100 1981 y Fq(Finally)-7 b(,)26 b(the)h(result)f(w)
n(e)g(ha)n(v)n(e)f(established)h(here)g(for)g(graph)f(manifolds)h(is)h
(still)f(unkno)n(wn)0 2080 y(for)h(h)n(yp)r(erb)r(olic)g(3-manifolds:)0
2229 y Fs(Question)e(6.)47 b Fi(Do)25 b(ther)l(e)h(exist)f(hyp)l(erb)l
(olic)i(3-manifolds)g(which)g(admit)f(taut)f(foliations,)j(but)0
2328 y(no)i Fs(R)p Fi(-c)l(over)l(e)l(d)g(foliations?)1252
2574 y Fr(References)0 2707 y Fo([Ba])116 b(T.)38 b(Barb)r(ot,)k
Fh(Car)l(act)n(\023)-35 b(erisation)41 b(des)e(\015ots)h(d'A)n(nosov)g
(en)f(dimension)h(3)f(p)l(ar)i(leurs)e(feuil)t(letages)241
2790 y(faibles.)p Fo(,)23 b(Ergo)r(dic)h(Theory)g(Dynam.)e(Systems)i
Fn(15)f Fo(\(1995\),)i(247-270.)0 2873 y([BNR])46 b(M.)25
b(Brittenham,)g(R.)h(Naimi,)e(and)i(R.)f(Rob)r(erts,)i
Fh(Gr)l(aph)i(manifolds)g(and)g(taut)e(foliations)p Fo(,)g(J.)f
(Di\013.)241 2956 y(Geom.)d Fn(45)g Fo(\(1997\),)i(446-470.)0
3039 y([BR])99 b(M.)32 b(Brittenham)g(and)h(R.)f(Rob)r(erts,)i
Fh(When)g(inc)l(ompr)l(essible)h(tori)f(me)l(et)g(essential)g
(laminations)p Fo(,)241 3122 y(P)n(aci\014c)24 b(J.)g(Math)g
Fn(190)e Fo(\(1999\),)k(21-40.)0 3205 y([Br1])88 b(M.)16
b(Brittenham,)i Fh(Essential)i(laminations)h(in)f(Seifert-\014b)l(er)l
(e)l(d)f(sp)l(ac)l(es)p Fo(,)g(T)-6 b(op)r(ology)20 b
Fn(32)e Fo(\(1993\),)i(61-85.)0 3288 y([Br2])p 241 3288
212 4 v 311 w(,)27 b Fh(Essential)h(laminations)h(in)f
Fb(I)-7 b Fh(-)o(bund)t(les)p Fo(,)21 b(T)-6 b(ransactions)27
b(of)e(the)i(AMS)f Fn(349)g Fo(\(1997\),)i(1463-)241
3371 y(1485.)0 3454 y([Br3])p 241 3454 V 311 w(,)40 b
Fh(Essential)e(laminations)i(in)d(Seifert-\014b)l(er)l(e)l(d)g(sp)l(ac)
l(es:)59 b(b)l(oundary)39 b(b)l(ehavior)p Fo(,)i(T)-6
b(op)r(ology)241 3537 y(Appl.)23 b Fn(95)g Fo(\(1999\),)i(47-62.)0
3620 y([Br4])p 241 3620 V 311 w(,)e Fh(Exc)l(eptional)j(Seifert-\014b)l
(er)l(e)l(d)f(sp)l(ac)l(es)i(and)f(Dehn)f(sur)l(gery)g(on)g
Fo(2)p Fh(-bridge)g(knots)p Fo(,)e(T)-6 b(op)r(ology)241
3703 y Fn(37)23 b Fo(\(1998\),)i(665-672.)0 3786 y([Ca])115
b(D.)24 b(Calegari,)g Fh(F)-5 b(oliations)28 b(and)f(the)f(ge)l(ometry)
g(of)h(3-manifolds)p Fo(,)f(Thesis,)e(Univ)n(ersit)n(y)h(of)f
(California)241 3869 y(at)g(Berk)n(eley)g(\(2000\).)0
3952 y([Cl])130 b(W.)21 b(Claus,)g Fh(Essential)j(laminations)g(in)g
(close)l(d)g(Seifert-\014b)l(er)l(e)l(d)f(sp)l(ac)l(es)p
Fo(,)f(Thesis,)f(Univ.)f(of)h(T)-6 b(exas)22 b(at)241
4035 y(Austin)i(\(1991\).)0 4118 y([EHN])47 b(D.)22 b(Eisen)n(bud,)h
(U.)f(Hirsc)n(h,)g(and)h(W.)g(Neumann,)f Fh(T)-5 b(r)l(ansverse)25
b(F)-5 b(oliations)26 b(on)f(Seifert)f(Bund)t(les)h(and)241
4201 y(Self-home)l(omorphisms)k(of)d(the)f(Cir)l(cle)p
Fo(,)e(Commen)n(t.)f(Math.)i(Helv.)f Fn(56)g Fo(\(1981\),)i(638-660.)0
4284 y([F)-6 b(e])130 b(S.)23 b(F)-6 b(enley,)24 b Fh(A)n(nosov)j
(\015ows)f(in)g(3-manifolds)p Fo(,)f(Annals)e(of)g(Math)h
Fn(139)f Fo(\(1994\),)i(79-115.)0 4367 y([Ga1])76 b(D.)23
b(Gabai,)h Fh(F)-5 b(oliations)27 b(and)f(the)f(top)l(olo)l(gy)j(of)e
(3-manifolds)p Fo(,)e(J.)g(Di\013.)e(Geom.)h Fn(18)g
Fo(\(1983\),)i(445-503.)0 4450 y([Ga2])p 241 4450 V 299
w(,)18 b Fh(On)h Fo(3)p Fh(-manifolds)h(\014nitely)f(c)l(over)l(e)l(d)h
(by)e(surfac)l(e)i(bund)t(les)p Fo(,)e(Lo)n(w-dimensional)d(top)r
(ology)j(and)241 4533 y(Kleinian)23 b(groups)h(\(Co)n(v)n(en)n
(try/Durham,)g(1984\),)h(Cam)n(bridge)e(Univ.)g(Press,)f(1986,)j(pp.)e
(145-155.)0 4616 y([GS])107 b(S.)29 b(Go)r(o)r(dman)h(and)g(S.)f
(Shields,)i Fh(A)g(c)l(ondition)h(for)f(the)g(stability)f(of)i
Fn(R)p Fh(-c)l(over)l(e)l(d)f(on)g(foliations)h(of)241
4699 y(3-manifolds)p Fo(,)25 b(T)-6 b(rans.)23 b(AMS)g
Fn(352)g Fo(\(2000\),)i(4051-4065.)0 4782 y([He])117
b(J.)17 b(Hemp)r(el,)h Fh(3-Manifolds)p Fo(,)h(Annals)f(of)f(Math.)h
(Studies)g(No.)f(86,)i(Princeton)g(Univ)n(ersit)n(y)e(Press,)h(1976.)0
4865 y([Na])113 b(R.)24 b(Naimi,)e Fh(F)-5 b(oliations)27
b(tr)l(ansverse)g(to)f(\014b)l(ers)h(of)f(Seifert)f(manifolds)p
Fo(,)h(Commen)n(t.)d(Math.)h(Helv.)g Fn(69)241 4948 y
Fo(\(1994\),)h(155-162.)0 5031 y([No])113 b(S.)23 b(No)n(vik)n(o)n(v,)h
Fh(T)-5 b(op)l(olo)l(gy)27 b(of)f(foliations)p Fo(,)e(T)-6
b(rans)24 b(Mosco)n(w)g(Math)g(So)r(c)g Fn(14)f Fo(\(1965\),)i
(268-305.)p eop
%%Page: 10 10
10 9 bop 0 42 a Fo(10)1152 b(Mark)24 b(Brittenham)0 241
y([P)n(a])120 b(C.)23 b(P)n(almeira,)f Fh(Op)l(en)k(manifolds)h
(foliate)l(d)f(by)f(planes)p Fo(,)g(Annals)e(of)g(Math)i
Fn(107)p Fo(,)d(109-121.)0 324 y([Th])111 b(W.)24 b(Th)n(urston,)f
Fh(Thr)l(e)l(e-manifolds,)28 b(F)-5 b(oliations)27 b(and)f(Cir)l(cles,)
g(I)p Fo(,)d(preprin)n(t.)0 407 y([L)-8 b(W])93 b(J.)31
b(Luec)n(k)n(e)i(and)f(Y.-Q.)e(W)-6 b(u,)34 b Fh(R)l(elative)f(Euler)g
(numb)l(er)h(and)f(\014nite)g(c)l(overs)g(of)g(gr)l(aph)h(manifolds)p
Fo(,)241 490 y(Geometric)24 b(top)r(ology)h(\(A)n(thens,)f(GA,)g
(1993\),)g(Amer.)e(Math.)i(So)r(c.,)f(1997,)h(pp.)g(80-103.)100
672 y Fp(Dep)l(ar)l(tment)h(of)f(Ma)l(thema)l(tics)f(and)i(St)l(a)l
(tistics,)d(University)j(of)f(Nebraska,)h(Lincoln,)g(NE)0
756 y(68588-0323)100 839 y Fh(E-mail)h(addr)l(ess)5 b
Fo(:)37 b Fa(mbritten@math.unl.edu)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
